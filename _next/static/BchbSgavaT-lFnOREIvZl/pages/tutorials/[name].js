(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"+5j6":function(e,t,n){"use strict";var o=n("U6jy"),r=n("IujW"),i=n("spUR")();function a(e){var t=[i].concat(e.astPlugins||[]);return r(o(e,{astPlugins:t}))}a.defaultProps=r.defaultProps,a.propTypes=r.propTypes,a.types=r.types,a.renderers=r.renderers,a.uriTransformer=r.uriTransformer,e.exports=a},"+XMi":function(e,t,n){"use strict";(function(t){var o=n("33yf"),r=n("48q5"),i=n("BEtg");e.exports=l;var a={}.hasOwnProperty,s=l.prototype;s.toString=function(e){var t=this.contents||"";return i(t)?t.toString(e):String(t)};var c=["history","path","basename","stem","extname","dirname"];function l(e){var n,o,r;if(e){if("string"===typeof e||i(e))e={contents:e};else if("message"in e&&"messages"in e)return e}else e={};if(!(this instanceof l))return new l(e);for(this.data={},this.messages=[],this.history=[],this.cwd=t.cwd(),o=-1,r=c.length;++o<r;)n=c[o],a.call(e,n)&&(this[n]=e[n]);for(n in e)-1===c.indexOf(n)&&(this[n]=e[n])}function u(e,t){if(-1!==e.indexOf(o.sep))throw new Error("`"+t+"` cannot be a path: did not expect `"+o.sep+"`")}function h(e,t){if(!e)throw new Error("`"+t+"` cannot be empty")}function d(e,t){if(!e)throw new Error("Setting `"+t+"` requires `path` to be set too")}Object.defineProperty(s,"path",{get:function(){return this.history[this.history.length-1]},set:function(e){h(e,"path"),e!==this.path&&this.history.push(e)}}),Object.defineProperty(s,"dirname",{get:function(){return"string"===typeof this.path?o.dirname(this.path):void 0},set:function(e){d(this.path,"dirname"),this.path=o.join(e||"",this.basename)}}),Object.defineProperty(s,"basename",{get:function(){return"string"===typeof this.path?o.basename(this.path):void 0},set:function(e){h(e,"basename"),u(e,"basename"),this.path=o.join(this.dirname||"",e)}}),Object.defineProperty(s,"extname",{get:function(){return"string"===typeof this.path?o.extname(this.path):void 0},set:function(e){var t=e||"";if(u(t,"extname"),d(this.path,"extname"),t){if("."!==t.charAt(0))throw new Error("`extname` must start with `.`");if(-1!==t.indexOf(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=r(this.path,t)}}),Object.defineProperty(s,"stem",{get:function(){return"string"===typeof this.path?o.basename(this.path,this.extname):void 0},set:function(e){h(e,"stem"),u(e,"stem"),this.path=o.join(this.dirname||"",e+(this.extname||""))}})}).call(this,n("8oxB"))},"+dcq":function(e,t,n){var o=n("/Ubj"),r=n("Wnyi")(o("forEach",(function(e,t){for(var n=t.length,o=0;o<n;)e(t[o]),o+=1;return t})));e.exports=r},"+qE3":function(e,t,n){"use strict";var o,r="object"===typeof Reflect?Reflect:null,i=r&&"function"===typeof r.apply?r.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};o=r&&"function"===typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var a=Number.isNaN||function(e){return e!==e};function s(){s.init.call(this)}e.exports=s,s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var c=10;function l(e){if("function"!==typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function u(e){return void 0===e._maxListeners?s.defaultMaxListeners:e._maxListeners}function h(e,t,n,o){var r,i,a,s;if(l(n),void 0===(i=e._events)?(i=e._events=Object.create(null),e._eventsCount=0):(void 0!==i.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),i=e._events),a=i[t]),void 0===a)a=i[t]=n,++e._eventsCount;else if("function"===typeof a?a=i[t]=o?[n,a]:[a,n]:o?a.unshift(n):a.push(n),(r=u(e))>0&&a.length>r&&!a.warned){a.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=e,c.type=t,c.count=a.length,s=c,console&&console.warn&&console.warn(s)}return e}function d(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function p(e,t,n){var o={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},r=d.bind(o);return r.listener=n,o.wrapFn=r,r}function f(e,t,n){var o=e._events;if(void 0===o)return[];var r=o[t];return void 0===r?[]:"function"===typeof r?n?[r.listener||r]:[r]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(r):g(r,r.length)}function m(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"===typeof n)return 1;if(void 0!==n)return n.length}return 0}function g(e,t){for(var n=new Array(t),o=0;o<t;++o)n[o]=e[o];return n}Object.defineProperty(s,"defaultMaxListeners",{enumerable:!0,get:function(){return c},set:function(e){if("number"!==typeof e||e<0||a(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");c=e}}),s.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(e){if("number"!==typeof e||e<0||a(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},s.prototype.getMaxListeners=function(){return u(this)},s.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var o="error"===e,r=this._events;if(void 0!==r)o=o&&void 0===r.error;else if(!o)return!1;if(o){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var s=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw s.context=a,s}var c=r[e];if(void 0===c)return!1;if("function"===typeof c)i(c,this,t);else{var l=c.length,u=g(c,l);for(n=0;n<l;++n)i(u[n],this,t)}return!0},s.prototype.addListener=function(e,t){return h(this,e,t,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(e,t){return h(this,e,t,!0)},s.prototype.once=function(e,t){return l(t),this.on(e,p(this,e,t)),this},s.prototype.prependOnceListener=function(e,t){return l(t),this.prependListener(e,p(this,e,t)),this},s.prototype.removeListener=function(e,t){var n,o,r,i,a;if(l(t),void 0===(o=this._events))return this;if(void 0===(n=o[e]))return this;if(n===t||n.listener===t)0===--this._eventsCount?this._events=Object.create(null):(delete o[e],o.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!==typeof n){for(r=-1,i=n.length-1;i>=0;i--)if(n[i]===t||n[i].listener===t){a=n[i].listener,r=i;break}if(r<0)return this;0===r?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,r),1===n.length&&(o[e]=n[0]),void 0!==o.removeListener&&this.emit("removeListener",e,a||t)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(e){var t,n,o;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0===--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var r,i=Object.keys(n);for(o=0;o<i.length;++o)"removeListener"!==(r=i[o])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"===typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(o=t.length-1;o>=0;o--)this.removeListener(e,t[o]);return this},s.prototype.listeners=function(e){return f(this,e,!0)},s.prototype.rawListeners=function(e){return f(this,e,!1)},s.listenerCount=function(e,t){return"function"===typeof e.listenerCount?e.listenerCount(t):m.call(e,t)},s.prototype.listenerCount=m,s.prototype.eventNames=function(){return this._eventsCount>0?o(this._events):[]}},"/Ubj":function(e,t,n){var o=n("hOtR");e.exports=function(e,t){return function(){var n=arguments.length;if(0===n)return t();var r=arguments[n-1];return o(r)||"function"!==typeof r[e]?t.apply(this,arguments):r[e].apply(r,Array.prototype.slice.call(arguments,0,n-1))}}},"/W8u":function(e,t){e.exports=function(e){return null!=e&&"function"===typeof e["@@transducer/step"]}},"/di2":function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nInitializers are the main way you expand your Actionhero server. This is where you connect to databases, modify the global `api` object with new classes and helper methods, and set up your [middleware](/tutorials/middleware).\n\nInitializers run in 3 phases coinciding with the lifecycles of the application: `initialize`, `start`, and `stop`. All `initialize` steps happen before all `start` steps. Initializers can define both methods and priorities which will happen at each phase of the server\'s lifecycle.\n\nSystem initializers (like setting up redis and the cache) have priority levels in the 100 to 1000 level range. Application initializers should run with a priority level of over 1000 to use methods created by Actionhero, as they might not exist before then. You can of course set priority levels lower than 1000 in your application (perhaps you connect to a database). The priority level split is purely convention.\n\nIn general, `initialize()` methods should create prototypes and new objects, and `start()` should boot things or connect to external resources.\n\n## Format\n\n```ts\n// initializers/myInitializer.ts\n\nimport { Initializer, api } from "actionhero";\n\nexport class myInitializer extends Initializer {\n  constructor() {\n    super();\n    this.name = "myInitializer";\n    this.loadPriority = 1000;\n    this.startPriority = 1000;\n    this.stopPriority = 1000;\n  }\n\n  async initialize() {\n    api.StuffInit = {\n      doAThing: async () => {},\n      stopStuff: async () => {}\n    };\n\n    api.log("I initialized", "debug", this.name);\n  }\n\n  async start() {\n    await api.StuffInit.startStuff();\n    api.log("I started", "debug", this.name);\n  }\n\n  async stop() {\n    await api.StuffInit.stopStuff();\n    api.log("I stopped", "debug", this.name);\n  }\n}\n```\n\nTo use a custom initializer, create a `initializers` directory in your project. Export a class that extends `actionhero.Initializer` and implements at least one of `start`, `stop` or `initialize` and specify your priorities.\n\nYou can generate a file of this type with `actionhero generate initializer --name=stuffInit`\n\n## Errors\n\nYou can throw an error at any step in the initializer. Doing so will cause Actionhero to log the error and stop the server. For example, you might throw an error if you cannot connect to an external service at boot, [like a database](https://github.com/Actionhero/ah-sequelize-plugin/blob/master/initializers/sequelize.js).\n'},"/qNp":function(e,t,n){"use strict";var o={}.hasOwnProperty;function r(e){return e&&"object"===typeof e||(e={}),a(e.line)+":"+a(e.column)}function i(e){return e&&"object"===typeof e||(e={}),r(e.start)+"-"+r(e.end)}function a(e){return e&&"number"===typeof e?e:1}e.exports=function(e){if(!e||"object"!==typeof e)return null;if(o.call(e,"position")||o.call(e,"type"))return i(e.position);if(o.call(e,"start")||o.call(e,"end"))return i(e);if(o.call(e,"line")||o.call(e,"column"))return r(e);return null}},0:function(e,t){},"0+iT":function(e,t){e.exports=function(e,t){var n;t=t||[];var o=(e=e||[]).length,r=t.length,i=[];for(n=0;n<o;)i[i.length]=e[n],n+=1;for(n=0;n<r;)i[i.length]=t[n],n+=1;return i}},"0KeI":function(e,t,n){var o=n("t3JB"),r=n("Wnyi"),i=n("TD0+"),a=r((function(e,t){return i(o(e),t)}));e.exports=a},"0fF6":function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t){void 0===t&&(t={});var n=e.call(this,(function(e){for(var t,o=[],r=1;r<arguments.length;r++)o[r-1]=arguments[r];n.events.push([e].concat(o)),n._cbs[e]&&(t=n._cbs)[e].apply(t,o)}))||this;return n._cbs=t,n.events=[],n}return o(t,e),t.prototype.onreset=function(){this.events=[],this._cbs.onreset&&this._cbs.onreset()},t.prototype.restart=function(){var e;this._cbs.onreset&&this._cbs.onreset();for(var t=0;t<this.events.length;t++){var n=this.events[t],o=n[0],r=n.slice(1);this._cbs[o]&&(e=this._cbs)[o].apply(e,r)}},t}(r(n("gaEX")).default);t.CollectingHandler=i},"0lR2":function(e,t,n){"use strict";e.exports={position:!0,gfm:!0,commonmark:!1,footnotes:!1,pedantic:!1,blocks:n("WwTg")}},"1AgE":function(e,t,n){"use strict";n.r(t),t.default='## Debugging and REPL\n\n### Debugging\n\n**Development Debugging / Typescript Debugging**\n\nActionhero makes it simple to use the node.js debugger, even when developing your project with Typescript. New Actionhero projects comes with a `npm run debug` script which will pass the proper arguments to [`ts-node-dev`](https://github.com/whitecolor/ts-node-dev), which we use to run our development mode server. For older Actionhero projects, to start a debugger with `ts-node-dev`, the command is:\n\n```shell\nts-node-dev --transpile-only --no-deps --inspect -- ./src/server\n```\n\nOnce your server is running in debug mode, you can then attach to it via a number of debuggers. The default debugger in Chrome can be used. Learn more here: https://nodejs.org/en/docs/guides/debugging-getting-started/.\n\nYou can also use the inspector built into your IDE. For example, VSCode is easy to use with the following `.vscode/launch.json` configuration:\n\n```json\n// from .vscode/launch.json\n\n{\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "type": "node",\n      "request": "attach",\n      "name": "Actionhero Debugger",\n      "protocol": "inspector",\n      "port": 9229,\n      "restart": true,\n      "localRoot": "${workspaceFolder}",\n      "remoteRoot": "."\n    }\n  ]\n}\n```\n\n<img style="width:90%" src="/static/images/debugger.png" />\n\n**Production Debugging**\n\nModern versions of node.js have built-in inspector capabilities.\n\nRun Actionhero with node\'s `--inspect` flag, ie: `node ./dist/server.js --inspect start`\n\nMore info about the [node inspector](https://nodejs.org/en/docs/inspector) can be found on the official node.js website.\n\n### REPL\n\n```bash\nactionhero console\n\nRunning "console" task\n2015-11-14 17:48:01 - notice: *** starting actionhero ***\n2015-11-14 17:48:01 - info: actionhero member 10.0.1.15 has joined the cluster\n2015-11-14 17:48:01 - notice: pid: 38464\n2015-11-14 17:48:01 - notice: server ID: 10.0.1.15\n2015-11-14 17:48:01 - info: ensuring the existence of the chatRoom: defaultRoom\n2015-11-14 17:48:01 - info: ensuring the existence of the chatRoom: anotherRoom\n2015-11-14 17:48:01 - notice: environment: development\n2015-11-14 17:48:01 - notice: *** Server Started @ 2015-11-14 17:48:01 ***\n[ AH::development ] > api.id\n\u201810.0.1.15\'\n\n[ AH::development ] > Object.keys(api.actions.actions)\n[ \u2018cacheTest\',\n\u2018randomNumber\',\n\u2018showDocumentation\',\n\u2018sleepTest\',\n\u2018status\' ]\n```\n\nActionhero has a command-line interface called a REPL! This means you can spin up a new instance of Actionhero and manually call all the methods on the `api` namespace. This combined with the new RPC tools make this a powerful debugging and development tool. Running `actionhero console` will load up a version of Actionhero in your terminal where you have access to the `api` object. This version of the server will `boot`, `initialize`, and `start`, but will skip booting any `servers`. You will be connected to any databases per your initializers.\n\nThe REPL will:\n\n- source `NODE_ENV` properly to load the config\n- will connect to redis and load any user-defined initializers\n- will load any plugins\n- will **not** boot any servers\n\nIf you are familiar with rails, this is very similar to `rails console`\n'},"1Iev":function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nActionhero uses [Primus](https://github.com/primus/primus) for web socket connections. The Primus project allows you to choose from many websocket backends, including `ws`, `engine.io`, `socket.io`, and more. Within Actionhero, web sockets are bound to the web server (either http or https).\n\nActionhero will generate the client-side javascript needed for you (based on the ActionheroWebsocketClient library, primus, and the underlying ws transport). This file is regenerated each time you boot the application.\n\n## Connection Details\n\n```html\n// In the Browser...\n<script src="/public/javascript/ActionheroWebsocketClient.js"><\/script>\n\n<script>\n  client = new ActionheroWebsocketClient();\n\n  client.on("connected", function() {\n    console.log("connected!");\n  });\n  client.on("disconnected", function() {\n    console.log("disconnected :(");\n  });\n\n  client.on("error", function(error) {\n    console.log("error", error.stack);\n  });\n  client.on("reconnect", function() {\n    console.log("reconnect");\n  });\n  client.on("reconnecting", function() {\n    console.log("reconnecting");\n  });\n\n  // this will log all messages send the client\n  // client.on(\'message\',      function(message){ console.log(message) })\n\n  client.on("alert", function(message) {\n    alert(message);\n  });\n  client.on("api", function(message) {\n    alert(message);\n  });\n\n  client.on("welcome", function(message) {\n    appendMessage(message);\n  });\n  client.on("say", function(message) {\n    appendMessage(message);\n  });\n\n  client.connect(function(error, details) {\n    if (error != null) {\n      console.log(error);\n    } else {\n      client.roomAdd("defaultRoom");\n      client.action("someAction", { key: "k", value: "v" }, function(data) {\n        // do stuff\n      });\n    }\n  });\n<\/script>\n```\n\n`connection.type` for a webSocket client is "websocket". This type will not change regardless of if the client has fallen back to another protocol.\n\nData is always returned as JSON objects to the webSocket client.\n\nAn example web socket session might be the following:\n\nYou can also inspect `client.state` (\u2018connected\', \u2018disconnected\', etc). The websocket client will attempt to re-connect automatically.\n\nIf you want to communicate with a websocket client outside of an action, you can call `connection.send(message)` on the server. In the client lib, the event message will be fired. So, client.on(\'message, function(m){ ... })`. Be sure to add some descriptive content to the message you send from the sever (like perhaps {"type": \'message type\'}`) so you can route message types on the client.\n\n## Linking WebSockets to Web Clients\n\nActionhero provides `connection.fingerprint` where available to help you link websocket connections to related web connections. While every connection will always have a unique `connection.id`, we attempt to build `connection.fingerprint` by checking the headers the websocket connection began with. If the cookie defined by `api.config.servers.web.fingerprint.cookieKey` is present, we will store its value on the websocket connection.\n\nYou can read more about using a value like `connection.fingerprint` in an [authentication middleware](tutorials/middleware) or using it as a key for session information.\n\n## Config Options\n\n```ts\nexport const DEFAULT = {\n  servers: {\n    websocket: config => {\n      return {\n        enabled: true,\n        // you can pass a FQDN (string) here or \'window.location.origin\'\n        clientUrl: "window.location.origin",\n        // Directory to render client-side JS.\n        // Path should start with "/" and will be built starting from api.config..general.paths.public\n        clientJsPath: "javascript/",\n        // the name of the client-side JS file to render.  Both `.js` and `.min.js` versions will be created\n        // do not include the file extension\n        // set to `undefined` to not render the client-side JS on boot\n        clientJsName: "ActionheroWebsocketClient",\n        // should the server signal clients to not reconnect when the server is shutdown/reboot\n        destroyClientsOnShutdown: false,\n\n        // websocket Server Options:\n        server: {\n          // authorization: null,\n          // pathname:      \'/primus\',\n          // parser:        \'JSON\',\n          // transformer:   \'websockets\',\n          // plugin:        {},\n          // timeout:       35000,\n          // origins:       \'*\',\n          // methods:       [\'GET\',\'HEAD\',\'PUT\',\'POST\',\'DELETE\',\'OPTIONS\'],\n          // credentials:   true,\n          // maxAge:        \'30 days\',\n          // exposed:       false,\n        },\n\n        // websocket Client Options:\n        client: {\n          apiPath: "/api", // the api base endpoint on your Actionhero server\n          // the cookie name we should use for shared authentication between WS and web connections\n          cookieKey: config.servers.web.fingerprintOptions.cookieKey\n          // reconnect:        {},\n          // timeout:          10000,\n          // ping:             25000,\n          // pong:             10000,\n          // strategy:         "online",\n          // manual:           false,\n          // websockets:       true,\n          // network:          true,\n          // transport:        {},\n          // queueSize:        Infinity,\n        }\n      };\n    }\n  }\n};\n```\n\nYou can create your client with options. Options for both the server and client are stored in `/config/servers/websocket.ts`. Note there are 2 sections: `server` and `client`.\n'},"1VtT":function(e,t,n){"use strict";var o=n("6dBs"),r=n("Gdbo"),i=n("Esvb"),a=n("xkQk"),s=n("IRYA"),c=n("NkL+");e.exports=function e(){var t=[],n=a(),b={},w=!1,v=-1;return k.data=function(e,t){if(s(e))return 2===arguments.length?(m("data",w),b[e]=t,k):u.call(b,e)&&b[e]||null;if(e)return m("data",w),b=e,k;return b},k.freeze=x,k.attachers=t,k.use=function(e){var n;if(m("use",w),null===e||void 0===e);else if("function"===typeof e)s.apply(null,arguments);else{if("object"!==typeof e)throw new Error("Expected usable value, not `"+e+"`");"length"in e?a(e):r(e)}n&&(b.settings=o(b.settings||{},n));return k;function r(e){a(e.plugins),e.settings&&(n=o(n||{},e.settings))}function i(e){if("function"===typeof e)s(e);else{if("object"!==typeof e)throw new Error("Expected usable value, not `"+e+"`");"length"in e?s.apply(null,e):r(e)}}function a(e){var t,n;if(null===e||void 0===e);else{if(!("object"===typeof e&&"length"in e))throw new Error("Expected a list of plugins, not `"+e+"`");for(t=e.length,n=-1;++n<t;)i(e[n])}}function s(e,n){var r=function(e){var n,o=t.length,r=-1;for(;++r<o;)if((n=t[r])[0]===e)return n}(e);r?(c(r[1])&&c(n)&&(n=o(r[1],n)),r[1]=n):t.push(l.call(arguments))}},k.parse=function(e){var t,n=i(e);if(x(),p("parse",t=k.Parser),d(t))return new t(String(n),n).parse();return t(String(n),n)},k.stringify=function(e,t){var n,o=i(t);if(x(),f("stringify",n=k.Compiler),g(e),d(n))return new n(e,o).compile();return n(e,o)},k.run=_,k.runSync=function(e,t){var n,o=!1;return _(e,t,(function(e,t){o=!0,r(e),n=t})),y("runSync","run",o),n},k.process=A,k.processSync=function(e){var t,n=!1;return x(),p("processSync",k.Parser),f("processSync",k.Compiler),A(t=i(e),(function(e){n=!0,r(e)})),y("processSync","process",n),t},k;function k(){for(var n=e(),r=t.length,i=-1;++i<r;)n.use.apply(null,t[i]);return n.data(o(!0,{},b)),n}function x(){var e,o,r,i;if(w)return k;for(;++v<t.length;)o=(e=t[v])[0],null,!1!==(r=e[1])&&(!0===r&&(e[1]=void 0),"function"===typeof(i=o.apply(k,e.slice(1)))&&n.use(i));return w=!0,v=1/0,k}function _(e,t,o){if(g(e),x(),o||"function"!==typeof t||(o=t,t=null),!o)return new Promise(r);function r(r,a){n.run(e,i(t),(function(t,n,i){n=n||e,t?a(t):r?r(n):o(null,n,i)}))}r(null,o)}function A(e,t){if(x(),p("process",k.Parser),f("process",k.Compiler),!t)return new Promise(n);function n(n,o){var r=i(e);h.run(k,{file:r},(function(e){e?o(e):n?n(r):t(null,r)}))}n(null,t)}}().freeze();var l=[].slice,u={}.hasOwnProperty,h=a().use((function(e,t){t.tree=e.parse(t.file)})).use((function(e,t,n){e.run(t.tree,t.file,(function(e,o,r){e?n(e):(t.tree=o,t.file=r,n())}))})).use((function(e,t){t.file.contents=e.stringify(t.tree,t.file)}));function d(e){return"function"===typeof e&&function(e){var t;for(t in e)return!0;return!1}(e.prototype)}function p(e,t){if("function"!==typeof t)throw new Error("Cannot `"+e+"` without `Parser`")}function f(e,t){if("function"!==typeof t)throw new Error("Cannot `"+e+"` without `Compiler`")}function m(e,t){if(t)throw new Error(["Cannot invoke `"+e+"` on a frozen processor.\nCreate a new ","processor first, by invoking it: use `processor()` instead of ","`processor`."].join(""))}function g(e){if(!e||!s(e.type))throw new Error("Expected node, got `"+e+"`")}function y(e,t,n){if(!n)throw new Error("`"+e+"` finished async. Use `"+t+"` instead")}},"1iAE":function(e,t,n){"use strict";e.exports=function(e){var t="string"===typeof e?e.charCodeAt(0):e;return t>=97&&t<=122||t>=65&&t<=90}},"20v3":function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nThe web server exposes actions and files over http or https. You can visit the API in a browser, Curl, etc. `{url}?action=actionName` or `{url}/api/{actionName}` is how you would access an action. For example, using the default ports in `/config/servers/web.js` you could reach the status action with both `http://127.0.0.1:8080/status` or `http://127.0.0.1:8080/?action=status`\n\nHTTP responses are always JSON and follow the following format:\n\n```ts\n{\n  hello: "world",\n  serverInformation: {\n    serverName: "Actionhero API",\n    apiVersion: 1,\n    requestDuration: 14\n  },\n  requestorInformation: {\n    remoteAddress: "127.0.0.1",\n    RequestsRemaining: 989,\n    receivedParams: {\n      action: ""\n    }\n  }\n}\n```\n\n## Full HTTP Example\n\n```\n> curl \'localhost:8080/api/status\' -v | python -mjson.tool\n* About to connect() to localhost port 8080 (#0)\n*   Trying 127.0.0.1...\n* connected\n* Connected to localhost (127.0.0.1) port 8080 (#0)\n> GET /api/status HTTP/1.1\n> User-Agent: curl/7.24.0 (x86_64-apple-darwin12.0) libcurl/7.24.0 OpenSSL/0.9.8r zlib/1.2.5\n> Host: localhost:8080\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< X-Powered-By: Actionhero API\n< Date: Sun, 29 Jul 2012 23:25:53 GMT\n< Connection: keep-alive\n< Transfer-Encoding: chunked\n<\n{ [data not shown]\n100   741    0   741    0     0   177k      0 --:--:-- --:--:-- --:--:--  361k\n* Connection #0 to host localhost left intact\n* Closing connection #0\n{\n    "requestorInformation": {\n        "receivedParams": {\n            "action": "status",\n        },\n        "remoteAddress": "127.0.0.1"\n    },\n    "serverInformation": {\n        "apiVersion": "3.0.0",\n        "currentTime": 1343604353551,\n        "requestDuration": 1,\n        "serverName": "Actionhero API"\n    },\n    "stats":\n        "id": "10.0.1.12:8080:4443:5000",\n        "uptimeSeconds": 34.163\n    }\n}\n```\n\n- You can provide the `?callback=myFunc` param to initiate a JSONp response which will wrap the returned JSON in your callback `function`. The mime type of the response will change from JSON to Javascript.\n- If everything went OK with your request, no error attribute will be set on the response, otherwise, you should see either a string or hash error response within your action\n- To build the response for "hello" above, the action would have set `data.response.hello = \'world\'` in an action.\n\n## Config Options\n\n`/config/servers/web.js` contains the settings for the web server. The relevant options are:\n\n```ts\nexport const DEFAULT = {\n  servers: {\n    web: config => {\n      return {\n        enabled: true,\n        // HTTP or HTTPS?  This setting is to enable SSL termination directly in the Actionhero app, not set redirection host headers\n        secure: false,\n        // Passed to https.createServer if secure=true. Should contain SSL certificates\n        serverOptions: {},\n        // Should we redirect all traffic to the first host in this array if hte request header doesn\'t match?\n        // i.e.: [ \'https://www.site.com\' ]\n        allowedRequestHosts: process.env.ALLOWED_HOSTS\n          ? process.env.ALLOWED_HOSTS.split(",")\n          : [],\n        // Port or Socket Path\n        port: process.env.PORT || 8080,\n        // Which IP to listen on (use \'0.0.0.0\' for all; \'::\' for all on ipv4 and ipv6)\n        // Set to `null` when listening to socket\n        bindIP: "0.0.0.0",\n        // Any additional headers you want Actionhero to respond with\n        httpHeaders: {\n          "X-Powered-By": config.general.serverName,\n          "Access-Control-Allow-Origin": "*",\n          "Access-Control-Allow-Methods":\n            "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE",\n          "Access-Control-Allow-Headers": "Content-Type",\n          "Strict-Transport-Security": "max-age=31536000; includeSubDomains"\n        },\n        // Route that actions will be served from; secondary route against this route will be treated as actions,\n        //  IE: /api/?action=test == /api/test/\n        urlPathForActions: "api",\n        // Route that static files will be served from;\n        //  path (relative to your project root) to serve static content from\n        //  set to `null` to disable the file server entirely\n        urlPathForFiles: "public",\n        // When visiting the root URL, should visitors see \'api\' or \'file\'?\n        //  Visitors can always visit /api and /public as normal\n        rootEndpointType: "file",\n        // simple routing also adds an \'all\' route which matches /api/:action for all actions\n        simpleRouting: true,\n        // queryRouting allows an action to be defined via a URL param, ie: /api?action=:action\n        queryRouting: true,\n        // The cache or (if etags are enabled) next-revalidation time to be returned for all flat files served from /public; defined in seconds\n        flatFileCacheDuration: 60,\n        // Add an etag header to requested flat files which acts as fingerprint that changes when the file is updated;\n        // Client will revalidate the fingerprint at latest after flatFileCacheDuration and reload it if the etag (and therefore the file) changed\n        // or continue to use the cached file if it\'s still valid\n        enableEtag: true,\n        // should we save the un-parsed HTTP POST/PUT payload to connection.rawConnection.params.rawBody?\n        saveRawBody: false,\n        // How many times should we try to boot the server?\n        // This might happen if the port is in use by another process or the socketfile is claimed\n        bootAttempts: 1,\n        // Settings for determining the id of an http(s) request (browser-fingerprint)\n        fingerprintOptions: {\n          cookieKey: "sessionID",\n          toSetCookie: true,\n          onlyStaticElements: false,\n          settings: {\n            path: "/",\n            expires: 3600000\n          }\n        },\n        // Options to be applied to incoming file uploads.\n        //  More options and details at https://github.com/felixge/node-formidable\n        formOptions: {\n          uploadDir: os.tmpdir(),\n          keepExtensions: false,\n          maxFieldsSize: 1024 * 1024 * 20,\n          maxFileSize: 1024 * 1024 * 200\n        },\n        // Should we pad JSON responses with whitespace to make them more human-readable?\n        // set to null to disable\n        padding: 2,\n        // Options to configure metadata in responses\n        metadataOptions: {\n          serverInformation: true,\n          requesterInformation: true\n        },\n        // When true, returnErrorCodes will modify the response header for http(s) clients if connection.error is not null.\n        // You can also set connection.rawConnection.responseHttpCode to specify a code per request.\n        returnErrorCodes: true,\n        // should this node server attempt to gzip responses if the client can accept them?\n        // this will slow down the performance of Actionhero, and if you need this functionality, it is recommended that you do this upstream with nginx or your load balancer\n        compress: false,\n        // options to pass to the query parser\n        // learn more about the options @ https://github.com/hapijs/qs\n        queryParseOptions: {}\n      };\n    }\n  }\n};\n```\n\nNote that if you wish to create a secure (https) server, you will be required to complete the serverOptions hash with at least a cert and a keyfile:\n\n```js\nconfig.server.web.serverOptions: {\n  key: fs.readFileSync(\'certs/server-key.pem\'),\n  cert: fs.readFileSync(\'certs/server-cert.pem\')\n}\n```\n\n## The Connection Object\n\n```ts\n{ id: \'3e55b464fd34708eba26f609f44481a120e094a8-a6dfb60b-9562-4cc0-9d92-bc6cc1b622ba\',\n  connectedAt: 1447554153233,\n  type: \'web\',\n  rawConnection:\n   {\n     req: {},\n     res: {},\n     params: { query: {} },\n     method: \'GET\',\n     cookies: {},\n     responseHeaders: [ [Object], [Object], [Object], [Object], [Object], [Object] ],\n     responseHttpCode: 200,\n     parsedURL:\n      Url {},\n  remotePort: 57259,\n  remoteIP: \'127.0.0.1\',\n  error: null,\n  fingerprint: \'3e55b464fd34708eba26f609f44481a120e094a8\',\n  rooms: [],\n  params: { action: \'randomNumber\', apiVersion: 1 },\n  pendingActions: 1,\n  totalActions: 1,\n  messageId: 0,\n  canChat: false,\n  sendMessage: [Function],\n  sendFile: [Function]\n}\n```\n\nwhen inspecting `data.connection` in actions or action middleware from web client, a few additional elements are added for convenience:\n\n- `connection.rawConnection.responseHeaders`: array of headers which can be built up in the action. Headers will be made unique, and latest header will be used (except setting cookies)\n- `connection.rawConnection.method`: A string, GET, POST, etc\n- `connection.rawConnection.cookies`: Hash representation of the connection\'s cookies\n- `connection.rawConnection.responseHttpCode`: the status code to be rendered to the user. Defaults to 200\n- `connection.type` for a HTTP client is "web"\n- `connection.rawConnection.params.body` will contain un-filtered form data\n- `connection.rawConnection.params.files` will contain un-filtered form data\n- `connection.extension`. If are using a route to access an action, and the request path ends in a file extension (IE: `server.com/action/option.jpg`), the extension will be available. Depending on the server\'s options, this extension may also be used to modify the response mime-type by configuring `matchExtensionMimeType` within each action.\n\n## Sending Files\n\n```ts\n// in your action\'s run method\n\ndata.connection.sendFile("/path/to/file.mp3");\ndata.toRender = false;\nnext();\n```\n\nActionhero can also serve up flat files. Actionhero will not cache these files and each request to `file` will re-read the file from disk (like the nginx web server).\n\nThere are helpers you can use in your actions to send files:\n\n- `/public` and `/api` are routes which expose the directories of those types. These top level path can be configured in `/config/servers/web.js` with `api.config.servers.web.urlPathForActions` and `api.config.servers.web.urlPathForFiles`.\n- the root of the web server "/" can be toggled to serve the content between /file or /api actions per your needs `config.servers.web.rootEndpointType`. The default is `api`.\n- Actionhero will serve up flat files (html, images, etc) as well from your ./public folder. This is accomplished via the `file` route as described above. `http://{baseUrl}/public/{pathToFile}` is equivalent to `http://{baseUrl}?action=file&fileName={pathToFile}` and `http://{baseUrl}/file/{pathToFile}`.\n- Errors will result in a 404 (file not found) with a message you can customize.\n- Proper mime-type headers will be set when possible via the `mime` package.\n\nSee the [file server](tutorials/file-server) page for more documentation\n\n## Routes\n\nFor web clients, you can define an optional RESTful mapping to help route requests to actions. If the client doesn\'t specify an action via a param, and the base route isn\'t a named action, the action will attempt to be discerned from this `config/routes.js` file.\n\nThis variables in play here are:\n\n- `config.servers.web.urlPathForActions`\n- `config.servers.web.rootEndpointType`\n- and of course the content of `config/routes.js`\n\nSay you have an action called \u2018status\' (like in a freshly generated Actionhero project). Lets start with Actionhero\'s default config:\n\n```ts\nconfig.servers.web.urlPathForActions = "api";\nconfig.servers.web.urlPathForFiles = "public";\nconfig.servers.web.rootEndpointType = "file";\n```\n\nThere are 3 ways a client can access actions via the web server.\n\n- no routing at all and use GET params: `server.com/api?action=status`\n- with \u2018basic\' routing, where the action\'s name will respond after the /api path: `server.com/api/status`\n- or you can modify this with routes. Say you want `server.com/api/stuff/statusPage`\n\n```ts\nexport const DEFAULT = function(api) {\n  return {\n    get: [\n      { path: \u2018/stuff/statusPage\', action: \'status\' }\n    ]\n  };\n}\n```\n\nIf the `api.config.servers.web.rootEndpointType` is `"file"` which means that the routes you are making are active only under the `/api` path. If you wanted the route example to become `server.com/stuff/statusPage`, you would need to change `api.config.servers.web.rootEndpointType` to be \u2018api\'. Note that making this change doesn\'t stop `server.com/api/stuff/statusPage` from working as well, as you still have `api.config.servers.web.urlPathForActions` set to be \u2018api\', so both will continue to work.\n\nFor a route to match, all params must be satisfied. So, if you expect a route to provide `api/:a/:b/:c` and the request is only for `api/:a/:c`, the route won\'t match. This holds for any variable, including `:apiVersion`. If you want to match both with and without apiVersion, just define the rote 2x, IE:\n\n```ts\nexport const DEFAULT = function(api) {\n  return {\n    all: [\n      { path: "/cache/:key/:value", action: "cacheTest" },\n      { path: "/:apiVersion/cache/:key/:value", action: "cacheTest" }\n    ]\n  };\n};\n```\n\nIf you want to shut off access to your action at `server.com/api/stuff/statusPage` and only allow access via `server.com/stuff/statusPage`, you can disable `api.config.servers.web.urlPathForActions` by setting it equal to `null` (but keeping the `api.config.servers.web.rootEndpointType` equal to `api`).\n\nRoutes will match the newest version of `apiVersion`. If you want to have a specific route match a specific version of an action, you can provide the `apiVersion` param in your route definitions:\n\n```ts\nexport const DEFAULT = function(api) {\n  return {\n    get: [\n      { path: "/myAction/old", action: "myAction", apiVersion: 1 },\n      { path: "/myAction/new", action: "myAction", apiVersion: 2 }\n    ]\n  };\n};\n```\n\nThis would create both `/api/myAction/old` and `/api/myAction/new`, mapping to apiVersion 1 and 2 respectively.\n\nIn your actions and middleware, if a route was matched, you can see the details of the match by inspecting `data.connection.matchedRoute` which will include `path` and `action`.\n\nFinally, you can toggle an option, `matchTrailingPathParts`, which allows the final segment of your route to absorb all trailing path parts in a matched variable.\n\n```ts\npost: [\n  // yes match: site.com/api/123\n  // no match: site.com/api/123/admin\n  { path: \'/login/:userId(.*)\', action: \'login\' }\n],\n\npost: [\n  // yes match: site.com/api/123\n  // yes match: site.com/api/123/admin\n  { path: \'/login/:userId(.*)\', action: \'login\', matchTrailingPathParts: true }\n],\n```\n\nThis also enables "catch all" routes, like:\n\n```ts\nget: [\n  { path: \u2018:path(.*)\', action: \u2018catchAll\', matchTrailingPathParts: true }\n],\n```\n\nIf you have a route with multiple variables defined and `matchTrailingPathParts` is true, only the final segment will match the trailing sections:\n\n```ts\nget: [\n  // the route site.com/users/123/should/do/a/thing would become {userId: 123, path: \u2018/should/do/a/thing\'}\n  { path: \u2018/users/:userId/:path(.*)\', action: \u2018catchAll\', matchTrailingPathParts: true }\n],\n```\n\n**Note**: In regular expressions used for routing, you cannot use the "/" character.\n\n#### Handling Static Folders with Routes\n\nIf you want map a special public folder to a given route you can use the "dir" parameter in your "get" routes in the routes.js file:\n\n```ts\nget: [\n  { path: \u2018/my/special/folder\', dir: __dirname + \u2018/\u2026/public/my/special/folder\', matchTrailingPathParts: true }\n],\n```\n\nAfter mapping this route all files/folders within the mapped folder will be accessible on the route.\n\nYou have to map the specified public folder within the "dir" parameter, relative to the routes.js file or absolute. Make sure to set "matchTrailingPathParts" to "true", because when it is set to false, the route will never match when you request a file. (e.g.: site.com/my/special/folder/testfile.txt).\n\n#### Route Notes\n\n- actions defined in params directly `action=theAction` or hitting the named URL for an action `/api/theAction` will never override RESTful routing\n- you can mix explicitly defined params with route-defined params. If there is an overlap, the route-defined params win\n  - IE: /api/user/123?userId=456 => `connection.userId = 123`\n- routes defined with the "all" method will be duplicated to "get", "put", "post", and "delete"\n- use ":variable" to define "variable"\n- an undefined ":variable" will not match\n  - IE: "/api/user/" will not match "/api/user/:userId"\n  - You would need a second route in this case to match "/api/user"\n- routes are matched as defined top-down in `routes.js`\n- you can optionally define a regex match along with your route variable\n  - IE: `{`path:"/game/:id(^[a-z]{0,10}\\$)", action: "gamehandler" }`}`\n  - be sure to double-escape when needed: `{` path: "/login/:userID(^\\\\d{3}\\$)", action: "login" }`}`\n- The HTTP verbs which you can route against are: `api.routes.verbs = [\'head\', \'get\', \'post\', \'put\', \'patch\', \'delete\']`\n\n```ts\nexport const DEFAULT = function(api) {\n  return {\n    get: [\n      { path: "/users", action: "usersList" }, // (GET) /api/users\n      { path: "/search/:term/limit/:limit/offset/:offset", action: "search" } // (GET) /api/search/car/limit/10/offset/100\n    ],\n\n    post: [\n      { path: "/login/:userID(^\\\\d{3}$)", action: "login" } // (POST) /api/login/123\n    ],\n\n    all: [\n      { path: "/user/:userID", action: "user" } // (*) / /api/user/123\n    ]\n  };\n};\n```\n\n## Hosts\n\nActionhero allows you to define a collection of host headers which this API server will allow access from. You can set these via `api.config.servers.web.allowedRequestHosts`. If the `Host` header of a client does not match one of those listed (protocol counts!), they will be redirected to the first one present.\n\nYou can also set `process.env.ALLOWED_HOSTS` which will be parsed as a comma-separated list of Hosts which will set `api.config.servers.web.allowedRequestHosts`\n\n## Parameters\n\nParams provided by the user (GET, POST, etc for http and https servers, setParam for TCP clients, and passed to action calls from a web socket client) will be checked against a whitelist defined by your action (can be disabled in `/config/servers/web.js`). Variables defined in your actions by `action.inputs` will be added to your whitelist. Special params which the api will always accept are:\n\n```ts\n[\n  \u2018file\',\n  \u2018apiVersion\',\n  \u2018callback\',\n  \u2018action\',\n]\n```\n\nParams are loaded in this order GET -> POST (normal) -> POST (multipart). This means that if you have `{url}?key=getValue` and you post a variable `key=postValue` as well, the `postValue` will be the one used. The only exception to this is if you use the URL method of defining your action. You can add arbitrary params to the whitelist by adding them to the `api.postVariables` array in your initializers.\n\nFile uploads from forms will also appear in `connection.params`, but will be an object with more information. That is, if you uploaded a file called "image", you would have `connection.params.image.path`, `connection.params.image.name` (original file name), and `connection.params.image.type` available to you.\n\nA note on JSON payloads:\n\nYou can post BODY json payloads to Actionhero in the form of a hash or array.\n\n**Hash**: `curl -X POST -d \'{"key":"something", "value":{"a":1, "b":2}}\' http://localhost:8080/api/cacheTest`. This will result in:\n\n```ts\nconnection.params = {\n  key: \u2018something\',\n  value: {\n    a: 1,\n    b: 2\n  }\n}\n```\n\n**Array**: `curl -X POST -d \'[{"key":"something", "value":{"a":1, "b":2}}]\' http://localhost:8080/api/cacheTest`. In this case, we set the array to the param key `payload`:\n\n```ts\nconnection.params = {\n  payload: [\n    {\n      key: \'something\'\n      value: {\n        a: 1,\n        b: 2\n      }\n    }\n  ]\n}\n```\n\n### Uploading Files\n\nActionhero uses the [formidable](https://github.com/felixge/node-formidable) form parsing library. You can set options for it via `api.config.servers.web.formOptions`. You can upload multiple files to an action and they will be available within `connection.params` as formidable response objects containing references to the original file name, where the uploaded file was stored temporarily, etc. Here is an example:\n\n```ts\n// actions/uploader.js\nimport { Action } from "Actionhero";\n\nexport class Uploader extends Action {\n  constructor() {\n    super();\n    this.name = "uploader";\n    this.description = "File upload Service";\n    this.input = {\n      file1: { required: true },\n      file2: { required: false },\n      key1: { required: false },\n      key2: { required: false }\n    };\n  }\n\n  async run(data) {\n    console.log(data);\n  }\n}\n```\n\n```html\n\x3c!-- public/uploader.html --\x3e\n\n<html>\n  <head></head>\n  <body>\n    <form\n      method="post"\n      enctype="multipart/form-data"\n      action="http://localhost:8080/api/uploader"\n    >\n      <input type="file" name="file1" />\n      <input type="file" name="file2" />\n      <br /><br />\n      <input type="text" name="key1" />\n      <input type="text" name="key2" />\n      <br /><br />\n      <input type="submit" value="send" />\n    </form>\n  </body>\n</html>\n```\n\n```ts\n// what the params look like to an action\n\n{ action: \'uploader\',\n  file1:\n   { domain: null,\n     _events: null,\n     _maxListeners: 10,\n     size: 5477608,\n     path: \'/app/Actionhero/tmp/86b2aa018a9785e20b3f6cea95babcca\',\n     name: \'1-02 Concentration Enhancing Menu Initializer.mp3\',\n     type: \'audio/mp3\',\n     hash: false,\n     lastModifiedDate: Wed Feb 13 2013 20:32:49 GMT-0800 (PST),\n     _writeStream:\n      { ... },\n     length: [Getter],\n     filename: [Getter],\n     mime: [Getter] },\n  file2:\n   { domain: null,\n     _events: null,\n     _maxListeners: 10,\n     size: 10439802,\n     path: \'/app/Actionhero/tmp/6052010f1d75ceaeb9197a9a759124dc\',\n     name: \'1-10 There She Is.mp3\',\n     type: \'audio/mp3\',\n     hash: false,\n     lastModifiedDate: Wed Feb 13 2013 20:32:49 GMT-0800 (PST),\n     _writeStream:\n      { ... },\n  key1: \'123\',\n  key2: \'456\',\n }\n```\n\n## Client Library\n\nAlthough the `ActionheroWebsocketClient` client-side library is mostly for websockets, it can now be used to make http actions when not connected (and websocket clients will fall back to http actions when disconnected)\n\n```html\n<script src="/public/javascript/ActionheroWebsocketClient.js"><\/script>\n\n<script>\n  var client = new ActionheroWebsocketClient();\n  client.action("cacheTest", { key: "k", value: "v" }, function(error, data) {\n    // do stuff\n  });\n<\/script>\n```\n\nNote that we never called `client.connect`. More information can be found on the [websocket server docs page](/docs/servers/websocket).\n'},"2Jfo":function(e,t,n){"use strict";e.exports={alwaysValid:function(){return!0}}},"2yk8":function(e,t,n){"use strict";var o=n("IPAr"),r=n("ZWk2"),i=n("afWh");e.exports=d,d.locator=i,d.notInLink=!0;var a="<",s=">",c="@",l="/",u="mailto:",h=u.length;function d(e,t,n){var i,d,p,f,m,g,y,b,w,v,k;if(t.charAt(0)===a){for(this,i="",d=t.length,p=0,f="",g=!1,y="",p++,i=a;p<d&&(m=t.charAt(p),!(o(m)||m===s||m===c||":"===m&&t.charAt(p+1)===l));)f+=m,p++;if(f){if(y+=f,f="",y+=m=t.charAt(p),p++,m===c)g=!0;else{if(":"!==m||t.charAt(p+1)!==l)return;y+=l,p++}for(;p<d&&(m=t.charAt(p),!o(m)&&m!==s);)f+=m,p++;if(m=t.charAt(p),f&&m===s)return!!n||(w=y+=f,i+=y+m,(b=e.now()).column++,b.offset++,g&&(y.slice(0,h).toLowerCase()===u?(w=w.substr(h),b.column+=h,b.offset+=h):y=u+y),v=this.inlineTokenizers,this.inlineTokenizers={text:v.text},k=this.enterLink(),w=this.tokenizeInline(w,b),this.inlineTokenizers=v,k(),e(i)({type:"link",title:null,url:r(y,{nonTerminated:!1}),children:w}))}}}},"33yf":function(e,t,n){(function(e){function n(e,t){for(var n=0,o=e.length-1;o>=0;o--){var r=e[o];"."===r?e.splice(o,1):".."===r?(e.splice(o,1),n++):n&&(e.splice(o,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}function o(e,t){if(e.filter)return e.filter(t);for(var n=[],o=0;o<e.length;o++)t(e[o],o,e)&&n.push(e[o]);return n}t.resolve=function(){for(var t="",r=!1,i=arguments.length-1;i>=-1&&!r;i--){var a=i>=0?arguments[i]:e.cwd();if("string"!==typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(t=a+"/"+t,r="/"===a.charAt(0))}return(r?"/":"")+(t=n(o(t.split("/"),(function(e){return!!e})),!r).join("/"))||"."},t.normalize=function(e){var i=t.isAbsolute(e),a="/"===r(e,-1);return(e=n(o(e.split("/"),(function(e){return!!e})),!i).join("/"))||i||(e="."),e&&a&&(e+="/"),(i?"/":"")+e},t.isAbsolute=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(o(e,(function(e,t){if("string"!==typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},t.relative=function(e,n){function o(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=t.resolve(e).substr(1),n=t.resolve(n).substr(1);for(var r=o(e.split("/")),i=o(n.split("/")),a=Math.min(r.length,i.length),s=a,c=0;c<a;c++)if(r[c]!==i[c]){s=c;break}var l=[];for(c=s;c<r.length;c++)l.push("..");return(l=l.concat(i.slice(s))).join("/")},t.sep="/",t.delimiter=":",t.dirname=function(e){if("string"!==typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,o=-1,r=!0,i=e.length-1;i>=1;--i)if(47===(t=e.charCodeAt(i))){if(!r){o=i;break}}else r=!1;return-1===o?n?"/":".":n&&1===o?"/":e.slice(0,o)},t.basename=function(e,t){var n=function(e){"string"!==typeof e&&(e+="");var t,n=0,o=-1,r=!0;for(t=e.length-1;t>=0;--t)if(47===e.charCodeAt(t)){if(!r){n=t+1;break}}else-1===o&&(r=!1,o=t+1);return-1===o?"":e.slice(n,o)}(e);return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},t.extname=function(e){"string"!==typeof e&&(e+="");for(var t=-1,n=0,o=-1,r=!0,i=0,a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(47!==s)-1===o&&(r=!1,o=a+1),46===s?-1===t?t=a:1!==i&&(i=1):-1!==t&&(i=-1);else if(!r){n=a+1;break}}return-1===t||-1===o||0===i||1===i&&t===o-1&&t===n+1?"":e.slice(t,o)};var r="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)}}).call(this,n("8oxB"))},"3GlI":function(e,t,n){"use strict";e.exports=function(e){var t=String(e),n=t.length;for(;t.charAt(--n)===o;);return t.slice(0,n+1)};var o="\n"},"3m36":function(e,t,n){"use strict";var o=n("U6jy"),r=n("q1tI"),i=parseInt((r.version||"16").slice(0,2),10)>=16,a=r.createElement;function s(e,t){return a(e,c(t),t.children)}function c(e){return e["data-sourcepos"]?{"data-sourcepos":e["data-sourcepos"]}:{}}e.exports={break:"br",paragraph:"p",emphasis:"em",strong:"strong",thematicBreak:"hr",blockquote:"blockquote",delete:"del",link:"a",image:"img",linkReference:"a",imageReference:"img",table:s.bind(null,"table"),tableHead:s.bind(null,"thead"),tableBody:s.bind(null,"tbody"),tableRow:s.bind(null,"tr"),tableCell:function(e){var t=e.align?{textAlign:e.align}:void 0,n=c(e);return a(e.isHeader?"th":"td",t?o({style:t},n):n,e.children)},root:function(e){var t=!e.className,n=t&&r.Fragment||"div";return a(n,t?null:e,e.children)},text:function(e){return i?e.children:a("span",null,e.children)},list:function(e){var t=c(e);null!==e.start&&1!==e.start&&void 0!==e.start&&(t.start=e.start.toString());return a(e.ordered?"ol":"ul",t,e.children)},listItem:function(e){var t=null;if(null!==e.checked&&void 0!==e.checked){var n=e.checked;t=a("input",{type:"checkbox",checked:n,readOnly:!0})}return a("li",c(e),t,e.children)},definition:function(){return null},heading:function(e){return a("h".concat(e.level),c(e),e.children)},inlineCode:function(e){return a("code",c(e),e.children)},code:function(e){var t=e.language&&"language-".concat(e.language),n=a("code",t?{className:t}:null,e.value);return a("pre",c(e),n)},html:function(e){if(e.skipHtml)return null;var t=e.isBlock?"div":"span";if(e.escapeHtml){var n=r.Fragment||t;return a(n,null,e.value)}var o={dangerouslySetInnerHTML:{__html:e.value}};return a(t,o)},virtualHtml:function(e){return a(e.tag,c(e),e.children)},parsedHtml:function(e){return e["data-sourcepos"]?r.cloneElement(e.element,{"data-sourcepos":e["data-sourcepos"]}):e.element}}},"3z49":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return A}));var o=n("o0o1"),r=n.n(o),i=n("1OyB"),a=n("vuIU"),s=n("md7G"),c=n("foSv"),l=n("Ji7U"),u=n("q1tI"),h=n.n(u),d=n("iRFk"),p=n.n(d),f=n("3Z9Z"),m=n("JI6e"),g=n("uuth"),y=n("4Wno"),b=n("m4NA"),w=n("JSsD"),v=n("Ff+t"),k=n("NMC4"),x=h.a.createElement;function _(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var A=function(e){Object(l.a)(u,e);var t,o=(t=u,function(){var e,n=Object(c.a)(t);if(_()){var o=Object(c.a)(this).constructor;e=Reflect.construct(n,arguments,o)}else e=n.apply(this,arguments);return Object(s.a)(this,e)});function u(e){var t;return Object(i.a)(this,u),(t=o.call(this,e)).state={currentlyVisableSections:{},sectionHeadings:[],contentHeight:0},t}return Object(a.a)(u,null,[{key:"getInitialProps",value:function(e){var t,o;return r.a.async((function(i){for(;;)switch(i.prev=i.next){case 0:return t=e.query.name,i.next=3,r.a.awrap(n("zp1R")("./".concat(t,".md")));case 3:return o=i.sent,i.abrupt("return",{markdown:o.default,name:t});case 5:case"end":return i.stop()}}),null,null,null,Promise)}}]),Object(a.a)(u,[{key:"componentDidMount",value:function(){this.measureContentHeight()}},{key:"measureContentHeight",value:function(){var e=document.getElementById("tutorialPageContent");if(e){var t=e.offsetHeight;this.setState({contentHeight:t})}}},{key:"waypointEnterCallback",value:function(e,t){t.previousPosition;this.state.currentlyVisableSections[e]=!0,this.highlightSideNav()}},{key:"waypointExitCallback",value:function(e){this.state.currentlyVisableSections[e]=!1,this.highlightSideNav()}},{key:"highlightSideNav",value:function(){var e=this;Object.keys(this.state.currentlyVisableSections).forEach((function(t){var n=e.state.currentlyVisableSections[t],o=document.getElementById("sidenav-".concat(t));n?(o.style.color=w.a.colors.red,o.style.fontWeight="400"):(o.style.color=w.a.typography.h2.color,o.style.fontWeight=w.a.typography.h2.fontWeight.toString())}))}},{key:"parseHeading",value:function(e){var t=this,n=e.children,o=this.state.sectionHeadings;return x("div",null,n.map((function(e){var n=e.props.value;o.indexOf(n)<0&&(o.push(n),t.setState({sectionHeadings:o}));var r=w.a.typography.h2;return x(g.a,{key:e.key,onEnter:function(e){t.waypointEnterCallback(n,e)},onLeave:function(e){t.waypointExitCallback(n)}},x("div",{id:n},x("br",null),x("h2",{style:r},x("span",{style:{fontWeight:300,fontSize:36}},e)),x(v.a,null)))})))}},{key:"render",value:function(){var e=this,t=this.props.name,n=this.state,o=n.sectionHeadings,r=n.contentHeight,i={fontWeight:300,fontSize:18,lineHeight:"1.6em",color:null};return x(y.a,{showSolutions:!0,titleSection:{title:t.charAt(0).toUpperCase()+t.slice(1),icon:"/static/images/".concat(w.a.icons[t])}},x(f.a,{id:"tutorialPageContent"},x(m.a,{md:9},x(p.a,{source:this.props.markdown,escapeHtml:!1,renderers:{code:b.a,heading:function(t){return e.parseHeading(t)}}})),x(m.a,{md:3,className:"d-none d-md-block"},x("div",{style:{height:r}},x("div",{style:{paddingTop:90,position:"sticky",top:0}},x("ul",{style:{listStyleType:"none",paddingLeft:0,marginLeft:0}},o.map((function(e){return x("li",{key:"section-".concat(e)},x("a",{href:"#".concat(e),className:"text-danger",style:i,id:"sidenav-".concat(e)},e))}))))))),x("br",null),x(k.a,{href:"/tutorials",backgroundColor:w.a.colors.red,textColor:w.a.colors.white},"Back to Tutorials"))}}]),u}(u.Component)},"48q5":function(e,t,n){"use strict";var o=n("33yf");e.exports=function(e,t){if("string"!==typeof e)return e;if(0===e.length)return e;var n=o.basename(e,o.extname(e))+t;return o.join(o.dirname(e),n)}},"497W":function(e,t,n){"use strict";var o=n("aTp6");e.exports=i,i.locator=o;var r=2;function i(e,t,n){for(var o,i=t.length,a=-1,s="";++a<i;){if("\n"===(o=t.charAt(a))){if(a<r)return;return!!n||e(s+=o)({type:"break"})}if(" "!==o)return;s+=o}}},"4MqD":function(e,t,n){"use strict";e.exports=function(e,t,n){return function(){var o=n||this,r=o[e];return o[e]=!t,function(){o[e]=r}}}},"5cLd":function(e,t,n){(function(t){var n=1/0,o="[object Symbol]",r=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,i=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,a="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",s="[\\ud800-\\udfff]",c="["+a+"]",l="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",u="\\d+",h="[\\u2700-\\u27bf]",d="[a-z\\xdf-\\xf6\\xf8-\\xff]",p="[^\\ud800-\\udfff"+a+u+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",f="\\ud83c[\\udffb-\\udfff]",m="[^\\ud800-\\udfff]",g="(?:\\ud83c[\\udde6-\\uddff]){2}",y="[\\ud800-\\udbff][\\udc00-\\udfff]",b="[A-Z\\xc0-\\xd6\\xd8-\\xde]",w="(?:"+d+"|"+p+")",v="(?:"+b+"|"+p+")",k="(?:"+l+"|"+f+")"+"?",x="[\\ufe0e\\ufe0f]?"+k+("(?:\\u200d(?:"+[m,g,y].join("|")+")[\\ufe0e\\ufe0f]?"+k+")*"),_="(?:"+[h,g,y].join("|")+")"+x,A="(?:"+[m+l+"?",l,g,y,s].join("|")+")",T=RegExp("['\u2019]","g"),S=RegExp(l,"g"),j=RegExp(f+"(?="+f+")|"+A+x,"g"),q=RegExp([b+"?"+d+"+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?="+[c,b,"$"].join("|")+")",v+"+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?="+[c,b+w,"$"].join("|")+")",b+"?"+w+"+(?:['\u2019](?:d|ll|m|re|s|t|ve))?",b+"+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?",u,_].join("|"),"g"),E=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),C=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,P="object"==typeof t&&t&&t.Object===Object&&t,O="object"==typeof self&&self&&self.Object===Object&&self,I=P||O||Function("return this")();var N,R=(N={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xc7":"C","\xe7":"c","\xd0":"D","\xf0":"d","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xd1":"N","\xf1":"n","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xdd":"Y","\xfd":"y","\xff":"y","\xc6":"Ae","\xe6":"ae","\xde":"Th","\xfe":"th","\xdf":"ss","\u0100":"A","\u0102":"A","\u0104":"A","\u0101":"a","\u0103":"a","\u0105":"a","\u0106":"C","\u0108":"C","\u010a":"C","\u010c":"C","\u0107":"c","\u0109":"c","\u010b":"c","\u010d":"c","\u010e":"D","\u0110":"D","\u010f":"d","\u0111":"d","\u0112":"E","\u0114":"E","\u0116":"E","\u0118":"E","\u011a":"E","\u0113":"e","\u0115":"e","\u0117":"e","\u0119":"e","\u011b":"e","\u011c":"G","\u011e":"G","\u0120":"G","\u0122":"G","\u011d":"g","\u011f":"g","\u0121":"g","\u0123":"g","\u0124":"H","\u0126":"H","\u0125":"h","\u0127":"h","\u0128":"I","\u012a":"I","\u012c":"I","\u012e":"I","\u0130":"I","\u0129":"i","\u012b":"i","\u012d":"i","\u012f":"i","\u0131":"i","\u0134":"J","\u0135":"j","\u0136":"K","\u0137":"k","\u0138":"k","\u0139":"L","\u013b":"L","\u013d":"L","\u013f":"L","\u0141":"L","\u013a":"l","\u013c":"l","\u013e":"l","\u0140":"l","\u0142":"l","\u0143":"N","\u0145":"N","\u0147":"N","\u014a":"N","\u0144":"n","\u0146":"n","\u0148":"n","\u014b":"n","\u014c":"O","\u014e":"O","\u0150":"O","\u014d":"o","\u014f":"o","\u0151":"o","\u0154":"R","\u0156":"R","\u0158":"R","\u0155":"r","\u0157":"r","\u0159":"r","\u015a":"S","\u015c":"S","\u015e":"S","\u0160":"S","\u015b":"s","\u015d":"s","\u015f":"s","\u0161":"s","\u0162":"T","\u0164":"T","\u0166":"T","\u0163":"t","\u0165":"t","\u0167":"t","\u0168":"U","\u016a":"U","\u016c":"U","\u016e":"U","\u0170":"U","\u0172":"U","\u0169":"u","\u016b":"u","\u016d":"u","\u016f":"u","\u0171":"u","\u0173":"u","\u0174":"W","\u0175":"w","\u0176":"Y","\u0177":"y","\u0178":"Y","\u0179":"Z","\u017b":"Z","\u017d":"Z","\u017a":"z","\u017c":"z","\u017e":"z","\u0132":"IJ","\u0133":"ij","\u0152":"Oe","\u0153":"oe","\u0149":"'n","\u017f":"ss"},function(e){return null==N?void 0:N[e]});function L(e){return E.test(e)}function H(e){return L(e)?function(e){return e.match(j)||[]}(e):function(e){return e.split("")}(e)}var D=Object.prototype.toString,M=I.Symbol,z=M?M.prototype:void 0,U=z?z.toString:void 0;function F(e){if("string"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&D.call(e)==o}(e))return U?U.call(e):"";var t=e+"";return"0"==t&&1/e==-n?"-0":t}function B(e,t,n){var o=e.length;return n=void 0===n?o:n,!t&&n>=o?e:function(e,t,n){var o=-1,r=e.length;t<0&&(t=-t>r?0:r+t),(n=n>r?r:n)<0&&(n+=r),r=t>n?0:n-t>>>0,t>>>=0;for(var i=Array(r);++o<r;)i[o]=e[o+t];return i}(e,t,n)}function W(e){return null==e?"":F(e)}var V,Y=(V=function(e,t,n){return t=t.toLowerCase(),e+(n?J(W(t).toLowerCase()):t)},function(e){return function(e,t,n,o){var r=-1,i=e?e.length:0;for(o&&i&&(n=e[++r]);++r<i;)n=t(n,e[r],r,e);return n}(function(e,t,n){return e=W(e),void 0===(t=n?void 0:t)?function(e){return C.test(e)}(e)?function(e){return e.match(q)||[]}(e):function(e){return e.match(r)||[]}(e):e.match(t)||[]}(function(e){return(e=W(e))&&e.replace(i,R).replace(S,"")}(e).replace(T,"")),V,"")});var G,J=(G="toUpperCase",function(e){var t=L(e=W(e))?H(e):void 0,n=t?t[0]:e.charAt(0),o=t?B(t,1).join(""):e.slice(1);return n[G]()+o});e.exports=Y}).call(this,n("yLpj"))},"5t69":function(e,t,n){"use strict";var o=n("U6jy"),r=n("P7XM");e.exports=function(e){var t,n,i;for(n in r(s,e),r(a,s),t=s.prototype)(i=t[n])&&"object"===typeof i&&(t[n]="concat"in i?i.concat():o(i));return s;function a(t){return e.apply(this,t)}function s(){return this instanceof s?e.apply(this,arguments):new a(arguments)}}},"6dBs":function(e,t,n){"use strict";var o=Object.prototype.hasOwnProperty,r=Object.prototype.toString,i=Object.defineProperty,a=Object.getOwnPropertyDescriptor,s=function(e){return"function"===typeof Array.isArray?Array.isArray(e):"[object Array]"===r.call(e)},c=function(e){if(!e||"[object Object]"!==r.call(e))return!1;var t,n=o.call(e,"constructor"),i=e.constructor&&e.constructor.prototype&&o.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!n&&!i)return!1;for(t in e);return"undefined"===typeof t||o.call(e,t)},l=function(e,t){i&&"__proto__"===t.name?i(e,t.name,{enumerable:!0,configurable:!0,value:t.newValue,writable:!0}):e[t.name]=t.newValue},u=function(e,t){if("__proto__"===t){if(!o.call(e,t))return;if(a)return a(e,t).value}return e[t]};e.exports=function e(){var t,n,o,r,i,a,h=arguments[0],d=1,p=arguments.length,f=!1;for("boolean"===typeof h&&(f=h,h=arguments[1]||{},d=2),(null==h||"object"!==typeof h&&"function"!==typeof h)&&(h={});d<p;++d)if(null!=(t=arguments[d]))for(n in t)o=u(h,n),h!==(r=u(t,n))&&(f&&r&&(c(r)||(i=s(r)))?(i?(i=!1,a=o&&s(o)?o:[]):a=o&&c(o)?o:{},l(h,{name:n,newValue:e(f,a,r)})):"undefined"!==typeof r&&l(h,{name:n,newValue:r}));return h}},"77Jp":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isTag=function(e){return"tag"===e.type||"script"===e.type||"style"===e.type},t.Text="text",t.Directive="directive",t.Comment="comment",t.Script="script",t.Style="style",t.Tag="tag",t.CDATA="cdata",t.Doctype="doctype"},"7BTi":function(e,t){e.exports=function(e){return"[object Object]"===Object.prototype.toString.call(e)}},"7ZZO":function(e,t,n){var o=n("Wnyi"),r=n("rJtk"),i=function(){function e(e,t){this.xf=t,this.f=e}return e.prototype["@@transducer/init"]=r.init,e.prototype["@@transducer/result"]=r.result,e.prototype["@@transducer/step"]=function(e,t){return this.f(t)?this.xf["@@transducer/step"](e,t):e},e}(),a=o((function(e,t){return new i(e,t)}));e.exports=a},"7e6P":function(e,t,n){var o=n("cOqj"),r=n("Av+g"),i=n("l7rt"),a=!{toString:null}.propertyIsEnumerable("toString"),s=["constructor","valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],c=function(){"use strict";return arguments.propertyIsEnumerable("length")}(),l=function(e,t){for(var n=0;n<e.length;){if(e[n]===t)return!0;n+=1}return!1},u="function"!==typeof Object.keys||c?o((function(e){if(Object(e)!==e)return[];var t,n,o=[],u=c&&i(e);for(t in e)!r(t,e)||u&&"length"===t||(o[o.length]=t);if(a)for(n=s.length-1;n>=0;)r(t=s[n],e)&&!l(o,t)&&(o[o.length]=t),n-=1;return o})):o((function(e){return Object(e)!==e?[]:Object.keys(e)}));e.exports=u},"7nPM":function(e,t,n){"use strict";function o(e){return function(t){var n=-1,o=e.length;if(t<0)return{};for(;++n<o;)if(e[n]>t)return{line:n+1,column:t-(e[n-1]||0)+1,offset:t};return{}}}function r(e){return function(t){var n=t&&t.line,o=t&&t.column;if(!isNaN(n)&&!isNaN(o)&&n-1 in e)return(e[n-2]||0)+o-1||0;return-1}}e.exports=function(e){var t=function(e){var t=[],n=e.indexOf("\n");for(;-1!==n;)t.push(n+1),n=e.indexOf("\n",n+1);return t.push(e.length+1),t}(String(e));return{toPosition:o(t),toOffset:r(t)}}},"8/j2":function(e,t,n){var o=n("ALMR"),r=n("Wnyi")((function(e,t){return o(e.length,(function(){return e.apply(t,arguments)}))}));e.exports=r},"8j/7":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n("AdCt");t.Node=o.Node,t.Element=o.Element,t.DataNode=o.DataNode,t.NodeWithChildren=o.NodeWithChildren;var r=/\s+/g,i={normalizeWhitespace:!1,withStartIndices:!1,withEndIndices:!1},a=function(){function e(e,t,n){this.dom=[],this._done=!1,this._tagStack=[],this._lastNode=null,this._parser=null,"function"===typeof t&&(n=t,t=i),"object"===typeof e&&(t=e,e=void 0),this._callback=e||null,this._options=t||i,this._elementCB=n||null}return e.prototype.onparserinit=function(e){this._parser=e},e.prototype.onreset=function(){this.dom=[],this._done=!1,this._tagStack=[],this._lastNode=null,this._parser=this._parser||null},e.prototype.onend=function(){this._done||(this._done=!0,this._parser=null,this.handleCallback(null))},e.prototype.onerror=function(e){this.handleCallback(e)},e.prototype.onclosetag=function(){this._lastNode=null;var e=this._tagStack.pop();e&&this._parser&&(this._options.withEndIndices&&(e.endIndex=this._parser.endIndex),this._elementCB&&this._elementCB(e))},e.prototype.onopentag=function(e,t){var n=new o.Element(e,t);this.addNode(n),this._tagStack.push(n)},e.prototype.ontext=function(e){var t=this._options.normalizeWhitespace,n=this._lastNode;if(n&&"text"===n.type)t?n.data=(n.data+e).replace(r," "):n.data+=e;else{t&&(e=e.replace(r," "));var i=new o.DataNode("text",e);this.addNode(i),this._lastNode=i}},e.prototype.oncomment=function(e){if(this._lastNode&&"comment"===this._lastNode.type)this._lastNode.data+=e;else{var t=new o.DataNode("comment",e);this.addNode(t),this._lastNode=t}},e.prototype.oncommentend=function(){this._lastNode=null},e.prototype.oncdatastart=function(){var e=new o.DataNode("text",""),t=new o.NodeWithChildren("cdata",[e]);this.addNode(t),e.parent=t,this._lastNode=e},e.prototype.oncdataend=function(){this._lastNode=null},e.prototype.onprocessinginstruction=function(e,t){var n=new o.ProcessingInstruction(e,t);this.addNode(n)},e.prototype.handleCallback=function(e){if("function"===typeof this._callback)this._callback(e,this.dom);else if(e)throw e},e.prototype.addNode=function(e){var t=this._tagStack[this._tagStack.length-1],n=t?t.children:this.dom,o=n[n.length-1];this._parser&&(this._options.withStartIndices&&(e.startIndex=this._parser.startIndex),this._options.withEndIndices&&(e.endIndex=this._parser.endIndex)),n.push(e),o&&(e.prev=o,o.next=e),t&&(e.parent=t),this._lastNode=null},e.prototype.addDataNode=function(e){this.addNode(e),this._lastNode=e},e}();t.DomHandler=a,t.default=a},"8qaq":function(e,t,n){var o=n("Wnyi"),r=n("Vj6a"),i=n("rJtk"),a=function(){function e(e,t){this.xf=t,this.f=e,this.found=!1}return e.prototype["@@transducer/init"]=i.init,e.prototype["@@transducer/result"]=function(e){return this.found||(e=this.xf["@@transducer/step"](e,void 0)),this.xf["@@transducer/result"](e)},e.prototype["@@transducer/step"]=function(e,t){return this.f(t)&&(this.found=!0,e=r(this.xf["@@transducer/step"](e,t))),e},e}(),s=o((function(e,t){return new a(e,t)}));e.exports=s},"90pR":function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nTasks are background jobs meant to be run separately from a client\'s request. They can be started by an action or by the server itself. With Actionhero, there is no need to run a separate daemon to process these jobs. Actionhero uses the [node-resque](https://github.com/actionhero/node-resque) package to store and process tasks in a way compatible with the [resque](https://github.com/resque/resque) ecosystem.\n\nThere are 3 types of tasks Actionhero can process: `normal`, `delayed`, and `periodic`.\n\n- `normal` tasks are enqueued and processed one-by-one by the task TaskProcessors\n- `delayed` tasks are enqueued in a special `delayed` queue to only be processed at some time in the future (defined either by a timestamp in ms or milliseconds-from-now)\n- `periodic` tasks are like delayed tasks, but they run on a set frequency (e.g. every 5 minutes).\n  - Periodic tasks can take no input parameters.\n\n## Enqueing Tasks\n\nHere are examples of the 3 ways to programmatically enqueue a task:\n\n```ts\nimport { task } from "actionhero";\n\n// Enqueue the task now, and process it ASAP\nawait task.enqueue("sendWelcomeEmail", { to: "evan@evantahler.com" });\n\n// Enqueue the task now, and process it once \\`timestamp\\` has arrived\nawait task.enqueueAt(10000, "sendWelcomeEmail", { to: "evan@evantahler.com" });\n\n// Enqueue the task now, and process it once \\`delay\\` (ms) has passed\nawait task.enqueueIn(10000, "sendWelcomeEmail", { to: "evan@evantahler.com" });\n```\n\n`sendWelcomeEmail` should be a task defined in the project, and `{to: \'evan@evantahler.com\'}` are arguments to that task. This task will be processed by TaskProcessors assigned to the "default" queue.\n\nYou can also enqueue tasks to be run at some time in the future (timestamp is in ms): `enqueueAt` asks for a timestamp (in ms) to run at, and `enqueueIn` asks for the number of ms from now to run.\n\nThe final type of task, periodic tasks, are defined with a `task.frequency` of greater than 0, and are loaded in by Actionhero when it boots. You cannot modify these tasks once the server is running.\n\n## Processing Tasks\n\n```ts\n// From /config/tasks.js:\n\nexport const DEFAULT = {\n  tasks: config => {\n    return {\n      // Should this node run a scheduler to promote delayed tasks?\n      scheduler: false,\n      // what queues should the taskProcessors work?\n      queues: ["*"],\n      // Logging levels of task workers\n      workerLogging: {\n        failure: "error", // task failure\n        success: "info", // task success\n        start: "info",\n        end: "info",\n        cleaning_worker: "info",\n        poll: "debug",\n        job: "debug",\n        pause: "debug",\n        internalError: "error",\n        multiWorkerAction: "debug"\n      },\n      // Logging levels of the task scheduler\n      schedulerLogging: {\n        start: "info",\n        end: "info",\n        poll: "debug",\n        enqueue: "debug",\n        reEnqueue: "debug",\n        working_timestamp: "debug",\n        transferred_job: "debug"\n      },\n      // how long to sleep between jobs / scheduler checks\n      timeout: 5000,\n      // at minimum, how many parallel taskProcessors should this node spawn?\n      // (have number > 0 to enable, and < 1 to disable)\n      minTaskProcessors: 0,\n      // at maximum, how many parallel taskProcessors should this node spawn?\n      maxTaskProcessors: 0,\n      // how often should we check the event loop to spawn more taskProcessors?\n      checkTimeout: 500,\n      // how many ms would constitute an event loop delay to halt taskProcessors spawning?\n      maxEventLoopDelay: 5,\n      // how long before we mark a resque worker / task processor as stuck/dead?\n      stuckWorkerTimeout: 1000 * 60 * 60,\n      // Customize Resque primitives, replace null with required replacement.\n      resque_overrides: {\n        queue: null,\n        multiWorker: null,\n        scheduler: null\n      },\n      connectionOptions: {\n        tasks: {}\n      }\n    };\n  }\n};\n```\n\nTo work these tasks, you need to run Actionhero with at least one `taskProcessor`. `TaskProcessor`s run in-line with the rest of your server and process jobs. This is controlled by settings in [/config/tasks.js](https://github.com/Actionhero/Actionhero/blob/master/src/config/tasks.ts).\n\nIf you are enqueuing delayed or periodic tasks, you also need to enable the scheduler. This is a part of Actionhero that will periodically check the delayed queues for jobs that are ready to work now, and move them to the normal queues when the time comes.\n\nBecause node and Actionhero are asynchronous, we can process more than one job at a time. However, if the jobs we are processing are CPU-intensive, we want to limit how many we are working on at one time. To do this, we tell Actionhero to run somewhere between `minTaskProcessors` and `maxTaskProcessors` and check every so often if the server could be working more or less jobs at a time. Depending on the response characteristics you want for your server, you can modify these values.\n\nIn production, it is best to set up some Actionhero servers that only handle requests from clients (that is, servers with no TaskProcessors) and others that handle no requests, and only process jobs (that is, no servers, many `TaskProcessor`s).\n\nAs you noticed above, when you enqueue a task, you tell it which queue to be enqueued within. This is so you can separate load or priority. For example, you might have a `high` priority queue which does jobs like "sendPushMessage" and a `low` priority queue which does a task like "cleanupCache". You tell the `taskProcessor`s which jobs to work, and in which priority. For the example above, you would ensure that all `high` jobs happen before all `low` jobs by setting: `api.config.tasks.queues = [\'high\', \'low\']`. You could also configure more nodes to work on the `high` queue than the `low` queue, thus further ensuring that `high` priority jobs are processed faster and sooner than `low` priority jobs.\n\n## Creating A Task\n\nAn few ways to define a task:\n\n```ts\n// define a single task in a file\nimport { Task } from "actionhero";\nimport { sendWelcomeEamail } from "./../modules/email";\n\nexport class SendWelcomeMessage extends Task {\n  constructor() {\n    super();\n    this.name = "SendWelcomeEmail";\n    this.description = "I send the welcome email to new users";\n    this.frequency = 0;\n    this.queue = "high";\n    this.middleware = [];\n  }\n\n  async run(data) {\n    await sendWelcomeEmail({ address: data.email });\n    return true;\n  }\n}\n```\n\nYou can also define more than one task in a file, exporting each with a separate `exports` directive, ie:.\n\n```ts\nimport { Task } from "actionhero";\n\nexport class SayHello extends Task {\n  constructor() {\n    super();\n    this.name = "sayHello";\n    this.description = "I say hello";\n    this.frequency = 1000;\n    this.queue = "low";\n    this.middleware = [];\n  }\n\n  async run() {\n    api.log("hello");\n  }\n}\n\nexport class SayGoodbye extends Task {\n  constructor() {\n    super();\n    this.name = "sayGoodbye";\n    this.description = "I say goodbye";\n    this.frequency = 2000;\n    this.queue = "low";\n    this.middleware = [];\n  }\n\n  async run() {\n    api.log("goodbye");\n  }\n}\n```\n\nOutput of the above:\n\n```bash\n# The output of running the last 2 tasks would be:\n\n2013-11-28 15:21:56 - debug: resque scheduler working timestamp 1385680913\n2013-11-28 15:21:56 - debug: resque scheduler enqueuing job 1385680913 class=sayHello, queue=default,\n2013-11-28 15:21:56 - debug: resque scheduler working timestamp 1385680914\n2013-11-28 15:21:56 - debug: resque scheduler enqueuing job 1385680914 class=sayGoodbye, queue=default,\n2013-11-28 15:21:56 - debug: resque worker #1 working job default class=sayHello, queue=default,\n2013-11-28 15:21:56 - info: hello\n2013-11-28 15:21:56 - debug: re-enqueued recurrent job sayHello\n2013-11-28 15:21:56 - debug: resque worker #1 working job default class=sayGoodbye, queue=default,\n2013-11-28 15:21:56 - info: goodbye\n2013-11-28 15:21:56 - debug: re-enqueued recurrent job sayGoodbye\n```\n\nYou can create you own tasks by placing them in a `./tasks/` directory at the root of your application. You can use the generator `actionhero generate task --name=myTask`. Like actions, all tasks have some required metadata:\n\n- `task.name`: The unique name of your task\n- `task.description`: a description\n- `task.queue`: the default queue to run this task within (can be overwritten when enqueued)\n- `task.frequency`: In milliseconds, how often should I run?. A frequency of `> 0` denotes this task as periodic and Actionhero will automatically enqueued when the server boots. Only one instance of a periodic task will be enqueued within the cluster at a time, regardless of how many Actionhero nodes are connected.\n- `task.middleware`: middleware modify how your tasks are enqueued. For example, if you use the `queue-lock` plugin, only one instance of any job (with similar arguments) can be enqueued at a time. You can [learn more about middleware here](tutorial-middleware.html)\n\n`task.run` contains the actual work that the task does. It takes the following arguments:\n\n- `params`: An array of parameters that the task was enqueued with. This is whatever was passed as the second argument to `api.tasks.enqueue`.\n\nThrowing an error will stop the task, and log it as a failure in resque, which you can inspect via the various [tasks](api.tasks.html) methods. If a periodic task throws an error, it will not be run again.\n\n## Task Inputs\n\nJust like [Actions](/tutorials/actions), you can optionally define the inputs your task expects.\nInputs can be:\n\n- required\n- default\n- validated\n\nUnlike actions, we don\u2019t need a formatter, as the inputs should already be of the proper type, coming from the server. We can check the inputs at `enqueue` rather than at runtime. This will ensure that no task without the required inputs is enqueued.\n\nFor example, with this task:\n\n```ts\nimport { Task } from "actionhero";\n\nclass SendWelcomeEmail extends Task {\n  constructor() {\n    super();\n    this.name = "sendWelcomeEmail";\n    this.description = "send a new user a welcome email";\n    this.queue = "email";\n    this.frequency = 0;\n    this.inputs = {\n      email: { required: true },\n      template: { required: true, default: "welcome-email-en" }\n    };\n  }\n\n  async run(params) {\n    // send the email\n  }\n}\n```\n\n- `await task.enqueue(\'sendWelcomeEmail\')` would throw an error, as "email" is a required input\n- `await task.enqueue(\'sendWelcomeEmail\', {email: \'evan@actionherojs.com\'})` would be ok, and in the task `params.template` would be set to `welcome-email-en` when the task is run, per the defaults.\n\nThere are also validators you can use, and like actions, you can throw a custom error or return false to prevent the task from being enqueued, ie:\n\n```ts\nimport { Task } from "actionhero";\n\nfunction emailValidator(p) {\n  if (p.indexOf("@") < 0) {\n    throw new Error("that is not an email address");\n  }\n}\n\nclass SendWelcomeEmail extends Task {\n  constructor() {\n    super();\n    this.name = "sendWelcomeEmail";\n    this.description = "send a new user a welcome email";\n    this.queue = "email";\n    this.frequency = 0;\n    this.inputs = {\n      email: { required: true, validator: emailValidator },\n      template: { required: true, default: "welcome-email-en" }\n    };\n  }\n\n  async run(params) {\n    // send the email\n  }\n}\n```\n\n- `await task.enqueue(\'sendWelcomeEmail\', {email: \'someone\'})` would throw an error, as the email is missing the `"@"`\n- `await task.enqueue(\'sendWelcomeEmail\', {email: \'evan@actionherojs.com\'})` would be ok\n\n## Job Schedules\n\nYou may want to schedule jobs every minute/hour/day, like a distributed CRON job. There are a number of excellent node packages to help you with this, like [node-schedule](https://github.com/tejasmanohar/node-schedule) and [node-cron](https://github.com/ncb000gt/node-cron). Actionhero exposes [node-resque\'s](https://github.com/taskrabbit/node-resque) scheduler to you so you can use the scheduler package of your choice.\n\nAssuming you are running Actionhero across multiple machines, you will need to ensure that only one of your processes is actually scheduling the jobs. To help you with this, you can inspect which of the scheduler processes is correctly acting as master, and flag only the master scheduler process to run the schedule. An [initializer for this](tutorial-initializers.html) would look like:\n\n```ts\n// file: initializers/node_schedule.js\n\nimport * as schedule from "node-schedule";\nimport { api, task, Initializer } from "actionhero";\n\nexport class Scheduler extends Initializer {\n  constructor() {\n    super();\n    this.name = "scheduler";\n  }\n\n  initialize() {\n    this.scheduledJobs = [];\n  }\n\n  start() {\n    // do this job every 10 seconds, cron style\n    const job = schedule.scheduleJob("0,10,20,30,40,50 * * * * *", async () => {\n      // we want to ensure that only one instance of this job is scheduled in our environment at once,\n      // no matter how many schedulers we have running\n      if (api.resque.scheduler && api.resque.scheduler.master) {\n        await task.enqueue(\n          "sayHello",\n          { time: new Date().toString() },\n          "default"\n        );\n      }\n    });\n\n    this.scheduledJobs.push(job);\n  }\n\n  stop() {\n    this.scheduledJobs.forEach(job => {\n      job.cancel();\n    });\n  }\n}\n```\n\nBe sure to have the scheduler enabled on at least one of your Actionhero servers!\n\n## Failed Job Management\n\nSometimes a worker crashes is a severe way, and it doesn\'t get the time/chance to notify redis that it is leaving the pool (this happens all the time on PAAS providers like Heroku). When this happens, you will not only need to extract the job from the now-zombie worker\'s "working on" status, but also remove the stuck worker. To aid you in these edge cases, `api.tasks.cleanOldWorkers(age)` is available.\n\nBecause there are no \'heartbeats\' in resque, it is impossible for the application to know if a worker has been working on a long job or it is dead. You are required to provide an "age" for how long a worker has been "working", and all those older than that age will be removed, and the job they are working on moved to the error queue (where you can then use `api.tasks.retryAndRemoveFailed`) to re-enqueue the job.\n\nYou can handle this with an own initializer and the following logic:\n\n```ts\nimport { log, task } from "actionhero";\n\nconst removeStuckWorkersOlderThan = 10000; // 10000ms\n\nlog(\n  `removing stuck workers solder than ${removeStuckWorkersOlderThan}ms`,\n  "info"\n);\n\nconst result = task.cleanOldWorkers(removeStuckWorkersOlderThan);\n\nif (Object.keys(result).length > 0) {\n  log("removed stuck workers with errors: ", "info", result);\n}\n```\n\n## Testing Tasks\n\nTasks are expected to be as lean as possible, with most of their logic living in other methods you\'ve created via initializers or middleware (or included via packages). This helps keep your task logic concise, limited to execution and scheduling... and the executing functions easier to test.\n\nActionhero ships with a method to help you check if a task is enqueued, `api.specHelper.findEnqueuedTasks(taskName)`:\n\n```ts\nimport { api, task } from "actionhero";\n\ndescribe("task testing", () => {\n  beforeEach(async () => {\n    // if you are testing tasks, you likely want to start each test with an empty test redis\n    await api.resque.queue.connection.redis.flushdb();\n  });\n\n  test("detect that a task was enqueued to run now", async () => {\n    await task.enqueue("regularTask", { word: "testing" });\n    const found = await api.specHelper.findEnqueuedTasks("regularTask");\n    expect(found.length).toEqual(1);\n    expect(found[0].args[0].word).toEqual("testing");\n    expect(found[0].timestamp).toBeNull();\n  });\n});\n```\n\n## Resque Health\n\nMonitoring the health of your task queues is important. We use [node-resque](https://github.com/actionhero/node-resque) and connect to Redis to store task data. Actionhero promotes a number of methods from node-resque to the task namespace so that you can check the length of your task queues (are they growing? shrinking?), see what the workers are working on, and more. A great starting point is `await task.details()`, an async method which will collect the results of many information queries from resque:\n\n```ts\n/**\n * Return wholistic details about the task system, including failures, queues, and workers.\n * Will throw an error if redis cannot be reached.\n */\nexport async function details(): Promise<{ [key: string]: any }> {\n  const details = { queues: {}, workers: {}, stats: null };\n\n  details.workers = await task.allWorkingOn();\n  details.stats = await task.stats();\n  const queues = await api.resque.queue.queues();\n\n  for (const i in queues) {\n    const queue = queues[i];\n    const length = await api.resque.queue.length(queue);\n    details.queues[queue] = { length: length };\n  }\n\n  return details;\n}\n```\n\nYou can then use this information in an action, which you can then hit to check the status of your cluster. The default `status` action does a basic version of this:\n\n```ts\nasync checkResqueQueues(data) {\n  const maxResqueQueueLength = 1000\n  const details = await task.details();\n  let length = 0;\n  Object.keys(details.queues).forEach(q => {\n    length += details.queues[q].length;\n  });\n\n  if (length > maxResqueQueueLength) {\n    // return this information in some way...\n  }\n}\n```\n\nLearn more at https://docs.actionherojs.com/modules/task.html\n\nYou can also ask for information about the redis database itself, like how much RAM it is currently using with `api.resque.clients[name-of-client].info()`. Note there are 3 connections to redis, each with a different client name.\n\n## Notes\n\nNote that the `frequency`, `enqueueIn` and `enqueueAt` times are when a task is **allowed** to run, not when it **will** run. TaskProcessors will work tasks in a first-in-first-out manner. TaskProcessors also `sleep` when there is no work to do, and will take some time (default 5 seconds) to wake up and check for more work to do.\n\nRemember that each Actionhero server uses one thread and one event loop, so that if you have computationally intensive task (like computing Fibonacci numbers), this **will** block tasks, actions, and clients from working. However, if your tasks are meant to communicate with external services (reading from a database, sending an email, etc), then these are perfect candidates to be run simultaneously as the single thread can work on other things while waiting for these operations to complete.\n\nIf you are running a single Actionhero server, all tasks will be run locally. As you add more servers, the work will be split evenly across all nodes. It is very likely that your job will be run on different nodes each time.\n'},"9Z5P":function(e,t,n){"use strict";var o=n("ZkSf");function r(e){var t=e.children;e.children=[{type:"tableHead",align:e.align,children:[t[0]],position:t[0].position}],t.length>1&&e.children.push({type:"tableBody",align:e.align,children:t.slice(1),position:{start:t[1].position.start,end:t[t.length-1].position.end}})}e.exports=function(e){return o(e,"table",r),e}},"9fJ0":function(e){e.exports=JSON.parse('{"amp":"&","apos":"\'","gt":">","lt":"<","quot":"\\""}')},"9gHp":function(e,t,n){var o=n("hOtR"),r=n("/W8u");e.exports=function(e,t,n){return function(){if(0===arguments.length)return n();var i=Array.prototype.slice.call(arguments,0),a=i.pop();if(!o(a)){for(var s=0;s<e.length;){if("function"===typeof a[e[s]])return a[e[s]].apply(a,i);s+=1}if(r(a)){var c=t.apply(null,i);return c(a)}}return n.apply(this,arguments)}}},"9n51":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n("MSw7");function r(e,t){var n=[],r=[];if(e===t)return 0;for(var i=o.hasChildren(e)?e:e.parent;i;)n.unshift(i),i=i.parent;for(i=o.hasChildren(t)?t:t.parent;i;)r.unshift(i),i=i.parent;for(var a=0;n[a]===r[a];)a++;if(0===a)return 1;var s=n[a-1],c=s.children,l=n[a],u=r[a];return c.indexOf(l)>c.indexOf(u)?s===t?20:4:s===e?10:2}t.removeSubsets=function(e){for(var t=e.length;--t>=0;){var n=e[t];if(t>0&&e.lastIndexOf(n,t-1)>=0)e.splice(t,1);else for(var o=n.parent;o;o=o.parent)if(e.indexOf(o)>-1){e.splice(t,1);break}}return e},t.compareDocumentPosition=r,t.uniqueSort=function(e){return(e=e.filter((function(e,t,n){return!n.includes(e,t+1)}))).sort((function(e,t){var n=r(e,t);return 2&n?-1:4&n?1:0})),e}},A6mZ:function(e,t,n){"use strict";e.exports=function(e){return function(t,n){var i,a,s,c,l,u,h=this,d=h.offset,p=[],f=h[e+"Methods"],m=h[e+"Tokenizers"],g=n.line,y=n.column;if(!t)return p;k.now=w,k.file=h.file,b("");for(;t;){for(i=-1,a=f.length,l=!1;++i<a&&(c=f[i],!(s=m[c])||s.onlyAtStart&&!h.atStart||s.notInList&&h.inList||s.notInBlock&&h.inBlock||s.notInLink&&h.inLink||(u=t.length,s.apply(h,[k,t]),!(l=u!==t.length))););l||h.file.fail(new Error("Infinite loop"),k.now())}return h.eof=w(),p;function b(e){for(var t=-1,n=e.indexOf("\n");-1!==n;)g++,t=n,n=e.indexOf("\n",n+1);-1===t?y+=e.length:y=e.length-t,g in d&&(-1!==t?y+=d[g]:y<=d[g]&&(y=d[g]+1))}function w(){var e={line:g,column:y};return e.offset=h.toOffset(e),e}function v(e){this.start=e,this.end=w()}function k(e){var n=function(){var e=[],t=g+1;return function(){for(var n=g+1;t<n;)e.push((d[t]||0)+1),t++;return e}}(),i=function(){var e=w();return function(t,n){var o=t.position,r=o?o.start:e,i=[],a=o&&o.end.line,s=e.line;if(t.position=new v(r),o&&n&&o.indent){if(i=o.indent,a<s){for(;++a<s;)i.push((d[a]||0)+1);i.push(e.column)}n=i.concat(n)}return t.position.indent=n||[],t}}(),a=w();return function(e){t.substring(0,e.length)!==e&&h.file.fail(new Error("Incorrectly eaten value: please report this warning on http://git.io/vg5Ft"),w())}(e),s.reset=c,c.test=l,s.test=l,t=t.substring(e.length),b(e),n=n(),s;function s(e,t){return i(function(e,t){var n=t?t.children:p,i=n[n.length-1];return i&&e.type===i.type&&e.type in o&&r(i)&&r(e)&&(e=o[e.type].call(h,i,e)),e!==i&&n.push(e),h.atStart&&0!==p.length&&h.exitStart(),e}(i(e),t),n)}function c(){var n=s.apply(null,arguments);return g=a.line,y=a.column,t=e+t,n}function l(){var n=i({});return g=a.line,y=a.column,t=e+t,n.position}}}};var o={text:function(e,t){return e.value+=t.value,e},blockquote:function(e,t){if(this.options.commonmark)return t;return e.children=e.children.concat(t.children),e}};function r(e){var t,n;return"text"!==e.type||!e.position||(t=e.position.start,n=e.position.end,t.line!==n.line||n.column-t.column===e.value.length)}},ABxe:function(e,t){e.exports=function(e){return null!=e&&"object"===typeof e&&!0===e["@@functional/placeholder"]}},ALMR:function(e,t){e.exports=function(e,t){switch(e){case 0:return function(){return t.apply(this,arguments)};case 1:return function(e){return t.apply(this,arguments)};case 2:return function(e,n){return t.apply(this,arguments)};case 3:return function(e,n,o){return t.apply(this,arguments)};case 4:return function(e,n,o,r){return t.apply(this,arguments)};case 5:return function(e,n,o,r,i){return t.apply(this,arguments)};case 6:return function(e,n,o,r,i,a){return t.apply(this,arguments)};case 7:return function(e,n,o,r,i,a,s){return t.apply(this,arguments)};case 8:return function(e,n,o,r,i,a,s,c){return t.apply(this,arguments)};case 9:return function(e,n,o,r,i,a,s,c,l){return t.apply(this,arguments)};case 10:return function(e,n,o,r,i,a,s,c,l,u){return t.apply(this,arguments)};default:throw new Error("First argument to _arity must be a non-negative integer no greater than ten")}}},AdCt:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();Object.defineProperty(t,"__esModule",{value:!0});var r=new Map([["tag",1],["script",1],["style",1],["directive",1],["text",3],["cdata",4],["comment",8]]),i=function(){function e(e){this.type=e,this.parent=null,this.prev=null,this.next=null,this.startIndex=null,this.endIndex=null}return Object.defineProperty(e.prototype,"nodeType",{get:function(){return r.get(this.type)||1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parentNode",{get:function(){return this.parent||null},set:function(e){this.parent=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"previousSibling",{get:function(){return this.prev||null},set:function(e){this.prev=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nextSibling",{get:function(){return this.next||null},set:function(e){this.next=e},enumerable:!0,configurable:!0}),e}();t.Node=i;var a=function(e){function t(t,n){var o=e.call(this,t)||this;return o.data=n,o}return o(t,e),Object.defineProperty(t.prototype,"nodeValue",{get:function(){return this.data},set:function(e){this.data=e},enumerable:!0,configurable:!0}),t}(i);t.DataNode=a;var s=function(e){function t(t,n){var o=e.call(this,"directive",n)||this;return o.name=t,o}return o(t,e),t}(a);t.ProcessingInstruction=s;var c=function(e){function t(t,n){var o=e.call(this,t)||this;return o.children=n,o}return o(t,e),Object.defineProperty(t.prototype,"firstChild",{get:function(){return this.children[0]||null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lastChild",{get:function(){return this.children[this.children.length-1]||null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"childNodes",{get:function(){return this.children},set:function(e){this.children=e},enumerable:!0,configurable:!0}),t}(i);t.NodeWithChildren=c;var l=function(e){function t(t,n){var o=e.call(this,"script"===t?"script":"style"===t?"style":"tag",[])||this;return o.name=t,o.attribs=n,o.attribs=n,o}return o(t,e),Object.defineProperty(t.prototype,"tagName",{get:function(){return this.name},set:function(e){this.name=e},enumerable:!0,configurable:!0}),t}(c);t.Element=l},"Av+g":function(e,t){e.exports=function(e,t){return Object.prototype.hasOwnProperty.call(t,e)}},BEtg:function(e,t){function n(e){return!!e.constructor&&"function"===typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(n(e)||function(e){return"function"===typeof e.readFloatLE&&"function"===typeof e.slice&&n(e.slice(0,0))}(e)||!!e._isBuffer)}},"BRr/":function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var r=c(o(n("9fJ0")).default),i=l(r);t.encodeXML=f(r,i);var a=c(o(n("xWCP")).default),s=l(a);function c(e){return Object.keys(e).sort().reduce((function(t,n){return t[e[n]]="&"+n+";",t}),{})}function l(e){var t=[],n=[];return Object.keys(e).forEach((function(e){return 1===e.length?t.push("\\"+e):n.push(e)})),n.unshift("["+t.join("")+"]"),new RegExp(n.join("|"),"g")}t.encodeHTML=f(a,s);var u=/[^\0-\x7F]/g,h=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function d(e){return"&#x"+e.charCodeAt(0).toString(16).toUpperCase()+";"}function p(e,t){return"&#x"+(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)-56320+65536).toString(16).toUpperCase()+";"}function f(e,t){return function(n){return n.replace(t,(function(t){return e[t]})).replace(h,p).replace(u,d)}}var m=l(r);t.escape=function(e){return e.replace(m,d).replace(h,p).replace(u,d)}},BjVE:function(e,t,n){"use strict";e.exports=function(e,t){var n=e.indexOf("**",t),o=e.indexOf("__",t);if(-1===o)return n;if(-1===n)return o;return o<n?o:n}},"BoY+":function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nUpgrading big Actionhero projects to a new major might require some effort. Every Actionhero version has it\'s own specific project files which you generate using `Actionhero generate` command.\n\nOne of the ways to upgrade your project is to generate a new project using the latest Actionhero framework (`npx Actionhero generate`). Using that as your starting point you can then carefully copy all your `configs`, `initializers`, `servers`, `tasks`, `actions`, and other custom code from your old project, making sure that you are at the same working state as before. It\'s a good practice to make tests for your actions (or any other component) before you plan to upgrade your Actionhero project.\n\nWith good [test coverage](tutorial-testing.html) you can make sure that you have successfully upgraded your project.\n\nActionhero follows [semantic versioning](http://semver.org/). This means that a minor change is a right-most number. A new feature added is the middle number, and a breaking change is the left number. You should expect something in your application to need to be changed if you upgrade a major version.\n\n## Upgrading from v21 to v22\n\nAssuming that you have already migrated your project to [Typescript](/tutorials/typescript), the only change is create your `server.ts` and change your `package.json` scripts to use it. Support for `boot.js` has also been removed, and you should move that logic into your new `server.ts`\n\n```ts\n// in ./src/server.ts\nimport { Process } from "actionhero";\n\n// load any custom code, configure the env, as needed\n\nasync function main() {\n  // create a new actionhero process\n  const app = new Process();\n\n  // handle unix signals and uncaught exceptions & rejections\n  app.registerProcessSignals();\n\n  // start the app!\n  // you can pass custom configuration to the process as needed\n  await app.start();\n}\n\nmain();\n```\n\nYour package json should now contain:\n\n```js\n  "scripts": {\n    "postinstall": "npm run build",\n    "dev": "ts-node-dev --no-deps --transpile-only ./src/server.ts",\n    "start": "node ./dist/server.js",\n    "test": "jest",\n    "pretest": "npm run build && npm run lint",\n    "build": "tsc --declaration",\n    "lint": "prettier --check src/*/** __test__/*/**",\n    "pretty": "prettier --write src/*/** __test__/*/**"\n  },\n```\n\nAlso be sure that your `packate.json` contains the `@types/ioreids` devDependency.  You can install it with `npm install --save-dev @types/ioredis`\n\nTasks can now use [input validation](https://www.actionherojs.com/tutorials/tasks#Task%20Inputs).\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v22.0.0)**\n\n## Upgrading from v20 to v21\n\nThe recommended upgrade to v21 of Actionhero is to move your project to Typescript.\nDetailed notes can be found on the [Typescript Tutorial](/tutorials/typescript).\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v21.0.9)**\n\n## Upgrading from v19 to v20\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v20.0.0)**\n\nThe only change to take note of is that you must now ensure that the working directory (CWD/PWD) in use when you start your Actionhero project is the root. (where /config, /actions, etc) are visible.\n\n## Upgrading from v18 to v19\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v19.0.0)**\n\n**Configuration**\n\n- in `config/tasks.js` `add api.config.tasks.stuckWorkerTimeout = 3600000`. This will be a 1 hour timeout for stuck/crashed worker processes\n- in `config/servers/websocket.js` `add api.config.servers.websocket.client.cookieKey = api.config.servers.web.fingerprintOptions.cookieKey`. This will instruct the Actionhero Websocket Clients to share the same cookie as the web server to share a fingerprint, which can be used to share session information.\n- If you plan to use Jest for your tests, and want to test in parallel, you will need to configure your server in the test environment to make use of `process.env.JEST_WORKER_ID`. Please view [`config/api.js`](https://github.com/actionhero/actionhero/blob/master/config/api.js), [`config/redis.js`](https://github.com/actionhero/actionhero/blob/master/config/redis.js), [`config/servers/socket.js`](https://github.com/actionhero/actionhero/blob/master/config/servers/socket.js), and [`config/servers/web.js`](https://github.com/actionhero/actionhero/blob/master/config/servers/web.js) for more information\n\n## Upgrading from v19 to v20\n\n**Full Release Notes: [GitHub](https://github.com/actionhero/actionhero/releases/tag/v20.0.0)**\n\n- In `config/api.js` add `api.config.general.paths.test = [path.join(__dirname, \'/../__tests__\')]` so that when you generate a new action or task, the related test file can be generated as well.\n- However you run Actionhero, be sure to `cd` into the root directory of the project before starting the server.\n\n## Upgrading from v19 to v20\n\n**Full Release Notes: [GitHub](https://github.com/actionhero/actionhero/releases/tag/v19.0.0)**\n\n- in `config/tasks.js` `add api.config.tasks.stuckWorkerTimeout = 3600000`. This will be a 1 hour timeout for stuck/crashed worker processes\n- in `config/servers/websocket.js` `add api.config.servers.websocket.client.cookieKey = api.config.servers.web.fingerprintOptions.cookieKey`. This will instruct the Actionhero Websocket Clients to share the same cookie as the web server to share a fingerprint, which can be used to share session information.\n- If you plan to use Jest for your tests, and want to test in parallel, you will need to configure your server in the test environment to make use of `process.env.JEST_WORKER_ID`. Please view [`config/api.js`](https://github.com/actionhero/actionhero/blob/master/config/api.js), [`config/redis.js`](https://github.com/actionhero/actionhero/blob/master/config/redis.js), [`config/servers/socket.js`](https://github.com/actionhero/actionhero/blob/master/config/servers/socket.js), and [`config/servers/web.js`](https://github.com/actionhero/actionhero/blob/master/config/servers/web.js) for more information\n\n## Upgrading from v17 to v18\n\n**Full Release Notes: [GitHub](https://github.com/actionhero/actionhero/releases/tag/v18.0.0)**\n\n**Breaking Changes and How to Overcome Them:**\n\nThere are _many_ changes to the APIs Actionhero exposes. You can read up on the new syntax on our [new documentation website, docs.actionherojs.com](https://docs.actionherojs.com)\n\n- **Node.js version**\n\n  - Node.js v8 and higher is now required. You must update your projects.\n\n- **Actions**\n  - Actions are now ES6 classes, which extend `require(\'Actionhero\').Action`.\n  - The `run` method only has one argument now, `data` and becomes a `async` method. `api` can be required globally to your file.\n\n```js\nconst { Action, api } = require("actionhero");\n\nmodule.exports = class MyAction extends Action {\n  constructor() {\n    super();\n    this.name = "randomNumber";\n    this.description = "I am an API method which will generate a random number";\n    this.outputExample = { randomNumber: 0.1234 };\n  }\n\n  async run(data) {\n    data.response.randomNumber = Math.random();\n  }\n};\n```\n\n- **Tasks**\n  - Tasks are now ES6 classes, which extend `require(\'Actionhero\').Task`.\n  - The `run` method only has one argument now, `data` and becomes a `async` method. `api` can be required globally to your file.\n\n```js\nconst { api, Task } = require("actionhero");\n\nmodule.exports = class SendWelcomeMessage extends Task {\n  constructor() {\n    super();\n    this.name = "SendWelcomeEmail";\n    this.description = "I send the welcome email to new users";\n    this.frequency = 0;\n    this.queue = "high";\n    this.middleware = [];\n  }\n\n  async run(data) {\n    await api.sendWelcomeEmail({ address: data.email });\n    return true;\n  }\n};\n```\n\n- **Initializers**\n  - Initializers are now ES6 classes, which extend `require(\'actionhero\').Initializer`.\n  - The `initialize`, `start`, and `stop` methods now have no arguments and become a `async` methods. `api` can be required globally to your file.\n\n```js\nconst { Actionhero, api } = require("actionhero");\n\nmodule.exports = class StuffInit extends Actionhero.Initializer {\n  constructor() {\n    super();\n    this.name = "StuffInit";\n    this.loadPriority = 1000;\n    this.startPriority = 1000;\n    this.stopPriority = 1000;\n  }\n\n  async initialize() {\n    api.StuffInit = {};\n    api.StuffInit.doAThing = async () => {};\n    api.StuffInit.stopStuff = async () => {};\n    api.log("I initialized", "debug", this.name);\n  }\n\n  async start() {\n    await api.StuffInit.startStuff();\n    api.log("I started", "debug", this.name);\n  }\n\n  async stop() {\n    await api.StuffInit.stopStuff();\n    api.log("I stopped", "debug", this.name);\n  }\n};\n```\n\n- **Servers**\n  - Servers are now ES6 classes, which extend `require(\'Actionhero\').Server`.\n  - The `initialize`, `start`, and `stop` methods now have no arguments and become a `async` methods. `api` can be required globally to your file.\n\n```js\nconst Actionhero = require("Actionhero");\n\nmodule.exports = class MyServer extends Actionhero.Server {\n  constructor() {\n    super();\n    this.type = "%%name%%";\n\n    this.attributes = {\n      canChat: false,\n      logConnections: true,\n      logExits: true,\n      sendWelcomeMessage: false,\n      verbs: []\n    };\n    // this.config will be set to equal api.config.servers[this.type]\n  }\n\n  initialize() {\n    this.on("connection", connection => {});\n\n    this.on("actionComplete", data => {});\n  }\n\n  start() {\n    // this.buildConnection (data)\n    // this.processAction (connection)\n    // this.processFile (connection)\n  }\n\n  stop() {}\n\n  sendMessage(connection, message, messageId) {}\n\n  sendFile(connection, error, fileStream, mime, length, lastModified) {}\n\n  goodbye(connection) {}\n};\n```\n\n- **CLI Commands**\n  - CLI Commands are now ES6 classes, which extend `require(\'Actionhero\').CLI`.\n  - The `run` method now has one argument, `data` and becomes a `async` method. `api` can be required globally to your file.\n\n```js\nconst {api, CLI} = require(\'Actionhero\')\n\nmodule.exports = class RedisKeys extends CLI {\n  constructor () {\n    super()\n    this.name = \'redis keys\'\n    this.description = \'I list all the keys in redis\'\n    this.example = \'Actionhero keys --prefix Actionhero\'\n  }\n\n  inputs () {\n    return {\n      prefix: {\n        required: true,\n        default: \'Actionhero\',\n        note: \'the redis prefix for searching keys\'\n      }\n    }\n  }\n\n  async run ({params}) => {\n    let keys = await api.redis.clients.client.keys(params.prefix)\n    api.log(\'Found \' + keys.length + \'keys:\')\n    keys.forEach((k) => { api.log(k) })\n  }\n}\n```\n\n- **Cache**\n\n  - All methods which used to return a callback are now `async` methods which, when `await`ed, return a result and `throw` errors\n\n- **Tasks**\n\n  - All methods which used to return a callback are now `async` methods which, when `await`ed, return a result and `throw` errors\n\n- **Chat**\n\n  - All methods which used to return a callback are now `async` methods which, when `await`ed, return a result and `throw` errors\n\n- **SpecHelper**\n  - All methods which used to return a callback are now `async` methods which, when `await`ed, return a result and `throw` errors\n\n```js\nconst chai = require("chai");\nconst dirtyChai = require("dirty-chai");\nconst expect = chai.expect;\nchai.use(dirtyChai);\n\nconst path = require("path");\nconst Actionhero = require("Actionhero");\nconst Actionhero = new Actionhero.Process();\nlet api;\n\ndescribe("Action: RandomNumber", () => {\n  before(async () => {\n    api = await Actionhero.start();\n  });\n  after(async () => {\n    await Actionhero.stop();\n  });\n\n  let firstNumber = null;\n  it("generates random numbers", async () => {\n    let { randomNumber } = await api.specHelper.runAction("randomNumber");\n    expect(randomNumber).to.be.at.least(0);\n    expect(randomNumber).to.be.at.most(1);\n    firstNumber = randomNumber;\n  });\n\n  it("is unique / random", async () => {\n    let { randomNumber } = await api.specHelper.runAction("randomNumber");\n    expect(randomNumber).to.be.at.least(0);\n    expect(randomNumber).to.be.at.most(1);\n    expect(randomNumber).not.to.equal(firstNumber);\n  });\n});\n```\n\n- **Utils**\n\n  - `api.utils.recursiveDirectoryGlob` has been removed in favor of the [glob package](https://github.com/isaacs/node-glob). Use this instead.\n  - All methods which used to return a callback are now `async` methods which, when `await`ed, return a result and `throw` errors\n\n- **Plugins**\n\n  - Actionhero no longer uses linkfiles to find plugins. If you have any in a `plugins` directory in your actions, tasks, config, or public folders, delete them.\n  - Plugins now need to be defined explicitly in a new `./config/plugins.js` config file. You should create one [per the example](https://github.com/Actionhero/Actionhero/blob/master/config/plugins.js)\n  - Removed `Actionhero link` and `Actionhero unlink` per the above.\n  - Added `Actionhero generate plugin`, a helper which you can use in an empty directory which will create a template plugin project\n  - Testing plugins is now simpler. [Read more about this on docs.actionherojs.com](https://docs.actionherojs.com/tutorial-plugins.html)\n\n- **Clients**\n  - `ActionheroClient` (the included client library for browser websocket clients) as been named a more clear `ActionheroWebsocketClient` to avoid ambiguity.\n  - The node sever-sever package has been renamed `Actionhero-node-client` to help clear up any confusion.\n\n## Upgrading from v16 to v17\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v17.0.0)**\n\n**Breaking Changes and How to Overcome Them:**\n\n- **Localization (i18n)**\n\n- In `./config/i18n.js` be sure to enable `objectNotation`, or else the new locale file will be gibberish to Actionhero\n- As of this release, Actionhero no longer localizes its log messages. This is done to simplify and speed up the logger methods. There is not mitigation path here without overwriting the `api.log()` method.\n\n- Any use of `%` interpolation should be removed from your logger strings. Favor native JS string templates.\n\n- Actionhero now ships with locale files by default.\n\n- You will need to acquire the [default locale file](https://github.com/Actionhero/Actionhero/blob/master/locales/en.json) and copy it into `./locales/en.json` within your project.\n- The error reporters have all been changed to use these new locale file and mustache-style syntax. Update your from the [default errors file](https://github.com/Actionhero/Actionhero/blob/master/config/errors.js)\n- The `welcomeMessage` and `goodbyeMessage` are removed from the config files and Actionhero now references the locale files for these strings. Update yours accordingly.\n\n- **utils**\n\n- `api.utils.recursiveDirectoryGlob` has been removed in favor of the [glob package](https://github.com/isaacs/node-glob). Use this instead.\n\n## Upgrading from v15 to v16\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v16.0.0)**\n\n**Breaking Changes and How to Overcome Them:**\n\nThe only breaking changes are related to the capilization of internal methods:\n\n- `api.Connection()` rather than `api.connection()`\n- `api.GenericServer()` rather than `api.genericServer()`\n- `api.ActionProcessor()` rather than `api.actionProcessor()`\n- `require(\'Actionhero\')` not `require(\'Actionhero\').actionheroPrototype` should you be using Actionhero programmatically.\n\n## Upgrading from v14 to v15\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v15.0.0)**\n\n**Breaking Changes and How to Overcome Them:**\n\n```bash\n\\`Actionhero generateAction --name=[name]\\`      -> \\`Actionhero generate action --name=[name]\\`\n\\`Actionhero generateInitializer --name=[name]\\` -> \\`Actionhero generate initializer --name=[name]\\`\n\\`Actionhero generateServer --name=[name]\\`      -> \\`Actionhero generate server --name=[name]\\`\n\\`Actionhero generateTask --name=[name]\\`        -> \\`Actionhero generate task --name=[name]\\`\n```\n\n- The Actionhero binary has had it\'s commands changed.\n  - Any deployment or automation tools you use will need to be updated accordingly.\n- Tasks now use middleware instead of plugins.\n  - You will need to convert all uses of task plugins to task middleware.\n\n## Upgrading from v13 to v14\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v14.0.0)**\n\n**Breaking Changes and How to Overcome Them:**\n\n- Redis Client Configurations have changed drastically. This allows for greater configuration, but at a complexity cost.\n  - The easiest way to upgrade your `config/redis.js` is to take if from the [master branch](https://github.com/Actionhero/Actionhero/blob/master/config/redis.js) directly and re-apply your configuration.\n  - Move `api.config.redis.channel` to `api.config.general.channel`\n  - Move `api.config.redis. rpcTimeout` to `api.config.general.rpcTimeout`\n  - Throughout the code, use `api.config.redis.client` rather than `api.redis.client`\n\n## Upgrading from v12 to v13\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v13.0.0)**\n\n**Breaking Changes and How to Overcome Them:**\n\n- Plugins\n  - `config/plugins.js` is removed. Delete yours.\n  - Use the new binary command, `Actionhero link --name=NameOfPlugin` to link your plugins in the new method.\n  - Linking plugins will likely create new config files you may need to customize.\n- Locales\n  - This release introduced Locales. You will need the new locale config file. The easiest way to upgrade your `config/i18n.js` is to take if from the [master branch](https://github.com/Actionhero/Actionhero/blob/master/config/i18n.js).\n  - Ensure that `api.config.i18n.updateFiles` is `true` so that your locale files can be generated for the first time.\n- Errors\n  - `config/errors.js` has been completely redone to take advantage of `connection.localize`. The easiest way to upgrade your `config/errors.js` is to take if from the [master branch](https://github.com/Actionhero/Actionhero/blob/master/config/errors.js).\n- Grunt Removed\n  - Grunt is removed from the project. The old Actionhero grunt commands have been moved into the Actionhero binary.\n- Redis configuration\n  - `package` is a reserved keyword in JavaScript. We now use the key `pkg` in the redis config.\n\n## Upgrading from v11 to v12\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v12.0.0)**\n\n**Breaking Changes and How to Overcome Them:**\n\n- Redis configuration\n  - Switch from using the `redis` npm package to `ioredis`. Change this in your package.json.\n- `ioredis` handles passwords slightly differently. Read the [ioredis](https://github.com/luin/ioredis) documentation to learn more.\n- Stats Removed\n  - The `api.stats` subsection has been removed from Actionhero\n  - If you need the stats subsection, you can get get it [via plugin](https://github.com/Actionhero/ah-stats-plugin)\n\n## Upgrading from v10 to v11\n\n**Full Release Notes: [GitHub](https://github.com/Actionhero/Actionhero/releases/tag/v11.0.0)**\n\n**Breaking Changes and How to Overcome Them:**\n\n- Action Syntax changed\n  - `run: function(api, data, next){ data.response.randomNumber = Math.random(); next(error); }`\n  - Where data contains:\n  - `data = { connection: connection, action: \'randomNumber\', toProcess: true, toRender: true, messageId: 123, params: { action: \'randomNumber\', apiVersion: 1 }, actionStartTime: 123, response: {}, }`\n  - You will need to change all of your actions to use `data.connection` rather than `connection` directly.\n  - You will need to change all of your actions to use `data.response` rather than `connection.response` directly.\n- Middleware syntax has changed to match action\'s `data` pattern. You will need to change your middleware accordingly.\n- Removed `connection._originalConnection`.\n- Websockets:\n  - The params of websocket connections should NOT be sticky. All actions will start with `connection.params = {}`. If you rely on the old behavior, you will need to change your client code.\n- Action Processor:\n  - Removed duplicate callback prevention in ActionProcessor. This belongs on the user/implementer to handle.\n'},Brp5:function(e,t,n){"use strict";e.exports=function(e,t){return e.indexOf("`",t)}},CRs9:function(e,t,n){"use strict";e.exports=function(e,t){var n=e.indexOf("*",t),o=e.indexOf("_",t);if(-1===o)return n;if(-1===n)return o;return o<n?o:n}},CZTX:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nActionhero includes a powerful cache system based on Redis. It can be used to store and retrieve data, but also to create more complex data structures based on queues and expiring object.\n\n## Methods\n\n[The cache methods are documented in detail with annotations here](https://docs.actionherojs.com/modules/cache.html). There are methods fall into 3 categories:\n\n- **data**: read, write, check, delete\n- **locks** you can lock and unlock objects in the cache so that only one Actionhero node can claim it\n- **queues** you can share a distributed array and access it via push and pop methods\n\n## Example Usage\n\nAn Action:\n\n```ts\nimport { cache, Action } from "actionhero";\n\nexport class CacheTest extends Action {\n  constructor() {\n    super();\n    this.name = "cacheTest";\n    this.description = "I will test the internal cache functions of the API";\n    this.inputs = {\n      key: {\n        required: true,\n        formatter: this.stringFormatter,\n        validator: this.stringValidator\n      },\n\n      value: {\n        required: true,\n        formatter: this.stringFormatter,\n        validator: this.stringValidator\n      }\n    };\n    this.outputExample = {\n      cacheTestResults: {\n        saveResp: true,\n        sizeResp: 1,\n        loadResp: {\n          key: "cacheTest_key",\n          value: "value",\n          expireTimestamp: 1420953274716,\n          createdAt: 1420953269716,\n          readAt: null\n        },\n        deleteResp: true\n      }\n    };\n  }\n\n  stringFormatter(s) {\n    return String(s);\n  }\n\n  stringValidator(s) {\n    if (s.length < 3) {\n      return "inputs should be at least 3 letters long";\n    } else {\n      return true;\n    }\n  }\n\n  async run({ params, response }) {\n    const key = `cacheTest_${params.key}`;\n    const value = params.value;\n\n    response.cacheTestResults = {\n      saveResp: await cache.save(key, value, 5000),\n      sizeResp: await cache.size(),\n      loadResp: await cache.load(key),\n      deleteResp: await cache.destroy(key)\n    };\n  }\n}\n```\n'},DjAY:function(e,t,n){var o=n("cOqj"),r=n("Wnyi"),i=n("ABxe");e.exports=function(e){return function t(n,a,s){switch(arguments.length){case 0:return t;case 1:return i(n)?t:r((function(t,o){return e(n,t,o)}));case 2:return i(n)&&i(a)?t:i(n)?r((function(t,n){return e(t,a,n)})):i(a)?r((function(t,o){return e(n,t,o)})):o((function(t){return e(n,a,t)}));default:return i(n)&&i(a)&&i(s)?t:i(n)&&i(a)?r((function(t,n){return e(t,n,s)})):i(n)&&i(s)?r((function(t,n){return e(t,a,n)})):i(a)&&i(s)?r((function(t,o){return e(n,t,o)})):i(n)?o((function(t){return e(t,a,s)})):i(a)?o((function(t){return e(n,t,s)})):i(s)?o((function(t){return e(n,a,t)})):e(n,a,s)}}}},EBzq:function(e,t,n){"use strict";var o=[].slice;e.exports=function(e,t){var n;return function(){var t,a=o.call(arguments,0),s=e.length>a.length;s&&a.push(r);try{t=e.apply(null,a)}catch(c){if(s&&n)throw c;return r(c)}s||(t&&"function"===typeof t.then?t.then(i,r):t instanceof Error?r(t):i(t))};function r(){n||(n=!0,t.apply(null,arguments))}function i(e){r(null,e)}}},EQPF:function(e,t,n){"use strict";e.exports=function(e,t){return function(n){var o,r=0,i=n.indexOf("\\"),a=e[t],s=[];for(;-1!==i;)s.push(n.slice(r,i)),r=i+1,(o=n.charAt(r))&&-1!==a.indexOf(o)||s.push("\\"),i=n.indexOf("\\",r);return s.push(n.slice(r)),s.join("")}}},Eidx:function(e,t,n){"use strict";var o=n("IPAr");e.exports=function(e,t,n){var r,i,a,s,c=t.charAt(0);if("\n"!==c)return;if(n)return!0;s=1,r=t.length,i=c,a="";for(;s<r&&(c=t.charAt(s),o(c));)a+=c,"\n"===c&&(i+=a,a=""),s++;e(i)}},EmYC:function(e,t,n){"use strict";e.exports=function(e,t){var n=e.indexOf("[",t),o=e.indexOf("![",t);if(-1===o)return n;return n<o?n:o}},Esvb:function(e,t,n){"use strict";var o=n("aCXt"),r=n("+XMi");e.exports=r;var i=r.prototype;function a(e,t,n){var r=this.path,i=new o(e,t,n);return r&&(i.name=r+":"+i.name,i.file=r),i.fatal=!1,this.messages.push(i),i}i.message=a,i.info=function(){var e=this.message.apply(this,arguments);return e.fatal=null,e},i.fail=function(){var e=this.message.apply(this,arguments);throw e.fatal=!0,e},i.warn=a},EyQl:function(e,t,n){var o=n("Wnyi"),r=n("9gHp"),i=n("U/tq"),a=n("wQFJ"),s=n("pY7V"),c=n("ZOtD"),l=n("7e6P"),u=o(r(["fantasy-land/map","map"],s,(function(e,t){switch(Object.prototype.toString.call(t)){case"[object Function]":return c(t.length,(function(){return e.call(this,t.apply(this,arguments))}));case"[object Object]":return a((function(n,o){return n[o]=e(t[o]),n}),{},l(t));default:return i(e,t)}})));e.exports=u},F3Iy:function(e,t){e.exports=function(e){return"[object String]"===Object.prototype.toString.call(e)}},GIBT:function(e,t,n){var o=n("77Jp"),r=n("ibbH"),i=n("gCkb");i.elementNames.__proto__=null,i.attributeNames.__proto__=null;var a={__proto__:null,style:!0,script:!0,xmp:!0,iframe:!0,noembed:!0,noframes:!0,plaintext:!0,noscript:!0};var s={__proto__:null,area:!0,base:!0,basefont:!0,br:!0,col:!0,command:!0,embed:!0,frame:!0,hr:!0,img:!0,input:!0,isindex:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},c=e.exports=function(e,t){Array.isArray(e)||e.cheerio||(e=[e]),t=t||{};for(var n="",r=0;r<e.length;r++){var i=e[r];"root"===i.type?n+=c(i.children,t):o.isTag(i)?n+=u(i,t):i.type===o.Directive?n+=h(i):i.type===o.Comment?n+=f(i):i.type===o.CDATA?n+=p(i):n+=d(i,t)}return n},l=["mi","mo","mn","ms","mtext","annotation-xml","foreignObject","desc","title"];function u(e,t){"foreign"===t.xmlMode&&(e.name=i.elementNames[e.name]||e.name,e.parent&&l.indexOf(e.parent.name)>=0&&(t=Object.assign({},t,{xmlMode:!1}))),!t.xmlMode&&["svg","math"].indexOf(e.name)>=0&&(t=Object.assign({},t,{xmlMode:"foreign"}));var n="<"+e.name,o=function(e,t){if(e){var n,o="";for(var a in e)n=e[a],o&&(o+=" "),"foreign"===t.xmlMode&&(a=i.attributeNames[a]||a),o+=a,(null!==n&&""!==n||t.xmlMode)&&(o+='="'+(t.decodeEntities?r.encodeXML(n):n.replace(/\"/g,"&quot;"))+'"');return o}}(e.attribs,t);return o&&(n+=" "+o),!t.xmlMode||e.children&&0!==e.children.length?(n+=">",e.children&&(n+=c(e.children,t)),s[e.name]&&!t.xmlMode||(n+="</"+e.name+">")):n+="/>",n}function h(e){return"<"+e.data+">"}function d(e,t){var n=e.data||"";return!t.decodeEntities||e.parent&&e.parent.name in a||(n=r.encodeXML(n)),n}function p(e){return"<![CDATA["+e.children[0].data+"]]>"}function f(e){return"\x3c!--"+e.data+"--\x3e"}},GQt6:function(e,t,n){"use strict";n.r(t),t.default='## Topology Example\n\nHere is a common Actionhero production topology:\n\n![AH Cluster](/static/images/tutorials/cluster.png)\n\nNotes:\n\n- It\'s best to separate the "workers" from the web "servers" into distinct processes.\n  - Be sure to modify the config files for each type of server accordingly (ie: turn of all servers for the workers, and turn of all workers on the servers).\n- To accomplish the above, you only need to make changes to your configuration files on each server. You will still be running the same same Actionhero project codebase. See the example:\n- Always have a replica of redis!\n\n```js\n// Assume we use the flag \\`process.env.ACTIONHERO_ROLE\\` to denote the type of server\n// You can set this variable in the ENV of your server or launch each process with the flag:\n// Worker => \\`ACTIONHERO_ROLE=\'worker\' npm start\\`\n// Server => \\`ACTIONHERO_ROLE=\'server\' npm start\\`\n\n// config/tasks.js\n\nexports.production = {\n  tasks: function(api) {\n    // default to config for \'server\'\n    let config = {\n      scheduler: false,\n      queues: ["*"],\n      verbose: true\n      // ...\n    };\n\n    if (process.env.ACTIONHERO_ROLE === "worker") {\n      config.scheduler = true;\n      config.minTaskProcessors = 1;\n      config.maxTaskProcessors = 10;\n    }\n\n    return config;\n  }\n};\n\n// config/servers/web.js\n\nexports.default = {\n  servers: {\n    web: function(api) {\n      config = {\n        enabled: true,\n        secure: false,\n        serverOptions: {},\n        port: process.env.PORT || 8080\n        // ...\n      };\n\n      if (process.env.ACTIONHERO_ROLE === "worker") {\n        config.enabled = false;\n      }\n\n      return config;\n    }\n  }\n};\n```\n\n## Paths and Environments\n\nYou can set a few environment variables to affect how Actionhero runs:\n\n- `PROJECT_ROOT`: This is useful when deploying Actionhero applications on a server where symlinks will change under a running process. The server will look at your symlink `PROJECT_ROOT=/path/to/current_symlink` rather than the absolute path it was started from\n- `ACTIONHERO_ROOT`: This can used to set the absolute path to the Actionhero binaries\n- `ACTIONHERO_CONFIG`: This can be user to set the absolute path to the Actionhero config directory you wish to use. This is useful when you might have a variable configs per server\n- `ACTIONHERO_TITLE`: The value of `api.id`, and the name for the pidfile in some boot configurations\n\n## Pidfiles\n\nActionhero will write its pid to a pidfile in the normal unix way. The path for the pidfile is set in `config/api.js` with `config.general.paths.pid`.\n\nIndividual Actionhero servers will name their pidfiles by `api.id`, which is determined by the logic [here](https://github.com/Actionhero/Actionhero/blob/master/initializers/pids.js) and [here](https://github.com/actionhero/actionhero/blob/master/initializers/id.js). For example, on my laptop with the IP address of `192.168.0.1`, running `npm start` would run one Actionhero server and generate a pidfile of `./pids/actionhero-192.168.0.1` in which would be a single line containing the process\' pid.\n\n## PAAS and Procfile Deployment\n\nWhen deploying to a Platform as a Service (PAAS), like [Heroku](https://heroku.com), [Flynn](https://flynn.io), and even some [Docker](https://www.docker.com) deployments), we can offer a few pieces of advice.\n\nIf you are deploying a separate WEB and WORKER process type, you can define them in a [`Procfile`](https://devcenter.heroku.com/articles/procfile) and make use of environment variable overrides in addition to those defined from the environment. You can modify your config files to use these options:\n\n```bash\n# ./Procfile\nweb:    SCHEDULER=false \\\\\n        MIN_TASK_PROCESSORS=0 \\\\\n        MAX_TASK_PROCESSORS=0 \\\\\n        ENABLE_WEB_SERVER=true  \\\\\n        ENABLE_TCP_SERVER=true  \\\\\n        ENABLE_WEBSOCKET_SERVER=true  \\\\\n        /dist/server.js\n\nworker: SCHEDULER=true  \\\\\n        MIN_TASK_PROCESSORS=5 \\\\\n        MAX_TASK_PROCESSORS=5 \\\\\n        ENABLE_WEB_SERVER=false \\\\\n        ENABLE_TCP_SERVER=false \\\\\n        ENABLE_WEBSOCKET_SERVER=false \\\\\n        /dist/server.js\n```\n\nBe sure **not** to use NPM in your `Procfile` definitions. In many deployment scenarios, NPM will not properly pass signals to the Actionhero process and it will be impossible to signal a graceful shutdown. Examples of this behavior can be found [here](https://github.com/flynn/flynn/issues/3601) and [here](https://github.com/npm/npm/issues/4603)\n\n## Global Packages\n\nIt is best to avoid installing any global packages. This way, you won\'t have to worry about conflicts, and your project can be kept up to date more easily. When using npm to install a local package the package\'s binaries are always copied into `./node_modules/.bin`.\n\nYou can add local references to your \\$PATH like so to use these local binaries:\n\n`export PATH=$PATH:node_modules/.bin`\n\nActionhero is not designed to function when installed globally. Do not install Actionhero globally, using `npm install -g`\n\n## Nginx Example\n\nWhile Actionhero can be the font-line server your users hit, it\'s probably best to proxy Actionhero behind a load balancer, nginx, haproxy, etc. This will help you pool connections before hitting node, SSL terminate, serve static assets, etc.\n\nHere is an example nginx config for interfacing with Actionhero, including using sockets (not http) and handing the websocket upgrade path.\n\n- Note the proxy-pass format to the socket: `{`proxy_pass http://unix:/path/to/socket`}`\n- Note some of the extra work you need to have for the websocket upgrade headers (the primus directive)\n\n```js\n// From \\`config/servers/web.js\\`\n\nexports.production = {\n  servers: {\n    web: function(api) {\n      return {\n        port: "/home/USER/www/APP/current/tmp/sockets/actionhero.sock",\n        bindIP: null,\n        metadataOptions: {\n          serverInformation: false,\n          requesterInformation: false\n        }\n      };\n    }\n  }\n};\n```\n\n```bash\n# The nginx.conf:\n\n#user  nobody;\nworker_processes  4;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n  worker_connections 1024;\n  accept_mutex on;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    server_tokens off;\n    sendfile        on;\n    keepalive_timeout  65;\n\n    set_real_ip_from  X.X.X.X/24;\n    real_ip_header    X-Forwarded-For;\n\n    gzip on;\n    gzip_http_version 1.0;\n    gzip_comp_level 9;\n    gzip_proxied any;\n    gzip_types text/plain text/xml text/css text/comma-separated-values text/javascript application/x-javascript font/ttf font/otf image/svg+xml application/atom+xml;\n\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referrer" "$http_user_agent" "$http_x_forwarded_for" $request_time\';\n\n    server {\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header X_FORWARDED_PROTO https;\n        proxy_redirect off;\n\n        listen       80;\n        server_name  _;\n\n        access_log  /var/log/nginx/access.log  main;\n        error_log   /var/log/nginx/error.log;\n\n        root        /home/XXUSERXX/XXAPPLICATIONXX/www/current/public/;\n        try_files /$uri/index.html /cache/$uri/index.html /$uri.html /cache/$uri.html /$uri /cache/$uri @app;\n\n        client_max_body_size 50M;\n\n        location /primus {\n            proxy_http_version 1.1;\n            proxy_buffering off;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection "Upgrade";\n            proxy_set_header Host $host;\n\n            proxy_pass http://unix:/home/XXUSERXX/www/XXAPPLICATIONXX/shared/tmp/sockets/actionhero.sock;\n        }\n\n        location / {\n            proxy_http_version 1.1;\n            proxy_buffering off;\n            proxy_cache_bypass $http_pragma $http_authorization;\n            proxy_no_cache $http_pragma $http_authorization;\n\n            proxy_pass http://unix:/home/XXUSERXX/www/XXAPPLICATIONXX/shared/tmp/sockets/actionhero.sock;\n        }\n    }\n\n}\n```\n\n## Redis High-Availability\n\n[Redis](http://redis.io/) is technically optional in Actionhero environments, but you will need it if you want to coordinates tasks across a cluster of workers, handle group chat mechanics between WebSocket clients, or do other cross-cluster operations. In those cases, you\'ll want your Redis setup to be reliable. There are 2 methods to achieving HA redis: Sentinels and Cluster. A simple architectural wire frame of how to deploy the various options is below The [`ioredis`](https://github.com/luin/ioredis) node package supports both of these connection schemes, and all you need to change is your connection options.\n\n![](/static/images/tutorials/redis.png)\n\n### Sentinel Mode\n\nIn Sentinel mode, you have your Redis configured in a normal master->slave configuration. However, rather than hard-code your application to know who the master and slaves are, your application connects to the Sentinel processes instead. These Sentinels transparently pipeline your connection to the proper Redis master, and they do this invisibly to Actionhero / your application.\n\nThe biggest advantage to this configuration is high-availability. In the event of a master failure, the Sentinel processes reach a consensus, then elect a new master automatically. Since the same process which handles master election also manages the client connections, no requests are lost - the sentinels hold the connection idle and then replay any pending requests on the new master after election. In the configuration shown in the first diagram above, up to 2 Redis data nodes and any 1 Sentinel can fail without the entire system failing.\n\nNote that it is not necessary to run the Sentinel nodes on separate servers. They can be run as parallel processes on the Redis nodes themselves.\n\nTo run this configuration, configure ioredis with a list of the Sentinel nodes and the name of the cluster. The driver will automatically connect to an appropriate Sentinel in round-robin fashion, reconnecting to another node if one is down, or fails.\n\nAssuming your sentinels were monitoring "mymaster" via `sentinel monitor mymaster 127.0.0.1 6379 2`, an example of a `redis.js` config file for sentinels would be:\n\n```js\nlet db = 0;\nlet sentinels = [{ host: "127.0.0.1", port: 26379 }];\nlet name = "mymaster";\n\nexports["default"] = {\n  redis: api => {\n    return {\n      enabled: true,\n\n      _toExpand: false,\n      client: {\n        konstructor: require("ioredis"),\n        args: [{ db, sentinels, name }],\n        buildNew: true\n      },\n      subscriber: {\n        konstructor: require("ioredis"),\n        args: [{ db, sentinels, name }],\n        buildNew: true\n      },\n      tasks: {\n        konstructor: require("ioredis"),\n        args: [{ db, sentinels, name }],\n        buildNew: true\n      }\n    };\n  }\n};\n```\n\nAdditional options can be found here: [github.com/luin/ioredis#sentinel](https://github.com/luin/ioredis#sentinel)\n\n### Cluster Mode\n\nIn Cluster mode, Redis shards all the keys in data into "slots" which are evenly allocated though all the masters in the cluster. The client can connect to any node in the cluster, and if the requested key belongs on another node, it will proxy the request for you (just like the Sentinel would). The cluster can also take care of master re-election for each shard in the event of a master node failure.\n\nCluster mode provides similar high-availability to Sentinel mode, but the sharding allows more data to be stored in the cluster overall. However, where Sentinel mode requires a minimum of 3 servers, Cluster mode requires a minimum of 6 to reach a quorum and provide full redundancy.\n\nAlso an important note: while you may opt to run "sentinel processes", it\'s the same codebase as regular redis, just running in "sentinel mode". The same goes if you run redis in "cluster mode".\n\nAn example of a `redis.js` config file for redis cluster would be: **TODO**\n\n## Best Practices\n\nAs Actionhero is a framework, much of the work for keeping your application secure is dependent on the types of actions and tasks you create. That said, here is a list of general best-practices for ensuring your deployment is as robust as it can be:\n\n### General Configuration\n\n- Be sure to change `api.config.general.serverToken` to something unique for your application\n- Turn off [developer mode](tutoria.development-mode.html) in production.\n- Use `api.config.general.filteredParams` to hide sensitive information from the logs. You probably don\'t want to log out `password`, `credit_card`, and other things of that nature.\n\n### Topology\n\n- Never run tasks on the same Actionhero instances you run your servers on; never run your servers on the same Actionhero instances you run your tasks on.\n\n- Yes, under most situations running servers + tasks on the same instance will work OK, but the load profiles (and often the types of packages required) vary in each deployment. Actions are designed to respond quickly and offload hard computations to tasks. Tasks are designed to work slower computations.\n- Do any CPU-intensive work in a task. If a client needs to see the result of a CPU-intensive operation, poll for it (or use web-sockets)\n\nUse a centralized logging tool like Splunk, ELK, SumoLogic, etc. Actionhero is /built for the cloud/, which means that it expects pids, application names, etc to change, and as such, will create many log files. Use a centralized tool to inspect the state of your application.\n\n- Log everything. You never know what you might want to check up on. {`Actionhero\'s`} logger has various levels you can use for this.\n\nSplit out the redis instance you use for cache from the one you use for tasks. If your cache fills up, do you want task processing to fail?\n\nYour web request stack should look like: [Load Balancer] -> [App Server] -> [Nginx] -> [Actionhero]\n\n- This layout allows you to have control, back-pressure and throttling at many layers.\n- Configure Nginx to serve static files whenever possible to remove load from Actionhero, and leave it just to process actions\n\nUse a CDN. Actionhero will serve static files with the proper last-modified headers, so your CDN should respect this, and you should not need to worry about asset SHAs/Checksums.\n\nUse redis-cluster or redis-sentinel. The [`ioredis`](https://github.com/luin/ioredis) redis library has support for them by default. This allows you to have a High Availability redis configuration.\n\n### Crashing and Safety\n\nLet the app crash rather than being defensive prematurely. Actionhero has a good logger. You should be using a tool like PM2 or Docker which will then restart your application fresh. It is very easy to hide uncaught errors, exceptions, or un-resolved promises, and doing so might leave your application in strange state.\n\nFor example, if you timeout connections that are taking too long, what are you going to do about the database connection it was running? Will you roll it back? What about the other clients using the same connection pool? How can you be sure which connection in the mySQL pool was in use? Rather than handle all these edge cases\u2026 just let your app crash, log, and reboot.\n\nAs noted above, centralized logging (Splunk et al) will be invaluable here. You can can also employ a tool like [BugSnag](https://bugsnag.com) to collect and correlate errors.\n\n### Actions\n\nRemember that all params which come in via the `web` and `socket` servers are `String`s. If you want to typeCast them (perhaps you always know that the param `user_id` will be an integer), you can do so in a middleware or within an action\'s [`params.formatter`](tutorial-actions.html) step.\n\nAlways remember to sanitize any input for SQL injection, etc. The best way to describe this is "never pass a query to your database which can be directly modified via user input"!\n\nRemember that you can restrict actions to specific server types. Perhaps only a web POST request should be able to login, and not a websocket client. You can control application flow this way.\n\nCrafting [authentication middleware is not that hard](https://github.com/actionhero/actionhero-angular-bootstrap-cors-csrf)\n\n### Tasks\n\nTasks can be created from any part of Actionhero: Actions, Servers, Middleware, even other Tasks.\n\nYou can chain tasks together to create workflows.\n\nActionhero uses the [`multiWorker`](https://github.com/taskrabbit/node-resque#multi-worker) from node-resque. When configured properly, it will consume 100% of a CPU core, to work as many tasks at once as it can. This will also fluctuate depending on the CPU difficulty of the job. Plan accordingly.\n\nYou should create a way to view the state of your redis cluster. Are you running out of RAM? Are your Queues growing faster than they can be worked? Checking this information is the key to having a healthy ecosystem. [The methods for doing so](/tutorials/tasks#Resque%20Health) are available.\n\nBe extra-save within your actions, and do not allow an uncaught exception. This will cause the worker to crash and the job to be remain \'claimed\' in redis, and never make it to the failed queue.\n'},Gdbo:function(e,t,n){"use strict";e.exports=function(e){if(e)throw e}},Gqj6:function(e,t,n){"use strict";var o=n("3GlI");e.exports=function(e,t,n){var h,d,p,f,m,g,y,b,w,v,k,x=this.options,_=t.length+1,A=0,T="";if(!x.gfm)return;for(;A<_&&((p=t.charAt(A))===a||p===i);)T+=p,A++;if(v=A,(p=t.charAt(A))!==s&&p!==c)return;A++,d=p,h=1,T+=p;for(;A<_&&(p=t.charAt(A))===d;)T+=p,h++,A++;if(h<l)return;for(;A<_&&((p=t.charAt(A))===a||p===i);)T+=p,A++;f="",m="";for(;A<_&&(p=t.charAt(A))!==r&&p!==s&&p!==c;)p===a||p===i?m+=p:(f+=m+p,m=""),A++;if((p=t.charAt(A))&&p!==r)return;if(n)return!0;(k=e.now()).column+=T.length,k.offset+=T.length,T+=f,f=this.decode.raw(this.unescape(f),k),m&&(T+=m);m="",b="",w="",g="",y="";for(;A<_;)if(p=t.charAt(A),g+=b,y+=w,b="",w="",p===r){for(g?(b+=p,w+=p):T+=p,m="",A++;A<_&&(p=t.charAt(A))===a;)m+=p,A++;if(b+=m,w+=m.slice(v),!(m.length>=u)){for(m="";A<_&&(p=t.charAt(A))===d;)m+=p,A++;if(b+=m,w+=m,!(m.length<h)){for(m="";A<_&&((p=t.charAt(A))===a||p===i);)b+=p,w+=p,A++;if(!p||p===r)break}}}else g+=p,w+=p,A++;return e(T+=g+b)({type:"code",lang:f||null,value:o(y)})};var r="\n",i="\t",a=" ",s="~",c="`",l=3,u=4},HRR4:function(e,t,n){"use strict";var o=n("IPAr"),r=n("kaWx");e.exports=b,b.notInList=!0,b.notInBlock=!0;var i='"',a="'",s="\\",c="\n",l="\t",u=" ",h="[",d="]",p="(",f=")",m=":",g="<",y=">";function b(e,t,n){for(var o,y,b,k,x,_,A,T,S=this.options.commonmark,j=0,q=t.length,E="";j<q&&((k=t.charAt(j))===u||k===l);)E+=k,j++;if((k=t.charAt(j))===h){for(j++,E+=k,b="";j<q&&(k=t.charAt(j))!==d;)k===s&&(b+=k,j++,k=t.charAt(j)),b+=k,j++;if(b&&t.charAt(j)===d&&t.charAt(j+1)===m){for(_=b,j=(E+=b+d+m).length,b="";j<q&&((k=t.charAt(j))===l||k===u||k===c);)E+=k,j++;if(b="",o=E,(k=t.charAt(j))===g){for(j++;j<q&&w(k=t.charAt(j));)b+=k,j++;if((k=t.charAt(j))===w.delimiter)E+=g+b+k,j++;else{if(S)return;j-=b.length+1,b=""}}if(!b){for(;j<q&&v(k=t.charAt(j));)b+=k,j++;E+=b}if(b){for(A=b,b="";j<q&&((k=t.charAt(j))===l||k===u||k===c);)b+=k,j++;if(x=null,(k=t.charAt(j))===i?x=i:k===a?x=a:k===p&&(x=f),x){if(!b)return;for(j=(E+=b+k).length,b="";j<q&&(k=t.charAt(j))!==x;){if(k===c){if(j++,(k=t.charAt(j))===c||k===x)return;b+=c}b+=k,j++}if((k=t.charAt(j))!==x)return;y=E,E+=b+k,j++,T=b,b=""}else b="",j=E.length;for(;j<q&&((k=t.charAt(j))===l||k===u);)E+=k,j++;return(k=t.charAt(j))&&k!==c?void 0:!!n||(o=e(o).test().end,A=this.decode.raw(this.unescape(A),o,{nonTerminated:!1}),T&&(y=e(y).test().end,T=this.decode.raw(this.unescape(T),y)),e(E)({type:"definition",identifier:r(_),title:T||null,url:A}))}}}}function w(e){return e!==y&&e!==h&&e!==d}function v(e){return e!==h&&e!==d&&!o(e)}w.delimiter=y},IPAr:function(e,t,n){"use strict";e.exports=function(e){return r.test("number"===typeof e?o(e):e.charAt(0))};var o=String.fromCharCode,r=/\s/},IRYA:function(e,t){var n=Object.prototype.toString;e.exports=function(e){return"[object String]"===n.call(e)}},IoeE:function(e,t,n){"use strict";e.exports=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(t.children||[]).reduce((function(t,n){return"definition"===n.type&&(t[n.identifier]={href:n.url,title:n.title}),e(n,t)}),n)}},IujW:function(e,t,n){"use strict";function o(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var r=n("U6jy"),i=n("1VtT"),a=n("fUUT"),s=n("17x9"),c=n("wnOJ"),l=n("cVWj"),u=n("u3i/"),h=n("UV+P"),d=n("9Z5P"),p=n("IoeE"),f=n("Nw8X"),m=n("3m36"),g=n("h9ck"),y=Object.keys(m),b=function(e){var t=e.source||e.children||"",n=e.parserOptions;if(e.allowedTypes&&e.disallowedTypes)throw new Error("Only one of `allowedTypes` and `disallowedTypes` should be defined");var o=r(m,e.renderers),s=[[a,n]].concat(e.plugins||[]).reduce(w,i()),f=s.parse(t),b=r(e,{renderers:o,definitions:p(f)}),v=function(e){var t=[d,c()],n=e.disallowedTypes;e.allowedTypes&&(n=y.filter((function(t){return"root"!==t&&-1===e.allowedTypes.indexOf(t)})));var o=e.unwrapDisallowed?"unwrap":"remove";n&&n.length>0&&t.push(u.ofType(n,o));e.allowNode&&t.push(u.ifNotMatch(e.allowNode,o));var r=!e.escapeHtml&&!e.skipHtml,i=(e.astPlugins||[]).some((function(e){return(Array.isArray(e)?e[0]:e).identity===g.HtmlParser}));r&&!i&&t.push(l);return e.astPlugins?t.concat(e.astPlugins):t}(e),k=s.runSync(f),x=v.reduce((function(e,t){return t(e,b)}),k);return h(x,b)};function w(e,t){return Array.isArray(t)?e.use.apply(e,o(t)):e.use(t)}b.defaultProps={renderers:{},escapeHtml:!0,skipHtml:!1,sourcePos:!1,rawSourcePos:!1,transformLinkUri:f,astPlugins:[],plugins:[],parserOptions:{}},b.propTypes={className:s.string,source:s.string,children:s.string,sourcePos:s.bool,rawSourcePos:s.bool,escapeHtml:s.bool,skipHtml:s.bool,allowNode:s.func,allowedTypes:s.arrayOf(s.oneOf(y)),disallowedTypes:s.arrayOf(s.oneOf(y)),transformLinkUri:s.oneOfType([s.func,s.bool]),linkTarget:s.oneOfType([s.func,s.string]),transformImageUri:s.func,astPlugins:s.arrayOf(s.func),unwrapDisallowed:s.bool,renderers:s.object,plugins:s.array,parserOptions:s.object},b.types=y,b.renderers=m,b.uriTransformer=f,e.exports=b},J5yW:function(e,t,n){"use strict";var o=n("1iAE"),r=n("ZONP");e.exports=function(e){return o(e)||r(e)}},JLNj:function(e,t,n){"use strict";var o=n("SLdQ"),r=n("ZGSl"),i=n("2Jfo"),a=n("yp27");e.exports={Parser:o,ProcessingInstructions:r,IsValidNodeDefinitions:i,ProcessNodeDefinitions:a}},JQSS:function(e){e.exports=JSON.parse('{"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376}')},JlFY:function(e,t,n){"use strict";var o=n("IPAr"),r=n("Brp5");e.exports=a,a.locator=r;var i="`";function a(e,t,n){for(var r,a,s,c,l,u,h,d,p=t.length,f=0,m="",g="";f<p&&t.charAt(f)===i;)m+=i,f++;if(m){for(l=m,c=f,m="",d=t.charAt(f),s=0;f<p;){if(u=d,d=t.charAt(f+1),u===i?(s++,g+=u):(s=0,m+=u),s&&d!==i){if(s===c){l+=m+g,h=!0;break}m+=g,g=""}f++}if(!h){if(c%2!==0)return;m=""}if(n)return!0;for(r="",a="",p=m.length,f=-1;++f<p;)u=m.charAt(f),o(u)?a+=u:(a&&(r&&(r+=a),a=""),r+=u);return e(l)({type:"inlineCode",value:r})}}},JqBK:function(e,t,n){"use strict";e.exports=function(e){return String(e).replace(/\s+/g," ")}},JvmS:function(e,t,n){"use strict";function o(e){return e.children||null}function r(e){return e.parent||null}function i(e,t){return e.attribs&&e.attribs[t]}Object.defineProperty(t,"__esModule",{value:!0}),t.getChildren=o,t.getParent=r,t.getSiblings=function(e){var t=r(e);return t?o(t):[e]},t.getAttributeValue=i,t.hasAttrib=function(e,t){return!!i(e,t)},t.getName=function(e){return e.name}},K2KW:function(e,t,n){"use strict";var o=n("RjOF"),r=n("3GlI");e.exports=function(e,t,n){var o,l,u,h=-1,d=t.length,p="",f="",m="",g="";for(;++h<d;)if(o=t.charAt(h),u)if(u=!1,p+=m,f+=g,m="",g="",o===i)m=o,g=o;else for(p+=o,f+=o;++h<d;){if(!(o=t.charAt(h))||o===i){g=o,m=o;break}p+=o,f+=o}else if(o===s&&t.charAt(h+1)===o&&t.charAt(h+2)===o&&t.charAt(h+3)===o)m+=c,h+=3,u=!0;else if(o===a)m+=o,u=!0;else{for(l="";o===a||o===s;)l+=o,o=t.charAt(++h);if(o!==i)break;m+=l+o,g+=o}if(f)return!!n||e(p)({type:"code",lang:null,value:r(f)})};var i="\n",a="\t",s=" ",c=o(s,4)},KJAg:function(e,t,n){"use strict";e.exports=function(e,t,n,o){var r,i,a,s,c,l,u=["pedantic","commonmark"],h=u.length,d=e.length,p=-1;for(;++p<d;){for(r=e[p],i=r[1]||{},a=r[0],s=-1,l=!1;++s<h;)if(void 0!==i[c=u[s]]&&i[c]!==n.options[c]){l=!0;break}if(!l&&t[a].apply(n,o))return!0}return!1}},KX5q:function(e,t,n){"use strict";var o=n("RsFJ"),r=n("IPAr"),i=n("BjVE");e.exports=c,c.locator=i;var a="*",s="_";function c(e,t,n){var i,c,l,u,h,d,p,f=0,m=t.charAt(f);if((m===a||m===s)&&t.charAt(++f)===m&&(c=this.options.pedantic,h=(l=m)+l,d=t.length,f++,u="",m="",!c||!r(t.charAt(f))))for(;f<d;){if(p=m,(m=t.charAt(f))===l&&t.charAt(f+1)===l&&(!c||!r(p))&&(m=t.charAt(f+2))!==l){if(!o(u))return;return!!n||((i=e.now()).column+=2,i.offset+=2,e(h+u+h)({type:"strong",children:this.tokenizeInline(u,i)}))}c||"\\"!==m||(u+=m,m=t.charAt(++f)),u+=m,f++}}},L2P7:function(e,t,n){"use strict";n.r(t),t.default="## Overview\n\nThere are 2 ways to manage Actionhero configuration: configuration files and overrides. In both cases, Actionhero starts by reading the config in `./config/`. [Here is what config files for a new Actionhero project look like](https://github.com/actionhero/Actionhero/blob/master/config/).\n\nThe normal way to deal with configuration changes is to use the files in `/config/` and to have changed options for each environment, based on NODE_ENV. First we load in all settings from the `default` config block, and then we replace those with anything defined in the relevant `environment` section. Actionhero uses the standard node environment variable `NODE_ENV` to determine environment, and defaults to \u2018development' when one isn't found. This pattern is very similar the Rails and Sails frameworks. A good way to visualize this is to note that, by default, the server will return metadata in response JSON, but we change that in the production NODE_ENV and disable it.\n\n```js\nexport const DEFAULT = {\n  general: config => {\n    return {\n      //...\n      developmentMode: true\n      //...\n    };\n  }\n};\n\nexport const production = {\n  general: config => {\n    return {\n      developmentMode: false\n    };\n  }\n};\n```\n\nThe priority order of configs is:\n\n1.  options passed in to boot with `actionhero.start({configChanges: configChanges})`\n2.  environment-specific values in `/config`\n3.  default values in `/config`\n\nWhen building config files of your own, note that an `exports.default` is always required, and any environment overrides are optional. What is exported is a hash which eventually resolves a synchronous function which accepts the `api` variable.\n\n## Boot Options to find the Config Directory\n\nWhen launching Actionhero you can specify which config directory to use with `--config '/path/to/dir'` or the environment variable `ACTIONHERO_CONFIG`, otherwise `./config/` will be used from your working directory.\n\nThe priority of arguments is:\n\n1.  Use the project's `./config` folder, if it exists.\n2.  `actionhero --config=PATH1 --config=PATH2 --config=PATH3,PATH4`\n3.  `ACTIONHERO_CONFIG=PATH1,PATH2 npm start`\n\nNote that if `--config` or `ACTIONHERO_CONFIG` are used, they _overwrite_ the use of the default `/config` folder. If you wish to use both, you need to re-specify \"config\", e.g. `--config=config,local-config`. Also, note that specifying multiple `--config` options on the command line does exactly the same thing as using one parameter with comma separators, however the environment variable method only supports the comma-delimited syntax.\n"},LPBM:function(e,t){var n=function(){function e(e){this.f=e}return e.prototype["@@transducer/init"]=function(){throw new Error("init not implemented on XWrap")},e.prototype["@@transducer/result"]=function(e){return e},e.prototype["@@transducer/step"]=function(e,t){return this.f(e,t)},e}();e.exports=function(e){return new n(e)}},MHMH:function(e,t,n){"use strict";e.exports=function(e,t,n){var c,l,u,h=this.options,d=t.length+1,p=-1,f=e.now(),m="",g="";for(;++p<d;){if((c=t.charAt(p))!==i&&c!==r){p--;break}m+=c}u=0;for(;++p<=d;){if((c=t.charAt(p))!==a){p--;break}m+=c,u++}if(u>s)return;if(!u||!h.pedantic&&t.charAt(p+1)===a)return;d=t.length+1,l="";for(;++p<d;){if((c=t.charAt(p))!==i&&c!==r){p--;break}l+=c}if(!h.pedantic&&0===l.length&&c&&c!==o)return;if(n)return!0;m+=l,l="",g="";for(;++p<d&&(c=t.charAt(p))&&c!==o;)if(c===i||c===r||c===a){for(;c===i||c===r;)l+=c,c=t.charAt(++p);for(;c===a;)l+=c,c=t.charAt(++p);for(;c===i||c===r;)l+=c,c=t.charAt(++p);p--}else g+=l+c,l="";return f.column+=m.length,f.offset+=m.length,e(m+=g+l)({type:"heading",depth:u,children:this.tokenizeInline(g,f)})};var o="\n",r="\t",i=" ",a="#",s=6},"MQ5/":function(e,t,n){"use strict";e.exports=a;var o=["\\","`","*","{","}","[","]","(",")","#","+","-",".","!","_",">"],r=o.concat(["~","|"]),i=r.concat(["\n",'"',"$","%","&","'",",","/",":",";","<","=","?","@","^"]);function a(e){var t=e||{};return t.commonmark?i:t.gfm?r:o}a.default=o,a.gfm=r,a.commonmark=i},MSw7:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n("77Jp");t.isTag=function(e){return o.isTag(e)},t.isCDATA=function(e){return"cdata"===e.type},t.isText=function(e){return"text"===e.type},t.isComment=function(e){return"comment"===e.type},t.hasChildren=function(e){return Object.prototype.hasOwnProperty.call(e,"children")}},MaiH:function(e,t,n){"use strict";e.exports=function(e,t){return e.indexOf("~~",t)}},N9hA:function(e,t,n){"use strict";n.r(t),t.default='## Server.ts\n\nActionhero v22 removes the built-in `actionhero start` and `actionhero start cluster` commands, and adds a single `server.ts` entrypoint for your applications. We are also removing support for `boot.ts|js`.\n\nFor years, Actionhero has shipped with a robust runtime solution, handling graceful restarts, clustering, and more... however. as the node.js ecosystem has matured, the community has:\n\n1. Created excellent process management tools, like [PM2](https://pm2.keymetrics.io/) which handle running and monitoring your processes, including integration with OS process managers\n2. Moved to serverless/PASS/Docker deployments which prefer to mange the running of the application directly.\n\nTo better integrate with the above, Actionhero will now run from a new `server.ts` file, which will be required in your project @ `/src/server.ts`:\n\n```ts\nimport { Process } from "actionhero";\n\n// load any custom code, configure the env, as needed\n\nasync function main() {\n  // create a new actionhero process\n  const app = new Process();\n\n  // handle unix signals and uncaught exceptions & rejections\n  app.registerProcessSignals();\n\n  // start the app!\n  // you can pass custom configuration to the process as needed\n  await app.start();\n}\n\nmain();\n```\n\nWhen developing, there is no change to your workflow:\n\n- `npm run dev` will continue to hot-compile your typescript code and run it.\n- `npm run build` will compile your TS into JS\n- `npm start` will now run your `./dist/server.js` instead of running `./node_modules/.bin/actoinhero`\n\nThis change should also make it easier to distribute your actionhero projects as you can modify a base config collection from this file, and you can use tools like [pkg](https://github.com/zeit/pkg) to compile your projects.\n\nNow that we have this single entrypoint for your applications, we no longer need `boot.js|ts`. You can now directly run any setup code you need, modify the environment, etc directly in `server.ts`.\n\n## The Actionhero Binary\n\nActionhero also includes an optional binary which can help you with lifecycle tasks, like generating a new project, actions, tasks, and more. The help for this binary is as follows:\n\n```\n--------------------------------------\nActionhero COMMAND >> help\n--------------------------------------\nActionhero - A multi-transport node.js API Server with integrated cluster capabilities and delayed tasks\n\nBinary options:\n\n* actions list\n* console\n* generate\n* generate action\n* generate cli\n* generate initializer\n* generate plugin\n* generate server\n* generate task\n* help\n* task enqueue\n* version\n\nDescriptions:\n\n* actions list\n  description: I will list the actions defined on this server\n\n* console\n  description: start an interactive REPL session with the api object in-scope\n\n* generate\n  description: will prepare an empty directory with a template Actionhero project\n\n* generate action\n  description: generate a new action\n  example: Actionhero generate action --name=[name] --description=[description]\n  inputs:\n    [name]\n    [description]\n      default: an Actionhero action\n\n* generate cli\n  description: generate a new cli command\n  example: Actionhero generate cli --name=[name]\n  inputs:\n    [name]\n    [description] (optional)\n      default: an Actionhero cli command\n    [example] (optional)\n      default: Actionhero command --option=yes\n\n* generate initializer\n  description: generate a new initializer\n  example: Actionhero generate initializer --name=[name] --loadPriority=[p] --startPriority=[p] --stopPriority=[p]\n  inputs:\n    [name]\n    [loadPriority]\n      default: 1000\n    [startPriority]\n      default: 1000\n    [stopPriority]\n      default: 1000\n\n* generate plugin\n  description: generate the structure of a new Actionhero plugin in an empty directory\n  example: Actionhero generate plugin\n\n* generate server\n  description: generate a new server\n  example: Actionhero generate server --name=[name]\n  inputs:\n    [name]\n\n* generate task\n  description: generate a new task\n  example: Actionhero generate task --name=[name] --description=[description] --scope=[scope] --frequency=[frequency]\n  inputs:\n    [name]\n    [queue]\n    [description]\n      default: an Actionhero task\n    [frequency]\n\n* help\n  description: get actionhero CLI help; will display this document\n\n* task enqueue\n  description: enqueue a defined task into your Actionhero cluster\n  example: Actionhero task enqueue --name=[taskName] --args=[JSON-formatted args]\n  inputs:\n    [name]\n    [args] (optional)\n    [params] (optional)\n\n* version\n  description: return the Actionhero version within this project\n```\n\n## Environments and Config\n\nBy default, Actionhero will use the settings found in the `exports.default` blocks in `/config/`. However, you can set environment-specific overrides or changes. Actionhero inspects `process.env.NODE_ENV` to load up runtime configuration overrides from `exports.#{env}` blocks in your configuration files. This is the recommended way to have separate settings for staging and production.\n\nThe load order of configs is:\n\n- default values in `/config`\n- environment-specific values in `/config`\n- options passed in to boot with `Actionhero.start({configChanges: configChanges})`\n\nYou can `{configChanges: {}}` to a new Actionhero.Process\' `start` or `initialize` methods. This can be helpful when creating tests. When using CLI commands, you can also set `process.env.configChanges` or pass `--configChanges` on the command line. In these cases, `configChanges` should be stringified JSON.\n\n```ts\n// from ./config/namespace.js\nexport const DEFAULT = {\n  namespace: function(api) {\n    return {\n      enabled: true,\n      safe: false\n    };\n  }\n};\n\nexport const production = {\n  namespace: function(api) {\n    return {\n      safe: true\n    };\n  }\n};\n```\n\nIn the example above, we are defining `config.namespace.enabled` and `config.namespace.safe`. In all environments (NODE_ENV) `config.namespace.enabled = true` Only in production would `config.namespace.safe = true`, it is `false` everywhere else.\n\n## Signals\n\nIf your `server.ts` has used `app.registerProcessSignals()`, you should be ready to handle the most common unix signals:\n\n```ts\n  /**\n   * Register listeners for process signals and uncaught exceptions & rejections.\n   * Try to gracefully shut down when signaled to do so\n   */\n  registerProcessSignals() {\n    function awaitHardStop() {\n      const timeout = process.env.ACTIONHERO_SHUTDOWN_TIMEOUT\n        ? parseInt(process.env.ACTIONHERO_SHUTDOWN_TIMEOUT)\n        : 1000 * 30;\n      return setTimeout(() => {\n        console.error(\n          `Process did not terminate within ${timeout}ms. Stopping now!`\n        );\n        process.nextTick(process.exit(1));\n      }, timeout);\n    }\n\n    // handle errors & rejections\n    process.on("uncaughtException", (error: Error) => {\n      log(error.stack, "fatal");\n      process.nextTick(process.exit(1));\n    });\n\n    process.on("unhandledRejection", (rejection: Error) => {\n      log(rejection.stack, "fatal");\n      process.nextTick(process.exit(1));\n    });\n\n    // handle signals\n    process.on("SIGINT", async () => {\n      log(`[ SIGNAL ] - SIGINT`, "notice");\n      let timer = awaitHardStop();\n      await this.stop();\n      clearTimeout(timer);\n    });\n\n    process.on("SIGTERM", async () => {\n      log(`[ SIGNAL ] - SIGTERM`, "notice");\n      let timer = awaitHardStop();\n      await this.stop();\n      clearTimeout(timer);\n    });\n\n    process.on("SIGUSR2", async () => {\n      log(`[ SIGNAL ] - SIGUSR2`, "notice");\n      let timer = awaitHardStop();\n      await this.restart();\n      clearTimeout(timer);\n    });\n  }\n```\n\nYou can of course add custom handlers as well to handle additional signals. Note that the environment variable `ACTIONHERO_SHUTDOWN_TIMEOUT` can be used to change how long the process waits to shut down gracefully.\n'},NFD0:function(e,t,n){"use strict";e.exports=function(e,t){return e.indexOf("\\",t)}},NS2H:function(e,t,n){"use strict";e.exports=function(e,t,n){var c,l,u,h,d,p=e.now(),f=t.length,m=-1,g="";for(;++m<f;){if((u=t.charAt(m))!==i||m>=a){m--;break}g+=u}c="",l="";for(;++m<f;){if((u=t.charAt(m))===o){m--;break}u===i||u===r?l+=u:(c+=l+u,l="")}if(p.column+=g.length,p.offset+=g.length,g+=c+l,u=t.charAt(++m),h=t.charAt(++m),u!==o||!s[h])return;g+=u,l=h,d=s[h];for(;++m<f;){if((u=t.charAt(m))!==h){if(u!==o)return;m--;break}l+=u}if(n)return!0;return e(g+l)({type:"heading",depth:d,children:this.tokenizeInline(c,p)})};var o="\n",r="\t",i=" ",a=3,s={};s["="]=1,s["-"]=2},"NkL+":function(e,t,n){"use strict";var o=Object.prototype.toString;e.exports=function(e){var t;return"[object Object]"===o.call(e)&&(null===(t=Object.getPrototypeOf(e))||t===Object.getPrototypeOf({}))}},Nw8X:function(e,t,n){"use strict";var o=["http","https","mailto","tel"];e.exports=function(e){var t=(e||"").trim(),n=t.charAt(0);if("#"===n||"/"===n)return t;var r=t.indexOf(":");if(-1===r)return t;for(var i=o.length,a=-1;++a<i;){var s=o[a];if(r===s.length&&t.slice(0,s.length).toLowerCase()===s)return t}return-1!==(a=t.indexOf("?"))&&r>a?t:-1!==(a=t.indexOf("#"))&&r>a?t:"javascript:void(0)"}},Olrm:function(e,t,n){"use strict";var o=n("U6jy"),r=n("ZWk2");e.exports=function(e){return i.raw=function(e,i,a){return r(e,o(a,{position:t(i),warning:n}))},i;function t(t){for(var n=e.offset,o=t.line,r=[];++o&&o in n;)r.push((n[o]||0)+1);return{start:t,indent:r}}function n(t,n,o){3!==o&&e.file.message(t,n)}function i(o,i,a){r(o,{position:t(i),warning:n,text:a,reference:a,textContext:e,referenceContext:e})}}},P7XM:function(e,t){"function"===typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}}},PIlL:function(e,t,n){"use strict";var o=n("RsFJ"),r=n("KJAg");e.exports=function(e,t,n){var l,u,h,d,p,f,m,g,y,b=this.offset,w=this.blockTokenizers,v=this.interruptBlockquote,k=e.now(),x=k.line,_=t.length,A=[],T=[],S=[],j=0;for(;j<_&&((u=t.charAt(j))===s||u===a);)j++;if(t.charAt(j)!==c)return;if(n)return!0;j=0;for(;j<_;){for(d=t.indexOf(i,j),m=j,g=!1,-1===d&&(d=_);j<_&&((u=t.charAt(j))===s||u===a);)j++;if(t.charAt(j)===c?(j++,g=!0,t.charAt(j)===s&&j++):j=m,p=t.slice(j,d),!g&&!o(p)){j=m;break}if(!g&&(h=t.slice(j),r(v,w,this,[e,h,!0])))break;f=m===j?p:t.slice(m,d),S.push(j-m),A.push(f),T.push(p),j=d+1}j=-1,_=S.length,l=e(A.join(i));for(;++j<_;)b[x]=(b[x]||0)+S[j],x++;return y=this.enterBlock(),T=this.tokenizeBlock(T.join(i),k),y(),l({type:"blockquote",children:T})};var i="\n",a="\t",s=" ",c=">"},RSXs:function(e,t,n){"use strict";var o=n("RsFJ"),r=n("ZONP"),i=n("3GlI"),a=n("KJAg");e.exports=function(e,t,n){var h,d,p,f,m,g=this.options,y=g.commonmark,b=g.gfm,w=this.blockTokenizers,v=this.interruptParagraph,k=t.indexOf(s),x=t.length;for(;k<x;){if(-1===k){k=x;break}if(t.charAt(k+1)===s)break;if(y){for(f=0,h=k+1;h<x;){if((p=t.charAt(h))===c){f=u;break}if(p!==l)break;f++,h++}if(f>=u){k=t.indexOf(s,k+1);continue}}if(d=t.slice(k+1),a(v,w,this,[e,d,!0]))break;if(w.list.call(this,e,d,!0)&&(this.inList||y||b&&!r(o.left(d).charAt(0))))break;if(h=k,-1!==(k=t.indexOf(s,k+1))&&""===o(t.slice(h,k))){k=h;break}}if(d=t.slice(0,k),""===o(d))return e(d),null;if(n)return!0;return m=e.now(),d=i(d),e(d)({type:"paragraph",children:this.tokenizeInline(d,m)})};var s="\n",c="\t",l=" ",u=4},RjOF:function(e,t,n){"use strict";var o,r="";e.exports=function(e,t){if("string"!==typeof e)throw new TypeError("expected a string");if(1===t)return e;if(2===t)return e+e;var n=e.length*t;if(o!==e||"undefined"===typeof o)o=e,r="";else if(r.length>=n)return r.substr(0,n);for(;n>r.length&&t>1;)1&t&&(r+=e),t>>=1,e+=e;return r=(r+=e).substr(0,n)}},RsFJ:function(e,t){(t=e.exports=function(e){return e.replace(/^\s*|\s*$/g,"")}).left=function(e){return e.replace(/^\s*/,"")},t.right=function(e){return e.replace(/\s*$/,"")}},SK8o:function(e,t,n){var o=n("DjAY")(n("wQFJ"));e.exports=o},SLdQ:function(e,t,n){"use strict";var o=n("+dcq"),r=n("Ymwu"),i=n("0KeI"),a=n("s2PV"),s=n("EyQl"),c=n("hS6j").Parser,l=n("8j/7").DomHandler,u=n("ZGSl"),h=n("2Jfo"),d=n("dE4g");e.exports=function(e){function t(t,n,u,h){var p=function(t){(e=e||{}).decodeEntities=!0;var n=new l;return new c(n,e).parseComplete(t),n.dom.filter((function(e){return"directive"!==e.type}))}(t).map((function(e,t){return function e(t,n,c,l,u){if(n(t)){o((function(e){e.shouldPreprocessNode(t)&&e.preprocessNode(t,u)}),l||[]);var h=r((function(e){return e.shouldProcessNode(t)}),c||[]);if(null!=h){var p=i((function(e){return null==e||!1===e}),a(s)((function(t,o){return e(t,n,c,l,o)}),t.children||[]));return h.replaceChildren?d.createElement(t,u,t.data,[h.processNode(t,p,u)]):h.processNode(t,p,u)}return!1}return!1}(e,n,u,h,t)}));return p.length<=1?p[0]:p}return{parse:function(e){var n=new u;return t(e,h.alwaysValid,n.defaultProcessingInstructions)},parseWithInstructions:t}}},SbiQ:function(e,t,n){"use strict";e.exports=function(e,t,n){var o,r,i,a,s,c,l,u,h,d;if(n)return!0;o=this.inlineMethods,a=o.length,r=this.inlineTokenizers,i=-1,h=t.length;for(;++i<a;)"text"!==(u=o[i])&&r[u]&&((l=r[u].locator)||e.file.fail("Missing locator: `"+u+"`"),-1!==(c=l.call(this,t,1))&&c<h&&(h=c));s=t.slice(0,h),d=e.now(),this.decode(s,d,(function(t,n,o){e(o||t)({type:"text",value:t})}))}},"TD0+":function(e,t,n){var o=n("Wnyi"),r=n("9gHp"),i=n("b91Z"),a=n("7BTi"),s=n("wQFJ"),c=n("7ZZO"),l=n("7e6P"),u=o(r(["filter"],c,(function(e,t){return a(t)?s((function(n,o){return e(t[o])&&(n[o]=t[o]),n}),{},l(t)):i(e,t)})));e.exports=u},TJNC:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nActionhero uses the [i18n](https://github.com/mashpie/i18n-node) module to localize responses to clients.\n\n## Locale Files\n\n- When running Actionhero with `config.i18n.updateFiles = true`, you will see Actionhero generate a \'locales\' folder at the top level of your project which will contain translations of all strings in your project with are passed though the new localization system. This includes all uses of `i18n.localize` and `connection.localize`.\n- We use mustache-style localization\n- From here, it is an easy matter to change the strings, per locale, to how you would like them presented back in your application. The next time you restart the server, the values you\'ve updated in your locale strings file will be used.\n- disable `config.i18n.updateFiles` if you do not want this behavior.\n\n## Connection Locale\n\nSince every Actionhero implementation is unique, we do not ship with a "guess" about how to determine a given connection\'s locale. Perhaps you have an HTTP server and you can trust your client\'s `accept-language` headers. Or perhaps you run your API under a number of different host names and you can presume locale based on them. Whatever the case, you need to create a async method in an initializer which will be called when each connection connects to return its locale.\n\nFor example, I may have an initializer in my project like this:\n\n```ts\nconst { Initializer } = require("actionhero");\n\nexport class DetermineConnectionLocale extends Initializer {\n  constructor() {\n    super();\n    this.name = "determineConnectionLocale";\n  }\n\n  initialize() {\n    api.customLocalization = {\n      lookup: connection => {\n        let locale = "en";\n\n        if (connection.type === "web") {\n          const host = connection.rawConnection.req.headers.host;\n          if (host === "usa.site.com") {\n            locale = "en-US";\n          }\n          if (host === "uk.site.com") {\n            locale = "en-GB";\n          }\n          if (host === "es.site.com") {\n            locale = "es-ES";\n          }\n          if (host === "mx.site.com") {\n            locale = "es-MX";\n          }\n        }\n\n        return locale;\n      }\n    };\n  }\n}\n```\n\nTo tell i18n to use this method with a new connection, set `config.i18n.determineConnectionLocale = \'api.customLocalization.lookup\'`. Now you can localize responses in actions, based on which hostname a connection uses.\n\n```ts\nimport { Action } from "actionhero";\n\nexport class RandomNumber extends Action {\n  constructor() {\n    super();\n    this.name = "randomNumber";\n    this.description =\n      "I am an API method which will generate a random number, returning both the number and a localized string";\n    this.outputExample = {\n      number: 0.234,\n      localizedResponse: "Your random number is 0.234"\n    };\n  }\n\n  async run({ connection, response }) {\n    const number = Math.random();\n    const localizedResponse = connection.localize([\n      "Your random number is {{number}}",\n      { number: number }\n    ]);\n    response.message = localizedResponse;\n    response.number = number;\n  }\n}\n```\n\n## Connection Methods\n\n- `connection.localize(string)` or `connection.localize([string-with-interpolation, values])`\n  - Allows you to interpolate a string based on the connection\'s current locale. For example, say in an action you wanted to respond with `{CountExample}` In your locale files, you would define `the count was {{count}}` in every language you cared about, and not need to modify the action itself at all.\n\n## Other Strings\n\n- To localize strings that are not used in methods mentioned above you can use `api.i18n.localize(string, options)`.\n  - Allows you to interpolate a string.\n  - Just as the other localize methods above, the input string will be in your locale files for you to change it anytime you want.\n  - The second `options` optional argument (default value is `api.i18n`) allows you to [configure](https://github.com/mashpie/i18n-node#list-of-all-configuration-options) i18n. Note that you will use this argument only in very few special cases, It is recommended to edit the global `api.config.i18n` settings to suit your localization needs.\n'},TjP8:function(e,t,n){"use strict";var o="<[A-Za-z][A-Za-z0-9\\-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^\"'=<>`\\u0000-\\u0020]+|'[^']*'|\"[^\"]*\"))?)*\\s*\\/?>",r="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>";t.openCloseTag=new RegExp("^(?:"+o+"|"+r+")"),t.tag=new RegExp("^(?:"+o+"|"+r+"|\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e|<[?].*?[?]>|<![A-Za-z]+\\s+[^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)")},"U/tq":function(e,t){e.exports=function(e,t){for(var n=0,o=t.length,r=Array(o);n<o;)r[n]=e(t[n]),n+=1;return r}},U6jy:function(e,t){e.exports=function(){for(var e={},t=0;t<arguments.length;t++){var o=arguments[t];for(var r in o)n.call(o,r)&&(e[r]=o[r])}return e};var n=Object.prototype.hasOwnProperty},UA6O:function(e,t,n){"use strict";n.r(t),t.default='## General\n\nActionhero ships with a chat framework which may be used by all persistent connections (`socket` and `websocket`). There are methods to create and manage chat rooms and control the users in those rooms. Chat does not have to be for peer-to-peer communication, and is a metaphor used for many things, including the sharing of all realtime data between client and server, and client to client. This can be used for games, syndication, etc.\n\nClients themselves interact with rooms via `verbs`. Verbs are short-form commands that will attempt to modify the connection\'s state, either joining or leaving a room. Clients can be in many rooms at once.\n\nRelevant chat verbs are:\n\n- `roomAdd`\n- `roomLeave`\n- `roomView`\n- `say`\n\nThe special verb for persistent connections `say` makes use of `chatRoom.broadcast` to tell a message to all other users in the room, IE: `say myRoom Hello World` from a socket client or `client.say("myRoom", \'Hello World")` for a websocket.\n\nChat on multiple Actionhero nodes relies on redis for both chat (pub/sub) and a key store defined by `config.redis`. The redis pub/sub server and the key store don\'t need to be the same instance of redis, but they do need to be the same for all Actionhero servers you are running in the cluster. This is how Actionhero scales the chat features.\n\nThere is no limit to the number of rooms which can be created, but keep in mind that each room stores information in redis, and there load created for each connection.\n\n## Examples\n\nThe full documentation for the chatRoom module can be found here: [https://docs.actionherojs.com/modules/chatroom.html](https://docs.actionherojs.com/modules/chatroom.html)\n\nIn an initializer, ensure a room exists and log the room membership every minute\n\n```ts\n// in an initializer, /src/initializers/lobby.ts\nimport { Initializer, chatRoom, log } from "actionhero";\n\nlet timer: NodeJS.Timeout;\n\nexport class MyInitializer extends Initializer {\n  constructor() {\n    super();\n    this.name = "rooms";\n  }\n\n  async initialize() {\n    // ensure a room exists\n    const lobbyExists = await chatRoom.exists("lobby");\n    if (!lobbyExists) {\n      await chatRoom.add("lobby");\n    }\n  }\n\n  async start() {\n    timer = setInterval(() => {\n      this.logLobbyStatus();\n    }, 60 * 1000);\n  }\n\n  async stop() {\n    if (timer) {\n      clearInterval(timer);\n    }\n  }\n\n  async logLobbyStatus() {\n    const { membersCount } = await chatRoom.roomStatus("lobby");\n    log(`lobby has ${membersCount} members`);\n  }\n}\n```\n\nAnd if you want to broadcast a message to all clients in a room, you can use:\n\n```ts\n// client should either be a real client you are emulating (found in api.connections) or just `{}`\n// room is the string name of a room\n// message is a string or JSON\nchatRoom.broadcast(connection, room, message);\n```\n\n## Middleware\n\nThere are 4 types of middleware you can install for the chat system: `say`, `onSayReceive`, `join`, and `leave`. You can learn more about [chat middleware in the middleware section of this site](/tutorials/middleware#Chat%20Middleware). Using middleware when messages are sent or when connections join rooms is how you build up authentication and more complex workflows.\n\n## Specific Client Communication\n\nEvery connection object also has a `connection.sendMessage(message)` method which you can call directly from the server.\n\n## Client Use\n\nThe details of communicating within a chat room are up to each individual server (see [websocket](/tutorials/websocket-server)).\n\n- Client will join a room (`client.roomAdd(room)`).\n- Once in the room, clients can send messages (which are strings) to everyone else in the room via `say`, ie: `{client.say(\'room\', Hello World\')}`\n- Once a client is in a room, they will revive messages from other members of the room as events. For example, catching say events from the websocket client looks like `{client.on(\'say\', function(message){ console.log(message); })}`. You can inspect `message.room` if you are in more than one room.\n  - The payload of a message will contain the room, sender, and the message body: `{{message: "Hello World", room: "SecretRoom", from: "7d419af9-accf-40ac-8d78-9281591dd59e", context: "user", sentAt: 1399437579346}`}\n\nIf you want to create an authenticated room, there are 2 steps:\n\n- First, create an action which modifies some property either on the connection object it self, or stores permissions to a database.\n- Then, create a `join`-style middleware which checks these values. In this middleware, you can determine if the connection should be added to the room or not.\n'},UBI6:function(e,t,n){"use strict";var o=n("ZWk2"),r=n("IPAr"),i=n("VSQ+");e.exports=m,m.locator=i,m.notInLink=!0;var a="[",s="]",c="(",l=")",u="<",h="@",d="mailto:",p=["http://","https://",d],f=p.length;function m(e,t,n){var i,m,g,y,b,w,v,k,x,_,A,T;if(this.options.gfm){for(i="",y=-1,k=f;++y<k;)if(w=p[y],(v=t.slice(0,w.length)).toLowerCase()===w){i=v;break}if(i){for(y=i.length,k=t.length,x="",_=0;y<k&&(g=t.charAt(y),!r(g)&&g!==u)&&("."!==g&&","!==g&&":"!==g&&";"!==g&&'"'!==g&&"'"!==g&&")"!==g&&"]"!==g||(A=t.charAt(y+1))&&!r(A))&&(g!==c&&g!==a||_++,g!==l&&g!==s||!(--_<0));)x+=g,y++;if(x){if(m=i+=x,w===d){if(-1===(b=x.indexOf(h))||b===k-1)return;m=m.substr(d.length)}return!!n||(T=this.enterLink(),m=this.tokenizeInline(m,e.now()),T(),e(i)({type:"link",title:null,url:o(i,{nonTerminated:!1}),children:m}))}}}}},UIh7:function(e,t,n){"use strict";var o=n("IPAr"),r=n("MaiH");e.exports=s,s.locator=r;var i="~",a="~~";function s(e,t,n){var r,s,c,l="",u="",h="",d="";if(this.options.gfm&&t.charAt(0)===i&&t.charAt(1)===i&&!o(t.charAt(2)))for(r=1,s=t.length,(c=e.now()).column+=2,c.offset+=2;++r<s;){if((l=t.charAt(r))===i&&u===i&&(!h||!o(h)))return!!n||e(a+d+a)({type:"delete",children:this.tokenizeInline(d,c)});d+=u,h=u,u=l}}},"UV+P":function(e,t,n){"use strict";var o=n("q1tI"),r=n("U6jy"),i=n("TOwV"),a={start:{line:1,column:1,offset:0},end:{line:1,column:1,offset:0}};function s(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,u=t.renderers[e.type];void 0===e.position&&(e.position=n.node&&n.node.position||a);var h=e.position.start,d=[e.type,h.line,h.column,l].join("-");if(!i.isValidElementType(u))throw new Error("Renderer for type `".concat(e.type,"` not defined or is not renderable"));var p=function(e,t,n,i,a,l){var u={key:t},h="string"===typeof i;n.sourcePos&&e.position&&(u["data-sourcepos"]=function(e){return[e.start.line,":",e.start.column,"-",e.end.line,":",e.end.column].map(String).join("")}(e.position));n.rawSourcePos&&!h&&(u.sourcePosition=e.position);n.includeNodeIndex&&a.node&&a.node.children&&!h&&(u.index=a.node.children.indexOf(e),u.parentChildCount=a.node.children.length);var d=null!==e.identifier&&void 0!==e.identifier?n.definitions[e.identifier]||{}:null;switch(e.type){case"root":c(u,{className:n.className});break;case"text":u.nodeKey=t,u.children=e.value;break;case"heading":u.level=e.depth;break;case"list":u.start=e.start,u.ordered=e.ordered,u.tight=!e.loose,u.depth=e.depth;break;case"listItem":u.checked=e.checked,u.tight=!e.loose,u.ordered=e.ordered,u.index=e.index,u.children=function(e,t){if(e.loose)return e.children;if(t.node&&e.index>0&&t.node.children[e.index-1].loose)return e.children;return function(e){return e.children.reduce((function(e,t){return e.concat("paragraph"===t.type?t.children||[]:[t])}),[])}(e)}(e,a).map((function(t,o){return s(t,n,{node:e,props:u},o)}));break;case"definition":c(u,{identifier:e.identifier,title:e.title,url:e.url});break;case"code":c(u,{language:e.lang&&e.lang.split(/\s/,1)[0]});break;case"inlineCode":u.children=e.value,u.inline=!0;break;case"link":c(u,{title:e.title||void 0,target:"function"===typeof n.linkTarget?n.linkTarget(e.url,e.children,e.title):n.linkTarget,href:n.transformLinkUri?n.transformLinkUri(e.url,e.children,e.title):e.url});break;case"image":c(u,{alt:e.alt||void 0,title:e.title||void 0,src:n.transformImageUri?n.transformImageUri(e.url,e.children,e.title,e.alt):e.url});break;case"linkReference":c(u,r(d,{href:n.transformLinkUri?n.transformLinkUri(d.href):d.href}));break;case"imageReference":c(u,{src:n.transformImageUri&&d.href?n.transformImageUri(d.href,e.children,d.title,e.alt):d.href,title:d.title||void 0,alt:e.alt||void 0});break;case"table":case"tableHead":case"tableBody":u.columnAlignment=e.align;break;case"tableRow":u.isHeader="tableHead"===a.node.type,u.columnAlignment=a.props.columnAlignment;break;case"tableCell":c(u,{isHeader:a.props.isHeader,align:a.props.columnAlignment[l]});break;case"virtualHtml":u.tag=e.tag;break;case"html":u.isBlock=e.position.start.line!==e.position.end.line,u.escapeHtml=n.escapeHtml,u.skipHtml=n.skipHtml;break;case"parsedHtml":var p;e.children&&(p=e.children.map((function(t,o){return s(t,n,{node:e,props:u},o)}))),u.escapeHtml=n.escapeHtml,u.skipHtml=n.skipHtml,u.element=function(e,t){var n=e.element;if(Array.isArray(n)){var r=o.Fragment||"div";return o.createElement(r,null,n)}if(n.props.children||t){var i=o.Children.toArray(n.props.children).concat(t);return o.cloneElement(n,null,i)}return o.cloneElement(n,null)}(e,p);break;default:c(u,r(e,{type:void 0,position:void 0,children:void 0}))}!h&&e.value&&(u.value=e.value);return u}(e,d,t,u,n,l);return o.createElement(u,p,p.children||e.children&&e.children.map((function(n,o){return s(n,t,{node:e,props:p},o)}))||void 0)}function c(e,t){for(var n in t)"undefined"!==typeof t[n]&&(e[n]=t[n])}e.exports=s},Uwf0:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n("8j/7")),s=i(n("vSXm")),c=n("WASD"),l=function(e){function t(t,n){return"object"===typeof t&&null!==t&&(n=t=void 0),e.call(this,t,n)||this}return o(t,e),t.prototype.onend=function(){var e={},t=h(m,this.dom);if(t)if("feed"===t.name){var n=t.children;e.type="atom",f(e,"id","id",n),f(e,"title","title",n);var o=p("href",h("link",n));o&&(e.link=o),f(e,"description","subtitle",n),(r=d("updated",n))&&(e.updated=new Date(r)),f(e,"author","email",n,!0),e.items=u("entry",n).map((function(e){var t={},n=e.children;f(t,"id","id",n),f(t,"title","title",n);var o=p("href",h("link",n));o&&(t.link=o);var r=d("summary",n)||d("content",n);r&&(t.description=r);var i=d("updated",n);return i&&(t.pubDate=new Date(i)),t}))}else{var r;n=h("channel",t.children).children;e.type=t.name.substr(0,3),e.id="",f(e,"title","title",n),f(e,"link","link",n),f(e,"description","description",n),(r=d("lastBuildDate",n))&&(e.updated=new Date(r)),f(e,"author","managingEditor",n,!0),e.items=u("item",t.children).map((function(e){var t={},n=e.children;f(t,"id","guid",n),f(t,"title","title",n),f(t,"link","link",n),f(t,"description","description",n);var o=d("pubDate",n);return o&&(t.pubDate=new Date(o)),t}))}this.feed=e,this.handleCallback(t?null:Error("couldn't find root of feed"))},t}(a.default);function u(e,t){return s.getElementsByTagName(e,t,!0)}function h(e,t){return s.getElementsByTagName(e,t,!0,1)[0]}function d(e,t,n){return void 0===n&&(n=!1),s.getText(s.getElementsByTagName(e,t,n,1)).trim()}function p(e,t){return t?t.attribs[e]:null}function f(e,t,n,o,r){void 0===r&&(r=!1);var i=d(n,o,r);i&&(e[t]=i)}function m(e){return"rss"===e||"feed"===e||"rdf:RDF"===e}t.FeedHandler=l;var g={xmlMode:!0};t.parseFeed=function(e,t){void 0===t&&(t=g);var n=new l(t);return new c.Parser(n,t).end(e),n.feed}},VRSw:function(e,t,n){"use strict";var o=n("1iAE"),r=n("afWh"),i=n("TjP8").tag;e.exports=c,c.locator=r;var a=/^<a /i,s=/^<\/a>/i;function c(e,t,n){var r,c,l=t.length;if(!("<"!==t.charAt(0)||l<3)&&(r=t.charAt(1),(o(r)||"?"===r||"!"===r||"/"===r)&&(c=t.match(i))))return!!n||(c=c[0],!this.inLink&&a.test(c)?this.inLink=!0:this.inLink&&s.test(c)&&(this.inLink=!1),e(c)({type:"html",value:c}))}},"VSQ+":function(e,t,n){"use strict";e.exports=function(e,t){var n,r=o.length,i=-1,a=-1;if(!this.options.gfm)return-1;for(;++i<r;)-1!==(n=e.indexOf(o[i],t))&&(n<a||-1===a)&&(a=n);return a};var o=["https://","http://","mailto:"]},Vj6a:function(e,t){e.exports=function(e){return e&&e["@@transducer/reduced"]?e:{"@@transducer/value":e,"@@transducer/reduced":!0}}},WASD:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n("b70m")),a=n("+qE3"),s=new Set(["input","option","optgroup","select","button","datalist","textarea"]),c=new Set(["p"]),l={tr:new Set(["tr","th","td"]),th:new Set(["th"]),td:new Set(["thead","th","td"]),body:new Set(["head","link","script"]),li:new Set(["li"]),p:c,h1:c,h2:c,h3:c,h4:c,h5:c,h6:c,select:s,input:s,output:s,button:s,datalist:s,textarea:s,option:new Set(["option"]),optgroup:new Set(["optgroup","option"]),dd:new Set(["dt","dd"]),dt:new Set(["dt","dd"]),address:c,article:c,aside:c,blockquote:c,details:c,div:c,dl:c,fieldset:c,figcaption:c,figure:c,footer:c,form:c,header:c,hr:c,main:c,nav:c,ol:c,pre:c,section:c,table:c,ul:c,rt:new Set(["rt","rp"]),rp:new Set(["rt","rp"]),tbody:new Set(["thead","tbody"]),tfoot:new Set(["thead","tbody"])},u=new Set(["area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr"]),h=new Set(["math","svg"]),d=new Set(["mi","mo","mn","ms","mtext","annotation-xml","foreignObject","desc","title"]),p=/\s|\//,f=function(e){function t(n,o){var r=e.call(this)||this;return r._tagname="",r._attribname="",r._attribvalue="",r._attribs=null,r._stack=[],r._foreignContext=[],r.startIndex=0,r.endIndex=null,r.parseChunk=t.prototype.write,r.done=t.prototype.end,r._options=o||{},r._cbs=n||{},r._tagname="",r._attribname="",r._attribvalue="",r._attribs=null,r._stack=[],r._foreignContext=[],r.startIndex=0,r.endIndex=null,r._lowerCaseTagNames="lowerCaseTags"in r._options?!!r._options.lowerCaseTags:!r._options.xmlMode,r._lowerCaseAttributeNames="lowerCaseAttributeNames"in r._options?!!r._options.lowerCaseAttributeNames:!r._options.xmlMode,r._tokenizer=new(r._options.Tokenizer||i.default)(r._options,r),r._cbs.onparserinit&&r._cbs.onparserinit(r),r}return o(t,e),t.prototype._updatePosition=function(e){null===this.endIndex?this._tokenizer._sectionStart<=e?this.startIndex=0:this.startIndex=this._tokenizer._sectionStart-e:this.startIndex=this.endIndex+1,this.endIndex=this._tokenizer.getAbsoluteIndex()},t.prototype.ontext=function(e){this._updatePosition(1),this.endIndex--,this._cbs.ontext&&this._cbs.ontext(e)},t.prototype.onopentagname=function(e){if(this._lowerCaseTagNames&&(e=e.toLowerCase()),this._tagname=e,!this._options.xmlMode&&Object.prototype.hasOwnProperty.call(l,e))for(var t=void 0;l[e].has(t=this._stack[this._stack.length-1]);this.onclosetag(t));!this._options.xmlMode&&u.has(e)||(this._stack.push(e),h.has(e)?this._foreignContext.push(!0):d.has(e)&&this._foreignContext.push(!1)),this._cbs.onopentagname&&this._cbs.onopentagname(e),this._cbs.onopentag&&(this._attribs={})},t.prototype.onopentagend=function(){this._updatePosition(1),this._attribs&&(this._cbs.onopentag&&this._cbs.onopentag(this._tagname,this._attribs),this._attribs=null),!this._options.xmlMode&&this._cbs.onclosetag&&u.has(this._tagname)&&this._cbs.onclosetag(this._tagname),this._tagname=""},t.prototype.onclosetag=function(e){if(this._updatePosition(1),this._lowerCaseTagNames&&(e=e.toLowerCase()),(h.has(e)||d.has(e))&&this._foreignContext.pop(),!this._stack.length||!this._options.xmlMode&&u.has(e))this._options.xmlMode||"br"!==e&&"p"!==e||(this.onopentagname(e),this._closeCurrentTag());else{var t=this._stack.lastIndexOf(e);if(-1!==t)if(this._cbs.onclosetag)for(t=this._stack.length-t;t--;)this._cbs.onclosetag(this._stack.pop());else this._stack.length=t;else"p"!==e||this._options.xmlMode||(this.onopentagname(e),this._closeCurrentTag())}},t.prototype.onselfclosingtag=function(){this._options.xmlMode||this._options.recognizeSelfClosing||this._foreignContext[this._foreignContext.length-1]?this._closeCurrentTag():this.onopentagend()},t.prototype._closeCurrentTag=function(){var e=this._tagname;this.onopentagend(),this._stack[this._stack.length-1]===e&&(this._cbs.onclosetag&&this._cbs.onclosetag(e),this._stack.pop())},t.prototype.onattribname=function(e){this._lowerCaseAttributeNames&&(e=e.toLowerCase()),this._attribname=e},t.prototype.onattribdata=function(e){this._attribvalue+=e},t.prototype.onattribend=function(){this._cbs.onattribute&&this._cbs.onattribute(this._attribname,this._attribvalue),this._attribs&&!Object.prototype.hasOwnProperty.call(this._attribs,this._attribname)&&(this._attribs[this._attribname]=this._attribvalue),this._attribname="",this._attribvalue=""},t.prototype._getInstructionName=function(e){var t=e.search(p),n=t<0?e:e.substr(0,t);return this._lowerCaseTagNames&&(n=n.toLowerCase()),n},t.prototype.ondeclaration=function(e){if(this._cbs.onprocessinginstruction){var t=this._getInstructionName(e);this._cbs.onprocessinginstruction("!"+t,"!"+e)}},t.prototype.onprocessinginstruction=function(e){if(this._cbs.onprocessinginstruction){var t=this._getInstructionName(e);this._cbs.onprocessinginstruction("?"+t,"?"+e)}},t.prototype.oncomment=function(e){this._updatePosition(4),this._cbs.oncomment&&this._cbs.oncomment(e),this._cbs.oncommentend&&this._cbs.oncommentend()},t.prototype.oncdata=function(e){this._updatePosition(1),this._options.xmlMode||this._options.recognizeCDATA?(this._cbs.oncdatastart&&this._cbs.oncdatastart(),this._cbs.ontext&&this._cbs.ontext(e),this._cbs.oncdataend&&this._cbs.oncdataend()):this.oncomment("[CDATA["+e+"]]")},t.prototype.onerror=function(e){this._cbs.onerror&&this._cbs.onerror(e)},t.prototype.onend=function(){if(this._cbs.onclosetag)for(var e=this._stack.length;e>0;this._cbs.onclosetag(this._stack[--e]));this._cbs.onend&&this._cbs.onend()},t.prototype.reset=function(){this._cbs.onreset&&this._cbs.onreset(),this._tokenizer.reset(),this._tagname="",this._attribname="",this._attribs=null,this._stack=[],this._cbs.onparserinit&&this._cbs.onparserinit(this)},t.prototype.parseComplete=function(e){this.reset(),this.end(e)},t.prototype.write=function(e){this._tokenizer.write(e)},t.prototype.end=function(e){this._tokenizer.end(e)},t.prototype.pause=function(){this._tokenizer.pause()},t.prototype.resume=function(){this._tokenizer.resume()},t}(a.EventEmitter);t.Parser=f},WHpZ:function(e,t,n){var o=n("cOqj"),r=n("Av+g"),i=o((function(e){var t=[];for(var n in e)r(n,e)&&(t[t.length]=[n,e[n]]);return t}));e.exports=i},Wnyi:function(e,t,n){var o=n("cOqj"),r=n("ABxe");e.exports=function(e){return function t(n,i){switch(arguments.length){case 0:return t;case 1:return r(n)?t:o((function(t){return e(n,t)}));default:return r(n)&&r(i)?t:r(n)?o((function(t){return e(t,i)})):r(i)?o((function(t){return e(n,t)})):e(n,i)}}}},WtKE:function(e,t,n){"use strict";var o,r=59;e.exports=function(e){var t,n="&"+e+";";if((o=o||document.createElement("i")).innerHTML=n,(t=o.textContent).charCodeAt(t.length-1)===r&&"semi"!==e)return!1;return t!==n&&t}},WwTg:function(e){e.exports=JSON.parse('["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","legend","li","link","main","menu","menuitem","meta","nav","noframes","ol","optgroup","option","p","param","pre","section","source","title","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"]')},Y6DX:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/[name]",function(){return n("3z49")}])},Ymwu:function(e,t,n){var o=n("Wnyi")(n("9gHp")(["find"],n("8qaq"),(function(e,t){for(var n=0,o=t.length;n<o;){if(e(t[n]))return t[n];n+=1}})));e.exports=o},Z87L:function(e){e.exports=JSON.parse('{"0":"\ufffd","128":"\u20ac","130":"\u201a","131":"\u0192","132":"\u201e","133":"\u2026","134":"\u2020","135":"\u2021","136":"\u02c6","137":"\u2030","138":"\u0160","139":"\u2039","140":"\u0152","142":"\u017d","145":"\u2018","146":"\u2019","147":"\u201c","148":"\u201d","149":"\u2022","150":"\u2013","151":"\u2014","152":"\u02dc","153":"\u2122","154":"\u0161","155":"\u203a","156":"\u0153","158":"\u017e","159":"\u0178"}')},ZGSl:function(e,t,n){"use strict";var o=n("us2i"),r=n("yp27");e.exports=function(){var e=new r;return{defaultProcessingInstructions:[{shouldProcessNode:o.shouldProcessEveryNode,processNode:e.processDefaultNode}]}}},ZJXm:function(e,t,n){"use strict";var o=n("TjP8").openCloseTag;e.exports=function(e,t,n){var c,l,u,h,d,p,f,m=this.options.blocks,g=t.length,y=0,b=[[/^<(script|pre|style)(?=(\s|>|$))/i,/<\/(script|pre|style)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Za-z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+m.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(o.source+"\\s*$"),/^$/,!1]];for(;y<g&&((h=t.charAt(y))===r||h===i);)y++;if(t.charAt(y)!==s)return;c=-1===(c=t.indexOf(a,y+1))?g:c,l=t.slice(y,c),u=-1,d=b.length;for(;++u<d;)if(b[u][0].test(l)){p=b[u];break}if(!p)return;if(n)return p[2];if(y=c,!p[1].test(l))for(;y<g;){if(c=-1===(c=t.indexOf(a,y+1))?g:c,l=t.slice(y+1,c),p[1].test(l)){l&&(y=c);break}y=c}return f=t.slice(0,y),e(f)({type:"html",value:f})};var r="\t",i=" ",a="\n",s="<"},ZNil:function(e,t,n){"use strict";n.r(t),t.default='**For Actionhero v21.x.x**\n\n## Why Typescript?\n\nActionhero is moving to [Typescript](https://www.typescriptlang.org).\n\nTypescript is a language that `compiles` to javascript that makes the developer experience much nicer. It includes features like type checking, sharing interfaces and modules, and generally other "quality of life" features found in other languages to help you write better javascript code.\n\nFor Actionhero, that means we can now provide:\n\n<h4>Type Hinting</h4>\n\n<img style="width:90%" src=\'/static/images/tutorials/ts-actions.png\' />\n\n<h4>Module definitions</h4>\n\n<img style="width:90%" src=\'/static/images/tutorials/ts-cache.png\' />\n\n<h4>Automatic Documentation directly from the code</h4>\n\nVisit [docs.actionherojs.com](https://docs.actionherojs.com/) to see this live!\n<img style="width:90%" src=\'/static/images/tutorials/docs.png\' />\n\n...and an overall more pleasant developer experience!\n\n**Note**: You do not have to use Typescript to use Actionhero! Other than some layout changes to your project, you can continue to use Actionhero with regular javascript node.js projects. We will always ship compiled javascript files to NPM so that actionhero will still work with the most recent versions of Node.js. That said, the generators will favor Typescript projects moving forward, creating Typescript files\n\nActionhero will create and install everything you need for a pleasant typescript experience, including a `tsconfig` file, node\'s `@types` and development tools already linked into your `package.json`\n\n---\n\n## Upgrading Packages & Package.json\n\nIf you are upgrading an existing Actionhero project, the first thing to do is install the related packages and create new files:\n\n```sh\nnpm install --save actionhero@next\nnpm install --save-dev @types/node prettier\nnpm uninstall standard\n```\n\nUpdate your scripts in `package.json`\n\n```json\n"scripts": {\n  "dev": "ts-node-dev --transpile-only src/server.ts",\n  "start": "node dist/server.js",\n  "actionhero": "actionhero",\n  "test": "jest",\n  "pretest": "npm run build && npm run lint",\n  "postinstall": "npm run build",\n  "build": "tsc --declaration",\n  "lint": "prettier --check src/*/** __test__/*/**",\n  "pretty": "prettier --write src/*/** __test__/*/**"\n},\n```\n\nand your `jest` config as well, also in `package.json`\n\n```json\n"jest": {\n  "testEnvironment": "node",\n  "transform": {\n    "^.+\\\\.ts?$": "ts-jest"\n  }\n};\n```\n\nRemove the block about `standard` from your `package.json`. We are switching to [prettier](_https://prettier.io) because it has better typescript support.\n\nRemember - you will be using `npm run dev` now when developing locally.\n\n## Typescript Configuration\n\nTypescript is managed by a `tsconfig.json` file at the root of your project. Create one now with the following content:\n\n```json\n{\n  "compilerOptions": {\n    "outDir": "./dist",\n    "allowJs": true,\n    "module": "commonjs",\n    "target": "es2018"\n  },\n  "include": ["./src/**/*"]\n}\n```\n\n## Project Structure\n\n1. Create the `src` and `dist` directories\n2. Move Actions, Tasks, Initializers, Servers, and Config into `src`\n3. Create a new `modules` directory\n\nYour project should now look like this:\n\n```\n|\n|- src\n|  - server.ts\n|\n|  - config\n|    - (project settings)\n|\n|  - actions\n|    -- (your actions)\n|\n|  - initializers\n|    -- (any additional initializers you want)\n|\n|  - servers\n|    -- (custom servers you may make)\n|\n|  - tasks\n|    -- (your tasks)\n|\n|  - bin\n|    -- (your custom CLI commands)\n|\n|- locales\n|-- (translation files)\n|\n|- __tests__\n|-- (tests for your API)\n|\n| - log\n|-- (default location for logs)\n|\n|- node_modules\n|-- (your modules, actionhero should be npm installed in here)\n|\n|- pids\n|-- (pidfiles for your running servers)\n|\n|- public\n|-- (your static assets to be served by /file)\n|\nreadme.md\npackage.json\n```\n\n## Create server.ts\n\nCreate `server.ts` at /src/server.ts\n\n```ts\nimport { Process } from "actionhero";\n\n// load any custom code, configure the env, as needed\n\nasync function main() {\n  // create a new actionhero process\n  const app = new Process();\n\n  // handle unix signals and uncaught exceptions & rejections\n  app.registerProcessSignals();\n\n  // start the app!\n  // you can pass custom configuration to the process as needed\n  await app.start();\n}\n\nmain();\n```\n\n## Update JS to TS syntax\n\nTypescript uses the latest ES6-style syntax for importing and exporting things. You do not need to use babel to get this to work... Typescript does it for you!\n\n- Rename all the files you just moved into `src` from `*.js` to `*.ts` files\n  - A Helpful rename command for unix/osx computers to do this is -> `for f in _.js; do mv -- "$f" "${f%.js}.ts"; done`\n- Change the imports from Require-style `const {thing} = require(\'thing\')` to Import-style `import { thing } from \'thing\'`\n- Change all the exports from Module-style `module.exports = ...` or `exports.thing = ...` to ES6-style `export const thing = ...`\n\nFor example:\n\n**OLD**\n\n```js\nconst { Action } = require("actionhero");\n\nexports.default = class MyAction extends Action {\n  constructor() {\n    super();\n    this.name = "hello";\n    this.description = "an actionhero action";\n    this.outputExample = { message: "hello" };\n  }\n\n  async run({ response }) {\n    response.message = "hello";\n  }\n};\n```\n\n**NEW**\n\n```ts\nimport { Action } from "actionhero";\n\nexport class MyAction extends Action {\n  constructor() {\n    super();\n    this.name = "hello";\n    this.description = "an actionhero action";\n    this.outputExample = { message: "hello" };\n  }\n\n  async run({ response }) {\n    response.message = "hello";\n  }\n}\n```\n\n## Config\n\nThe config module (it is a module now!) produces a static object with your configuration. This means that it can be required via `import {config} from \'actionhero\'` at any point in your project\'s life cycle... you no longer need to wait for the initialization process to complete. However, this required some changes:\n\n- The config methods no longer provide `api`, they provide `config`. Only other information from other config files is available to you, nothing from the rest of the application.\n\nTo upgrade your config:\n\n- Change all of the exports, per above. When exporting the default config, use `DEFAULT` (all caps), ie: `export const DEFAULT = {config: { ... }}`\n- Update your paths in `config/general` , ie:\n\n```json\npaths: {\n  action: [path.join(__dirname, "..", "actions")],\n  task: [path.join(__dirname, "..", "tasks")],\n  server: [path.join(__dirname, "..", "servers")],\n  cli: [path.join(__dirname, "..", "bin")],\n  initializer: [path.join(__dirname, "..", "initializers")],\n  public: [path.join(process.cwd(), "public")],\n  pid: [path.join(process.cwd(), "pids")],\n  log: [path.join(process.cwd(), "log")],\n  plugin: [path.join(process.cwd(), "node_modules")],\n  locale: [path.join(process.cwd(), "locales")],\n  test: [path.join(process.cwd(), "__tests__")],\n  src: path.join(process.cwd(), "src"),\n  dist: path.join(process.cwd(), "dist")\n}\n```\n\nDon\u2019t forget any paths you might have in other environments (like `test`)!\n\n## Middleware and Sessions\n\nNow with Typescript, you\u2019ll get an error if you try to set arbitrary properties on the data object either within an `Action` or `Middleware`. We need a place to pass data from the middleware to the action.\n\n```ts\n// in an initializer\nimport { action } from "actionhero";\nimport { models } from "./../models"; // in your project\n\nconst authenticatedTeamMemberMiddleware = {\n  name: "authenticated-team-member",\n  global: false,\n  priority: 1000,\n  preProcessor: async data => {\n    const { Team, TeamMember } = models;\n    const sessionData = await api.session.load(data.connection);\n    if (!sessionData) {\n      throw new Error("Please log in to continue");\n    } else if (\n      !data.params.csrfToken ||\n      data.params.csrfToken !== sessionData.csrfToken\n    ) {\n      throw new Error("CSRF error");\n    } else {\n      const teamMember = await TeamMember.findOne({\n        where: { guid: sessionData.guid },\n        include: Team\n      });\n      data.session.data = sessionData; /// <--- HERE/\n      data.session.teamMember = teamMember; /// <--- HERE/\n    }\n  }\n};\n\naction.addMiddleware(authenticatedTeamMemberMiddleware);\n```\n\n## Modules and Initializers\n\nA number of things have been moved out of the API object to simplify their use by creating import/export modules you can require directly. In this way, you can get type hinting for various parts of Actionhero! This is a logical separation between `initializers` - code that executes when your server boots up and loads or connects vs `modules` which provide an API for you to use in your code.\n\nFor example, the `task` system has been split into 2 parts - both a `module` and `initializer`. The initializer continues to load your tasks into `api.tasks.tasks`, but doesn\u2019t expose any methods for you to use. Now, when you want to enqueue a task, you call `task.enqueue()` you load it from the module via `import {task} from \'actionhero\'`\n\nThe `initialize`, `start`, and `stop` methods of your initializers will now be passed `config`. This is helpful in the off chance you are modifying `config` and cannot rely on the static export of that information (this is rare).\n\n**Removed from the API object and are now directly exported by Actionhero as modules:**\n\nie: `import { log, config } from \'actionhero\'`\n\n- log (the method to write to the logs)\n- config (the config object hash)\n- action (addMiddleware)\n- task (addMiddleware)\n- cache\n- task\n- i18n\n- specHelper\n- id (the server\u2019s id)\n- env (development, staging, production)\n- localize (method that accepts a string and a connection)\n\n**The API object**\n\nwhat remains on the API object are truly things about your API - actions, tasks, servers, initializers. And now these elements are very typesafe. **_You can no longer add and remove things randomly to the API object_**. This means that in your project, you should create imports and exports directly and share them with your actions and tasks.\n\n**Polyfill**\n\nA polyfill will be included in the first few releases of Actionhero in typescript to port the new exports back to the `api` object. A warning will be displayed.\n\nA new config setting to enable or disable the polyfill is located at `config.general.legacyApiPolyfill`\n\n## Config\n\n- `config.general.id`: can no longer be set\n- `config.i18n.determineConnectionLocale`: this method should be set on the `i18n` object exported by Actionhero.\n\n## Chat\n\n- `chatRoom.sanitizeMemberDetails()` is no longer overrideable/customizable.\n\n## WatchFileAndAct\n\nWe have removed the custom module loaders for Actionhero\'s development mode, `watchFileAndAct`. Now that we need to transpile our applications from typescript to javascript, we can rely on some of the excellent packages already developed for this purpose. Newly generated Actionhero projects will make use of `node-ts-dev` (https://github.com/whitecolor/ts-node-dev) to boot and reload your projects when running in typescript mode.\n\nJavascript projects can do a similar thing via the nodemon (https://nodemon.io/) package\n'},ZONP:function(e,t,n){"use strict";e.exports=function(e){var t="string"===typeof e?e.charCodeAt(0):e;return t>=48&&t<=57}},ZOtD:function(e,t,n){var o=n("ALMR"),r=n("cOqj"),i=n("Wnyi"),a=n("r8KN"),s=i((function(e,t){return 1===e?r(t):o(e,a(e,[],t))}));e.exports=s},ZWk2:function(e,t,n){"use strict";var o=n("m2n9"),r=n("Z87L"),i=n("ZONP"),a=n("fjrl"),s=n("J5yW"),c=n("WtKE");e.exports=function(e,t){var n,i,a={};t||(t={});for(i in d)n=t[i],a[i]=null===n||void 0===n?d[i]:n;(a.position.indent||a.position.start)&&(a.indent=a.position.indent||[],a.position=a.position.start);return function(e,t){var n,i,a,d,M,z,U,F,B,W,V,Y,G,J,X,Z,K,$,Q,ee=t.additional,te=t.nonTerminated,ne=t.text,oe=t.reference,re=t.warning,ie=t.textContext,ae=t.referenceContext,se=t.warningContext,ce=t.position,le=t.indent||[],ue=e.length,he=0,de=-1,pe=ce.column||1,fe=ce.line||1,me="",ge=[];"string"===typeof ee&&(ee=ee.charCodeAt(0));Z=be(),F=re?function(e,t){var n=be();n.column+=t,n.offset+=t,re.call(se,H[e],n,e)}:h,he--,ue++;for(;++he<ue;)if(M===f&&(pe=le[de]||1),(M=e.charCodeAt(he))===y){if((U=e.charCodeAt(he+1))===p||U===f||U===m||U===g||U===y||U===w||U!==U||ee&&U===ee){me+=u(M),pe++;continue}for(Y=G=he+1,Q=G,U===k?(Q=++Y,(U=e.charCodeAt(Q))===x||U===_?(J=S,Q=++Y):J=j):J=T,n="",V="",d="",X=E[J],Q--;++Q<ue&&(U=e.charCodeAt(Q),X(U));)d+=u(U),J===T&&l.call(o,d)&&(n=d,V=o[d]);(a=e.charCodeAt(Q)===b)&&(Q++,(i=J===T&&c(d))&&(n=d,V=i)),$=1+Q-G,(a||te)&&(d?J===T?(a&&!V?F(N,1):(n!==d&&(Q=Y+n.length,$=1+Q-Y,a=!1),a||(B=n?C:O,t.attribute?(U=e.charCodeAt(Q))===v?(F(B,$),V=null):s(U)?V=null:F(B,$):F(B,$))),z=V):(a||F(P,$),z=parseInt(d,q[J]),(ye=z)>=55296&&ye<=57343||ye>1114111?(F(L,$),z=u(A)):z in r?(F(R,$),z=r[z]):(W="",D(z)&&F(R,$),z>65535&&(W+=u((z-=65536)>>>10|55296),z=56320|1023&z),z=W+u(z))):J!==T&&F(I,$)),z?(we(),Z=be(),he=Q-1,pe+=Q-G+1,ge.push(z),(K=be()).offset++,oe&&oe.call(ae,z,{start:Z,end:K},e.slice(G-1,Q)),Z=K):(d=e.slice(G-1,Q),me+=d,pe+=d.length,he=Q-1)}else 10===M&&(fe++,de++,pe=0),M===M?(me+=u(M),pe++):we();var ye;return ge.join("");function be(){return{line:fe,column:pe,offset:he+(ce.offset||0)}}function we(){me&&(ge.push(me),ne&&ne.call(ie,me,{start:Z,end:be()}),me="")}}(e,a)};var l={}.hasOwnProperty,u=String.fromCharCode,h=Function.prototype,d={warning:null,reference:null,text:null,warningContext:null,referenceContext:null,textContext:null,position:{},additional:null,attribute:!1,nonTerminated:!0},p=9,f=10,m=12,g=32,y=38,b=59,w=60,v=61,k=35,x=88,_=120,A=65533,T="named",S="hexadecimal",j="decimal",q={};q[S]=16,q[j]=10;var E={};E[T]=s,E[j]=i,E[S]=a;var C=1,P=2,O=3,I=4,N=5,R=6,L=7,H={};function D(e){return e>=1&&e<=8||11===e||e>=13&&e<=31||e>=127&&e<=159||e>=64976&&e<=65007||65535===(65535&e)||65534===(65535&e)}H[C]="Named character references must be terminated by a semicolon",H[P]="Numeric character references must be terminated by a semicolon",H[O]="Named character references cannot be empty",H[I]="Numeric character references cannot be empty",H[N]="Named character references must be known",H[R]="Numeric character references cannot be disallowed",H[L]="Numeric character references cannot be outside the permissible Unicode range"},Zasy:function(e,t,n){"use strict";function o(e){if("string"===typeof e)return function(e){return function(t){return Boolean(t&&t.type===e)}}(e);if(null===e||void 0===e)return a;if("object"===typeof e)return("length"in e?i:r)(e);if("function"===typeof e)return e;throw new Error("Expected function, string, or object as test")}function r(e){return function(t){var n;for(n in e)if(t[n]!==e[n])return!1;return!0}}function i(e){var t=function(e){for(var t=[],n=e.length,r=-1;++r<n;)t[r]=o(e[r]);return t}(e),n=t.length;return function(){var e=-1;for(;++e<n;)if(t[e].apply(this,arguments))return!0;return!1}}function a(){return!0}e.exports=o},ZkSf:function(e,t,n){"use strict";e.exports=s;var o=n("nc5S"),r=o.CONTINUE,i=o.SKIP,a=o.EXIT;function s(e,t,n,r){"function"===typeof t&&"function"!==typeof n&&(r=n,n=t,t=null),o(e,t,(function(e,t){var o=t[t.length-1],r=o?o.children.indexOf(e):null;return n(e,r,o)}),r)}s.CONTINUE=r,s.SKIP=i,s.EXIT=a},Zpkj:function(e,t,n){"use strict";var o=n("RsFJ"),r=n("RjOF"),i=n("my8H");e.exports=function(e,t){var n,l,u,h,d=e.split(s),p=d.length+1,f=1/0,m=[];d.unshift(r(a,t)+"!");for(;p--;)if(l=i(d[p]),m[p]=l.stops,0!==o(d[p]).length){if(!l.indent){f=1/0;break}l.indent>0&&l.indent<f&&(f=l.indent)}if(f!==1/0)for(p=d.length;p--;){for(u=m[p],n=f;n&&!(n in u);)n--;h=0!==o(d[p]).length&&f&&n!==f?c:"",d[p]=h+d[p].slice(n in u?u[n]+1:0)}return d.shift(),d.join(s)};var a=" ",s="\n",c="\t"},aCXt:function(e,t,n){"use strict";var o=n("/qNp");function r(){}e.exports=a,r.prototype=Error.prototype,a.prototype=new r;var i=a.prototype;function a(e,t,n){var r,i,a;"string"===typeof t&&(n=t,t=null),r=function(e){var t,n=[null,null];"string"===typeof e&&(-1===(t=e.indexOf(":"))?n[1]=e:(n[0]=e.slice(0,t),n[1]=e.slice(t+1)));return n}(n),i=o(t)||"1:1",a={start:{line:null,column:null},end:{line:null,column:null}},t&&t.position&&(t=t.position),t&&(t.start?(a=t,t=t.start):a.start=t),e.stack&&(this.stack=e.stack,e=e.message),this.message=e,this.name=i,this.reason=e,this.line=t?t.line:null,this.column=t?t.column:null,this.location=a,this.source=r[0],this.ruleId=r[1]}i.file="",i.name="",i.reason="",i.message="",i.stack="",i.fatal=null,i.column=null,i.line=null},aLRh:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var r=n("MSw7"),i=o(n("GIBT"));t.getOuterHTML=i.default,t.getInnerHTML=function(e,n){return r.hasChildren(e)?e.children.map((function(e){return t.getOuterHTML(e,n)})).join(""):""},t.getText=function e(t){return Array.isArray(t)?t.map(e).join(""):r.isTag(t)?"br"===t.name?"\n":e(t.children):r.isCDATA(t)?e(t.children):r.isText(t)?t.data:""}},aTp6:function(e,t,n){"use strict";e.exports=function(e,t){var n=e.indexOf("\n",t);for(;n>t&&" "===e.charAt(n-1);)n--;return n}},afWh:function(e,t,n){"use strict";e.exports=function(e,t){return e.indexOf("<",t)}},b70m:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var r=o(n("cHMM")),i=o(n("xWCP")),a=o(n("uWBR")),s=o(n("9fJ0"));function c(e){return" "===e||"\n"===e||"\t"===e||"\f"===e||"\r"===e}function l(e,t,n){var o=e.toLowerCase();return e===o?function(e,r){r===o?e._state=t:(e._state=n,e._index--)}:function(r,i){i===o||i===e?r._state=t:(r._state=n,r._index--)}}function u(e,t){var n=e.toLowerCase();return function(o,r){r===n||r===e?o._state=t:(o._state=3,o._index--)}}var h=l("C",23,16),d=l("D",24,16),p=l("A",25,16),f=l("T",26,16),m=l("A",27,16),g=u("R",34),y=u("I",35),b=u("P",36),w=u("T",37),v=l("R",39,1),k=l("I",40,1),x=l("P",41,1),_=l("T",42,1),A=u("Y",44),T=u("L",45),S=u("E",46),j=l("Y",48,1),q=l("L",49,1),E=l("E",50,1),C=l("#",52,53),P=l("X",55,54),O=function(){function e(e,t){this._state=1,this._buffer="",this._sectionStart=0,this._index=0,this._bufferOffset=0,this._baseState=1,this._special=1,this._running=!0,this._ended=!1,this._cbs=t,this._xmlMode=!(!e||!e.xmlMode),this._decodeEntities=!(!e||!e.decodeEntities)}return e.prototype.reset=function(){this._state=1,this._buffer="",this._sectionStart=0,this._index=0,this._bufferOffset=0,this._baseState=1,this._special=1,this._running=!0,this._ended=!1},e.prototype._stateText=function(e){"<"===e?(this._index>this._sectionStart&&this._cbs.ontext(this._getSection()),this._state=2,this._sectionStart=this._index):this._decodeEntities&&1===this._special&&"&"===e&&(this._index>this._sectionStart&&this._cbs.ontext(this._getSection()),this._baseState=1,this._state=51,this._sectionStart=this._index)},e.prototype._stateBeforeTagName=function(e){"/"===e?this._state=5:"<"===e?(this._cbs.ontext(this._getSection()),this._sectionStart=this._index):">"===e||1!==this._special||c(e)?this._state=1:"!"===e?(this._state=15,this._sectionStart=this._index+1):"?"===e?(this._state=17,this._sectionStart=this._index+1):(this._state=this._xmlMode||"s"!==e&&"S"!==e?3:31,this._sectionStart=this._index)},e.prototype._stateInTagName=function(e){("/"===e||">"===e||c(e))&&(this._emitToken("onopentagname"),this._state=8,this._index--)},e.prototype._stateBeforeClosingTagName=function(e){c(e)||(">"===e?this._state=1:1!==this._special?"s"===e||"S"===e?this._state=32:(this._state=1,this._index--):(this._state=6,this._sectionStart=this._index))},e.prototype._stateInClosingTagName=function(e){(">"===e||c(e))&&(this._emitToken("onclosetag"),this._state=7,this._index--)},e.prototype._stateAfterClosingTagName=function(e){">"===e&&(this._state=1,this._sectionStart=this._index+1)},e.prototype._stateBeforeAttributeName=function(e){">"===e?(this._cbs.onopentagend(),this._state=1,this._sectionStart=this._index+1):"/"===e?this._state=4:c(e)||(this._state=9,this._sectionStart=this._index)},e.prototype._stateInSelfClosingTag=function(e){">"===e?(this._cbs.onselfclosingtag(),this._state=1,this._sectionStart=this._index+1):c(e)||(this._state=8,this._index--)},e.prototype._stateInAttributeName=function(e){("="===e||"/"===e||">"===e||c(e))&&(this._cbs.onattribname(this._getSection()),this._sectionStart=-1,this._state=10,this._index--)},e.prototype._stateAfterAttributeName=function(e){"="===e?this._state=11:"/"===e||">"===e?(this._cbs.onattribend(),this._state=8,this._index--):c(e)||(this._cbs.onattribend(),this._state=9,this._sectionStart=this._index)},e.prototype._stateBeforeAttributeValue=function(e){'"'===e?(this._state=12,this._sectionStart=this._index+1):"'"===e?(this._state=13,this._sectionStart=this._index+1):c(e)||(this._state=14,this._sectionStart=this._index,this._index--)},e.prototype._stateInAttributeValueDoubleQuotes=function(e){'"'===e?(this._emitToken("onattribdata"),this._cbs.onattribend(),this._state=8):this._decodeEntities&&"&"===e&&(this._emitToken("onattribdata"),this._baseState=this._state,this._state=51,this._sectionStart=this._index)},e.prototype._stateInAttributeValueSingleQuotes=function(e){"'"===e?(this._emitToken("onattribdata"),this._cbs.onattribend(),this._state=8):this._decodeEntities&&"&"===e&&(this._emitToken("onattribdata"),this._baseState=this._state,this._state=51,this._sectionStart=this._index)},e.prototype._stateInAttributeValueNoQuotes=function(e){c(e)||">"===e?(this._emitToken("onattribdata"),this._cbs.onattribend(),this._state=8,this._index--):this._decodeEntities&&"&"===e&&(this._emitToken("onattribdata"),this._baseState=this._state,this._state=51,this._sectionStart=this._index)},e.prototype._stateBeforeDeclaration=function(e){this._state="["===e?22:"-"===e?18:16},e.prototype._stateInDeclaration=function(e){">"===e&&(this._cbs.ondeclaration(this._getSection()),this._state=1,this._sectionStart=this._index+1)},e.prototype._stateInProcessingInstruction=function(e){">"===e&&(this._cbs.onprocessinginstruction(this._getSection()),this._state=1,this._sectionStart=this._index+1)},e.prototype._stateBeforeComment=function(e){"-"===e?(this._state=19,this._sectionStart=this._index+1):this._state=16},e.prototype._stateInComment=function(e){"-"===e&&(this._state=20)},e.prototype._stateAfterComment1=function(e){this._state="-"===e?21:19},e.prototype._stateAfterComment2=function(e){">"===e?(this._cbs.oncomment(this._buffer.substring(this._sectionStart,this._index-2)),this._state=1,this._sectionStart=this._index+1):"-"!==e&&(this._state=19)},e.prototype._stateBeforeCdata6=function(e){"["===e?(this._state=28,this._sectionStart=this._index+1):(this._state=16,this._index--)},e.prototype._stateInCdata=function(e){"]"===e&&(this._state=29)},e.prototype._stateAfterCdata1=function(e){this._state="]"===e?30:28},e.prototype._stateAfterCdata2=function(e){">"===e?(this._cbs.oncdata(this._buffer.substring(this._sectionStart,this._index-2)),this._state=1,this._sectionStart=this._index+1):"]"!==e&&(this._state=28)},e.prototype._stateBeforeSpecial=function(e){"c"===e||"C"===e?this._state=33:"t"===e||"T"===e?this._state=43:(this._state=3,this._index--)},e.prototype._stateBeforeSpecialEnd=function(e){2!==this._special||"c"!==e&&"C"!==e?3!==this._special||"t"!==e&&"T"!==e?this._state=1:this._state=47:this._state=38},e.prototype._stateBeforeScript5=function(e){("/"===e||">"===e||c(e))&&(this._special=2),this._state=3,this._index--},e.prototype._stateAfterScript5=function(e){">"===e||c(e)?(this._special=1,this._state=6,this._sectionStart=this._index-6,this._index--):this._state=1},e.prototype._stateBeforeStyle4=function(e){("/"===e||">"===e||c(e))&&(this._special=3),this._state=3,this._index--},e.prototype._stateAfterStyle4=function(e){">"===e||c(e)?(this._special=1,this._state=6,this._sectionStart=this._index-5,this._index--):this._state=1},e.prototype._parseNamedEntityStrict=function(){if(this._sectionStart+1<this._index){var e=this._buffer.substring(this._sectionStart+1,this._index),t=this._xmlMode?s.default:i.default;Object.prototype.hasOwnProperty.call(t,e)&&(this._emitPartial(t[e]),this._sectionStart=this._index+1)}},e.prototype._parseLegacyEntity=function(){var e=this._sectionStart+1,t=this._index-e;for(t>6&&(t=6);t>=2;){var n=this._buffer.substr(e,t);if(Object.prototype.hasOwnProperty.call(a.default,n))return this._emitPartial(a.default[n]),void(this._sectionStart+=t+1);t--}},e.prototype._stateInNamedEntity=function(e){";"===e?(this._parseNamedEntityStrict(),this._sectionStart+1<this._index&&!this._xmlMode&&this._parseLegacyEntity(),this._state=this._baseState):(e<"a"||e>"z")&&(e<"A"||e>"Z")&&(e<"0"||e>"9")&&(this._xmlMode||this._sectionStart+1===this._index||(1!==this._baseState?"="!==e&&this._parseNamedEntityStrict():this._parseLegacyEntity()),this._state=this._baseState,this._index--)},e.prototype._decodeNumericEntity=function(e,t){var n=this._sectionStart+e;if(n!==this._index){var o=this._buffer.substring(n,this._index),i=parseInt(o,t);this._emitPartial(r.default(i)),this._sectionStart=this._index}else this._sectionStart--;this._state=this._baseState},e.prototype._stateInNumericEntity=function(e){";"===e?(this._decodeNumericEntity(2,10),this._sectionStart++):(e<"0"||e>"9")&&(this._xmlMode?this._state=this._baseState:this._decodeNumericEntity(2,10),this._index--)},e.prototype._stateInHexEntity=function(e){";"===e?(this._decodeNumericEntity(3,16),this._sectionStart++):(e<"a"||e>"f")&&(e<"A"||e>"F")&&(e<"0"||e>"9")&&(this._xmlMode?this._state=this._baseState:this._decodeNumericEntity(3,16),this._index--)},e.prototype._cleanup=function(){this._sectionStart<0?(this._buffer="",this._bufferOffset+=this._index,this._index=0):this._running&&(1===this._state?(this._sectionStart!==this._index&&this._cbs.ontext(this._buffer.substr(this._sectionStart)),this._buffer="",this._bufferOffset+=this._index,this._index=0):this._sectionStart===this._index?(this._buffer="",this._bufferOffset+=this._index,this._index=0):(this._buffer=this._buffer.substr(this._sectionStart),this._index-=this._sectionStart,this._bufferOffset+=this._sectionStart),this._sectionStart=0)},e.prototype.write=function(e){this._ended&&this._cbs.onerror(Error(".write() after done!")),this._buffer+=e,this._parse()},e.prototype._parse=function(){for(;this._index<this._buffer.length&&this._running;){var e=this._buffer.charAt(this._index);1===this._state?this._stateText(e):12===this._state?this._stateInAttributeValueDoubleQuotes(e):9===this._state?this._stateInAttributeName(e):19===this._state?this._stateInComment(e):8===this._state?this._stateBeforeAttributeName(e):3===this._state?this._stateInTagName(e):6===this._state?this._stateInClosingTagName(e):2===this._state?this._stateBeforeTagName(e):10===this._state?this._stateAfterAttributeName(e):13===this._state?this._stateInAttributeValueSingleQuotes(e):11===this._state?this._stateBeforeAttributeValue(e):5===this._state?this._stateBeforeClosingTagName(e):7===this._state?this._stateAfterClosingTagName(e):31===this._state?this._stateBeforeSpecial(e):20===this._state?this._stateAfterComment1(e):14===this._state?this._stateInAttributeValueNoQuotes(e):4===this._state?this._stateInSelfClosingTag(e):16===this._state?this._stateInDeclaration(e):15===this._state?this._stateBeforeDeclaration(e):21===this._state?this._stateAfterComment2(e):18===this._state?this._stateBeforeComment(e):32===this._state?this._stateBeforeSpecialEnd(e):38===this._state?v(this,e):39===this._state?k(this,e):40===this._state?x(this,e):33===this._state?g(this,e):34===this._state?y(this,e):35===this._state?b(this,e):36===this._state?w(this,e):37===this._state?this._stateBeforeScript5(e):41===this._state?_(this,e):42===this._state?this._stateAfterScript5(e):43===this._state?A(this,e):28===this._state?this._stateInCdata(e):44===this._state?T(this,e):45===this._state?S(this,e):46===this._state?this._stateBeforeStyle4(e):47===this._state?j(this,e):48===this._state?q(this,e):49===this._state?E(this,e):50===this._state?this._stateAfterStyle4(e):17===this._state?this._stateInProcessingInstruction(e):53===this._state?this._stateInNamedEntity(e):22===this._state?h(this,e):51===this._state?C(this,e):23===this._state?d(this,e):24===this._state?p(this,e):29===this._state?this._stateAfterCdata1(e):30===this._state?this._stateAfterCdata2(e):25===this._state?f(this,e):26===this._state?m(this,e):27===this._state?this._stateBeforeCdata6(e):55===this._state?this._stateInHexEntity(e):54===this._state?this._stateInNumericEntity(e):52===this._state?P(this,e):this._cbs.onerror(Error("unknown _state"),this._state),this._index++}this._cleanup()},e.prototype.pause=function(){this._running=!1},e.prototype.resume=function(){this._running=!0,this._index<this._buffer.length&&this._parse(),this._ended&&this._finish()},e.prototype.end=function(e){this._ended&&this._cbs.onerror(Error(".end() after done!")),e&&this.write(e),this._ended=!0,this._running&&this._finish()},e.prototype._finish=function(){this._sectionStart<this._index&&this._handleTrailingData(),this._cbs.onend()},e.prototype._handleTrailingData=function(){var e=this._buffer.substr(this._sectionStart);28===this._state||29===this._state||30===this._state?this._cbs.oncdata(e):19===this._state||20===this._state||21===this._state?this._cbs.oncomment(e):53!==this._state||this._xmlMode?54!==this._state||this._xmlMode?55!==this._state||this._xmlMode?3!==this._state&&8!==this._state&&11!==this._state&&10!==this._state&&9!==this._state&&13!==this._state&&12!==this._state&&14!==this._state&&6!==this._state&&this._cbs.ontext(e):(this._decodeNumericEntity(3,16),this._sectionStart<this._index&&(this._state=this._baseState,this._handleTrailingData())):(this._decodeNumericEntity(2,10),this._sectionStart<this._index&&(this._state=this._baseState,this._handleTrailingData())):(this._parseLegacyEntity(),this._sectionStart<this._index&&(this._state=this._baseState,this._handleTrailingData()))},e.prototype.getAbsoluteIndex=function(){return this._bufferOffset+this._index},e.prototype._getSection=function(){return this._buffer.substring(this._sectionStart,this._index)},e.prototype._emitToken=function(e){this._cbs[e](this._getSection()),this._sectionStart=-1},e.prototype._emitPartial=function(e){1!==this._baseState?this._cbs.onattribdata(e):this._cbs.ontext(e)},e}();t.default=O},b91Z:function(e,t){e.exports=function(e,t){for(var n=0,o=t.length,r=[];n<o;)e(t[n])&&(r[r.length]=t[n]),n+=1;return r}},bY2E:function(e,t,n){"use strict";var o=n("RsFJ"),r=n("obXZ"),i=n("IPAr"),a=n("CRs9");e.exports=l,l.locator=a;var s="*",c="_";function l(e,t,n){var a,l,u,h,d,p,f,m=0,g=t.charAt(m);if((g===s||g===c)&&(l=this.options.pedantic,d=g,u=g,p=t.length,m++,h="",g="",!l||!i(t.charAt(m))))for(;m<p;){if(f=g,(g=t.charAt(m))===u&&(!l||!i(f))){if((g=t.charAt(++m))!==u){if(!o(h)||f===u)return;if(!l&&u===c&&r(g)){h+=u;continue}return!!n||((a=e.now()).column++,a.offset++,e(d+h+u)({type:"emphasis",children:this.tokenizeInline(h,a)}))}h+=u}l||"\\"!==g||(h+=g,g=t.charAt(++m)),h+=g,m++}}},cBNe:function(e,t,n){"use strict";var o=n("ZkSf");function r(e){delete e.position}function i(e){e.position=void 0}e.exports=function(e,t){return o(e,t?r:i),e}},cHMM:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var r=o(n("JQSS"));t.default=function(e){if(e>=55296&&e<=57343||e>1114111)return"\ufffd";e in r.default&&(e=r.default[e]);var t="";return e>65535&&(e-=65536,t+=String.fromCharCode(e>>>10&1023|55296),e=56320|1023&e),t+=String.fromCharCode(e)}},cOqj:function(e,t,n){var o=n("ABxe");e.exports=function(e){return function t(n){return 0===arguments.length||o(n)?t:e.apply(this,arguments)}}},cVWj:function(e,t,n){"use strict";var o=n("ZkSf"),r="virtualHtml",i=/^<(area|base|br|col|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)\s*\/?>$/i,a=/^<(\/?)([a-z]+)\s*>$/;e.exports=function(e){var t,n;return o(e,"html",(function(e,o,s){n!==s&&(t=[],n=s);var c=function(e){var t=e.value.match(i);return!!t&&t[1]}(e);if(c)return s.children.splice(o,1,{type:r,tag:c,position:e.position}),!0;var l=function(e,t){var n=e.value.match(a);return!!n&&{tag:n[2],opening:!n[1],node:e}}(e);if(!l)return!0;var u=function(e,t){var n=e.length;for(;n--;)if(e[n].tag===t)return e.splice(n,1)[0];return!1}(t,l.tag);return u?s.children.splice(o,0,function(e,t,n){var o=n.children.indexOf(e.node),i=n.children.indexOf(t.node),a=n.children.splice(o,i-o+1).slice(1,-1);return{type:r,children:a,tag:e.tag,position:{start:e.node.position.start,end:t.node.position.end,indent:[]}}}(l,u,s)):l.opening||t.push(l),!0}),!0),e}},czxZ:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n("MSw7");function r(e,t,n,i){for(var a=[],s=0;s<t.length;s++){var c=t[s];if(e(c)&&(a.push(c),--i<=0))break;if(n&&o.hasChildren(c)&&c.children.length>0){var l=r(e,c.children,n,i);if(a=a.concat(l),(i-=l.length)<=0)break}}return a}t.filter=function(e,t,n,o){return void 0===n&&(n=!0),void 0===o&&(o=1/0),Array.isArray(t)||(t=[t]),r(e,t,n,o)},t.find=r,t.findOneChild=function(e,t){for(var n=0;n<t.length;n++)if(e(t[n]))return t[n];return null},t.findOne=function e(t,n,r){void 0===r&&(r=!0);for(var i=null,a=0;a<n.length&&!i;a++){var s=n[a];o.isTag(s)&&(t(s)?i=s:r&&s.children.length>0&&(i=e(t,s.children)))}return i},t.existsOne=function e(t,n){for(var r=0;r<n.length;r++){var i=n[r];if(o.isTag(i)&&(t(i)||i.children.length>0&&e(t,i.children)))return!0}return!1},t.findAll=function(e,t){for(var n=[],r=t.slice();r.length;){var i=r.shift();i&&o.isTag(i)&&(i.children&&i.children.length>0&&r.unshift.apply(r,i.children),e(i)&&n.push(i))}return n}},dE4g:function(e,t,n){"use strict";var o=n("5cLd"),r=n("WHpZ"),i=n("SK8o"),a=n("q1tI"),s=n("tZmH");e.exports={createElement:function(e,t,n,c){var l={key:t};e.attribs&&(l=i((function(e,t){var n=t[0],r=t[1];return"style"===(n=s[n.replace(/[-:]/,"")]||n)?r=function(e){for(var t,n,r,i=(e=e||"").split(/;(?!base64)/),a={},s=0;s<i.length;++s)(t=i[s].split(":")).length>2&&(t[1]=t.slice(1).join(":")),n=t[0],"string"===typeof(r=t[1])&&(r=r.trim()),null!=n&&null!=r&&n.length>0&&r.length>0&&(a[o(n)]=r);return a}(r):"class"===n?n="className":"for"===n&&(n="htmlFor"),e[n]=r||n,e}),l,r(e.attribs))),c=c||[];var u=null!=n?[n].concat(c):c;return a.createElement.apply(null,[e.name,l].concat(u))}}},"ec/5":function(e,t,n){"use strict";var o=n("IPAr"),r=n("kaWx");e.exports=f,f.notInList=!0,f.notInBlock=!0;var i="\\",a="\n",s="\t",c=" ",l="[",u="]",h="^",d=":",p=/^( {4}|\t)?/gm;function f(e,t,n){var f,m,g,y,b,w,v,k,x,_,A,T,S=this.offset;if(this.options.footnotes){for(f=0,m=t.length,g="",y=e.now(),b=y.line;f<m&&(x=t.charAt(f),o(x));)g+=x,f++;if(t.charAt(f)===l&&t.charAt(f+1)===h){for(f=(g+=l+h).length,v="";f<m&&(x=t.charAt(f))!==u;)x===i&&(v+=x,f++,x=t.charAt(f)),v+=x,f++;if(v&&t.charAt(f)===u&&t.charAt(f+1)===d){if(n)return!0;for(_=r(v),f=(g+=v+u+d).length;f<m&&((x=t.charAt(f))===s||x===c);)g+=x,f++;for(y.column+=g.length,y.offset+=g.length,v="",w="",k="";f<m;){if((x=t.charAt(f))===a){for(k=x,f++;f<m&&(x=t.charAt(f))===a;)k+=x,f++;for(v+=k,k="";f<m&&(x=t.charAt(f))===c;)k+=x,f++;if(0===k.length)break;v+=k}v&&(w+=v,v=""),w+=x,f++}return g+=w,w=w.replace(p,(function(e){return S[b]=(S[b]||0)+e.length,b++,""})),A=e(g),T=this.enterBlock(),w=this.tokenizeBlock(w,y),T(),A({type:"footnoteDefinition",identifier:_,children:w})}}}}},ejln:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeElement=function(e){if(e.prev&&(e.prev.next=e.next),e.next&&(e.next.prev=e.prev),e.parent){var t=e.parent.children;t.splice(t.lastIndexOf(e),1)}},t.replaceElement=function(e,t){var n=t.prev=e.prev;n&&(n.next=t);var o=t.next=e.next;o&&(o.prev=t);var r=t.parent=e.parent;if(r){var i=r.children;i[i.lastIndexOf(e)]=t}},t.appendChild=function(e,t){if(t.parent=e,1!==e.children.push(t)){var n=e.children[e.children.length-2];n.next=t,t.prev=n,t.next=null}},t.append=function(e,t){var n=e.parent,o=e.next;if(t.next=o,t.prev=e,e.next=t,t.parent=n,o){if(o.prev=t,n){var r=n.children;r.splice(r.lastIndexOf(o),0,t)}}else n&&n.children.push(t)},t.prepend=function(e,t){var n=e.parent;if(n){var o=n.children;o.splice(o.lastIndexOf(e),0,t)}e.prev&&(e.prev.next=t),t.parent=n,t.prev=e.prev,t.next=e,e.prev=t}},fUUT:function(e,t,n){"use strict";var o=n("5t69"),r=n("U6jy"),i=n("fduw");function a(e){var t=o(i);t.prototype.options=r(t.prototype.options,this.data("settings"),e),this.Parser=t}e.exports=a,a.Parser=i},fduw:function(e,t,n){"use strict";var o=n("U6jy"),r=n("4MqD"),i=n("7nPM"),a=n("EQPF"),s=n("Olrm"),c=n("A6mZ");function l(e,t){this.file=t,this.offset={},this.options=o(this.options),this.setOptions({}),this.inList=!1,this.inBlock=!1,this.inLink=!1,this.atStart=!0,this.toOffset=i(t).toOffset,this.unescape=a(this,"escape"),this.decode=s(this)}e.exports=l;var u=l.prototype;function h(e){var t,n=[];for(t in e)n.push(t);return n}u.setOptions=n("nLKB"),u.parse=n("zK1H"),u.options=n("0lR2"),u.exitStart=r("atStart",!0),u.enterList=r("inList",!1),u.enterLink=r("inLink",!1),u.enterBlock=r("inBlock",!1),u.interruptParagraph=[["thematicBreak"],["atxHeading"],["fencedCode"],["blockquote"],["html"],["setextHeading",{commonmark:!1}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],u.interruptList=[["atxHeading",{pedantic:!1}],["fencedCode",{pedantic:!1}],["thematicBreak",{pedantic:!1}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],u.interruptBlockquote=[["indentedCode",{commonmark:!0}],["fencedCode",{commonmark:!0}],["atxHeading",{commonmark:!0}],["setextHeading",{commonmark:!0}],["thematicBreak",{commonmark:!0}],["html",{commonmark:!0}],["list",{commonmark:!0}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],u.blockTokenizers={newline:n("Eidx"),indentedCode:n("K2KW"),fencedCode:n("Gqj6"),blockquote:n("PIlL"),atxHeading:n("MHMH"),thematicBreak:n("pyet"),list:n("tGWH"),setextHeading:n("NS2H"),html:n("ZJXm"),footnote:n("ec/5"),definition:n("HRR4"),table:n("ujgL"),paragraph:n("RSXs")},u.inlineTokenizers={escape:n("tgay"),autoLink:n("2yk8"),url:n("UBI6"),html:n("VRSw"),link:n("jWrk"),reference:n("wCsn"),strong:n("KX5q"),emphasis:n("bY2E"),deletion:n("UIh7"),code:n("JlFY"),break:n("497W"),text:n("SbiQ")},u.blockMethods=h(u.blockTokenizers),u.inlineMethods=h(u.inlineTokenizers),u.tokenizeBlock=c("block"),u.tokenizeInline=c("inline"),u.tokenizeFactory=c},fjrl:function(e,t,n){"use strict";e.exports=function(e){var t="string"===typeof e?e.charCodeAt(0):e;return t>=97&&t<=102||t>=65&&t<=70||t>=48&&t<=57}},frcp:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nActionhero uses the **[Winston logger](https://github.com/flatiron/winston)**. This allows for better, more customizable logging. With one simple `log` command provided by Actionhero, you can log to files, the console, and more!\n\n## Levels\n\n```ts\nimport { log } from \'actionhero\'\n\nlog("hello"); // will use the default, \'info\' level\nlog("debug message", "debug"); // will not show up unless you have configured your logger in this NODE_ENV to be debug\nlog("OH NO", "emerg"); // will show up in all logger levels\nlog("the params were", "info", data.params); // you can log objects too\n```\n\nNote that you can set a `level` which indicates which level (and those above it) you wish to log per transport. The log levels are:\n\n- 0=debug\n- 1=info\n- 2=notice\n- 3=warning\n- 4=error\n- 5=crit\n- 6=alert\n- 7=emerg\n\nYou can customize these via `config.logger.levels` and `config.logger.colors`. See [Winston\'s documentation for more information](https://github.com/winstonjs/winston#using-custom-logging-levels)\n\nFor example, if you set the logger\'s level to "notice", you would also see "crit" messages, but not "debug" messages.\n\nTo invoke the logger from your code, use: `log(message, severity, metadata)`. Learn more [here](api.html#.log)\n\n## Defaults\n\n```ts\nconst winston = require("winston");\n\n// learn more about winston v3 loggers @\n// - https://github.com/winstonjs/winston\n// - https://github.com/winstonjs/winston/blob/master/docs/transports.md\n\nfunction buildConsoleLogger(level = "info") {\n  return function(config) {\n    return winston.createLogger({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.colorize(),\n        winston.format.printf(info => {\n          return `${config.process.id} @ ${info.timestamp} - ${info.level}: ${\n            info.message\n          } ${stringifyExtraMessagePropertiesForConsole(info)}`;\n        })\n      ),\n      level,\n      levels: winston.config.syslog.levels,\n      transports: [new winston.transports.Console()]\n    });\n  };\n}\n\nfunction stringifyExtraMessagePropertiesForConsole(info) {\n  const skippedProperties = ["message", "timestamp", "level"];\n  let response = "";\n\n  for (const key in info) {\n    const value = info[key];\n    if (skippedProperties.includes(key)) {\n      continue;\n    }\n    if (value === undefined || value === null || value === "") {\n      continue;\n    }\n    response += `${key}=${value} `;\n  }\n\n  return response;\n}\n\nfunction buildFileLogger(\n  path,\n  level = "info",\n  maxFiles = undefined,\n  maxsize = 20480\n) {\n  return function(config) {\n    const filename = `${path}/${config.process.id}-${config.process.env}.log`;\n\n    return winston.createLogger({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.json()\n      ),\n      level,\n      levels: winston.config.syslog.levels,\n      transports: [\n        new winston.transports.File({\n          filename,\n          maxsize,\n          maxFiles\n        })\n      ]\n    });\n  };\n}\n\nexport const DEFAULT = {\n  logger: config => {\n    const loggers = [];\n    loggers.push(buildConsoleLogger());\n    config.general.paths.log.forEach(p => {\n      loggers.push(buildFileLogger(p));\n    });\n\n    return {\n      loggers,\n\n      // the maximum length of param to log (we will truncate)\n      maxLogStringLength: 100\n    };\n  }\n};\n\nexport const test = {\n  logger: config => {\n    const loggers = [];\n\n    config.general.paths.log.forEach(p => {\n      loggers.push(buildFileLogger(p, "debug", 1));\n    });\n\n    return {\n      loggers\n    };\n  }\n};\n```\n\nIn your `config/logger.js`, you can customize which `transports` you would like the logger to use. If none are provided, a default logger which only will print to stdout will be used. See winston\'s documentation for all the logger types, but know that they include console, file, s3, Riak, and more.\n\nYou can set a transport directly, IE `new (winston.transports.Console)()` or in a function which will be passed the `api` object like the examples above. The benefit of using the function invocation is you will have access to other methods and configuration options (like the title of the process).\n'},gCkb:function(e){e.exports=JSON.parse('{"elementNames":{"altglyph":"altGlyph","altglyphdef":"altGlyphDef","altglyphitem":"altGlyphItem","animatecolor":"animateColor","animatemotion":"animateMotion","animatetransform":"animateTransform","clippath":"clipPath","feblend":"feBlend","fecolormatrix":"feColorMatrix","fecomponenttransfer":"feComponentTransfer","fecomposite":"feComposite","feconvolvematrix":"feConvolveMatrix","fediffuselighting":"feDiffuseLighting","fedisplacementmap":"feDisplacementMap","fedistantlight":"feDistantLight","fedropshadow":"feDropShadow","feflood":"feFlood","fefunca":"feFuncA","fefuncb":"feFuncB","fefuncg":"feFuncG","fefuncr":"feFuncR","fegaussianblur":"feGaussianBlur","feimage":"feImage","femerge":"feMerge","femergenode":"feMergeNode","femorphology":"feMorphology","feoffset":"feOffset","fepointlight":"fePointLight","fespecularlighting":"feSpecularLighting","fespotlight":"feSpotLight","fetile":"feTile","feturbulence":"feTurbulence","foreignobject":"foreignObject","glyphref":"glyphRef","lineargradient":"linearGradient","radialgradient":"radialGradient","textpath":"textPath"},"attributeNames":{"definitionurl":"definitionURL","attributename":"attributeName","attributetype":"attributeType","basefrequency":"baseFrequency","baseprofile":"baseProfile","calcmode":"calcMode","clippathunits":"clipPathUnits","diffuseconstant":"diffuseConstant","edgemode":"edgeMode","filterunits":"filterUnits","glyphref":"glyphRef","gradienttransform":"gradientTransform","gradientunits":"gradientUnits","kernelmatrix":"kernelMatrix","kernelunitlength":"kernelUnitLength","keypoints":"keyPoints","keysplines":"keySplines","keytimes":"keyTimes","lengthadjust":"lengthAdjust","limitingconeangle":"limitingConeAngle","markerheight":"markerHeight","markerunits":"markerUnits","markerwidth":"markerWidth","maskcontentunits":"maskContentUnits","maskunits":"maskUnits","numoctaves":"numOctaves","pathlength":"pathLength","patterncontentunits":"patternContentUnits","patterntransform":"patternTransform","patternunits":"patternUnits","pointsatx":"pointsAtX","pointsaty":"pointsAtY","pointsatz":"pointsAtZ","preservealpha":"preserveAlpha","preserveaspectratio":"preserveAspectRatio","primitiveunits":"primitiveUnits","refx":"refX","refy":"refY","repeatcount":"repeatCount","repeatdur":"repeatDur","requiredextensions":"requiredExtensions","requiredfeatures":"requiredFeatures","specularconstant":"specularConstant","specularexponent":"specularExponent","spreadmethod":"spreadMethod","startoffset":"startOffset","stddeviation":"stdDeviation","stitchtiles":"stitchTiles","surfacescale":"surfaceScale","systemlanguage":"systemLanguage","tablevalues":"tableValues","targetx":"targetX","targety":"targetY","textlength":"textLength","viewbox":"viewBox","viewtarget":"viewTarget","xchannelselector":"xChannelSelector","ychannelselector":"yChannelSelector","zoomandpan":"zoomAndPan"}}')},gaEX:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e){this._func=e}return e.prototype.onattribute=function(e,t){this._func("onattribute",e,t)},e.prototype.oncdatastart=function(){this._func("oncdatastart")},e.prototype.oncdataend=function(){this._func("oncdataend")},e.prototype.ontext=function(e){this._func("ontext",e)},e.prototype.onprocessinginstruction=function(e,t){this._func("onprocessinginstruction",e,t)},e.prototype.oncomment=function(e){this._func("oncomment",e)},e.prototype.oncommentend=function(){this._func("oncommentend")},e.prototype.onclosetag=function(e){this._func("onclosetag",e)},e.prototype.onopentag=function(e,t){this._func("onopentag",e,t)},e.prototype.onopentagname=function(e){this._func("onopentagname",e)},e.prototype.onerror=function(e){this._func("onerror",e)},e.prototype.onend=function(){this._func("onend")},e.prototype.onparserinit=function(e){this._func("onparserinit",e)},e.prototype.onreset=function(){this._func("onreset")},e}();t.default=o},h9ck:function(e,t,n){"use strict";t.HtmlParser="undefined"===typeof Symbol?"__RMD_HTML_PARSER__":Symbol("__RMD_HTML_PARSER__")},hOtR:function(e,t){e.exports=Array.isArray||function(e){return null!=e&&e.length>=0&&"[object Array]"===Object.prototype.toString.call(e)}},hS6j:function(e,t,n){"use strict";function o(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var i=n("WASD");t.Parser=i.Parser;var a=n("8j/7");t.DomHandler=a.DomHandler,t.DefaultHandler=a.DomHandler,t.parseDOM=function(e,t){var n=new a.DomHandler(void 0,t);return new i.Parser(n,t).end(e),n.dom},t.createDomStream=function(e,t,n){var o=new a.DomHandler(e,t,n);return new i.Parser(o,t)};var s=n("b70m");t.Tokenizer=s.default;var c=r(n("77Jp"));t.ElementType=c,t.EVENTS={attribute:2,cdatastart:0,cdataend:0,text:1,processinginstruction:2,comment:1,commentend:0,closetag:1,opentag:2,opentagname:1,error:1,end:0},o(n("Uwf0")),o(n(0)),o(n("0fF6"));var l=r(n("vSXm"));t.DomUtils=l;var u=n("Uwf0");t.RssHandler=u.FeedHandler},iRFk:function(e,t,n){e.exports=n("+5j6")},ibbH:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n("oW49"),r=n("BRr/");t.decode=function(e,t){return(!t||t<=0?o.decodeXML:o.decodeHTML)(e)},t.decodeStrict=function(e,t){return(!t||t<=0?o.decodeXML:o.decodeHTMLStrict)(e)},t.encode=function(e,t){return(!t||t<=0?r.encodeXML:r.encodeHTML)(e)};var i=n("BRr/");t.encodeXML=i.encodeXML,t.encodeHTML=i.encodeHTML,t.escape=i.escape,t.encodeHTML4=i.encodeHTML,t.encodeHTML5=i.encodeHTML;var a=n("oW49");t.decodeXML=a.decodeXML,t.decodeHTML=a.decodeHTML,t.decodeHTMLStrict=a.decodeHTMLStrict,t.decodeHTML4=a.decodeHTML,t.decodeHTML5=a.decodeHTML,t.decodeHTML4Strict=a.decodeHTMLStrict,t.decodeHTML5Strict=a.decodeHTMLStrict,t.decodeXMLStrict=a.decodeXML},jWrk:function(e,t,n){"use strict";var o=n("IPAr"),r=n("EmYC");e.exports=g,g.locator=r;var i={}.hasOwnProperty,a="\\",s="[",c="]",l="(",u=")",h="<",d=">",p="`",f={'"':'"',"'":"'"},m={};function g(e,t,n){var r,g,y,b,w,v,k,x,_,A,T,S,j,q,E,C,P,O,I,N="",R=0,L=t.charAt(0),H=this.options.pedantic,D=this.options.commonmark,M=this.options.gfm;if("!"===L&&(_=!0,N=L,L=t.charAt(++R)),L===s&&(_||!this.inLink)){for(N+=L,E="",R++,S=t.length,q=0,(P=e.now()).column+=R,P.offset+=R;R<S;){if(v=L=t.charAt(R),L===p){for(g=1;t.charAt(R+1)===p;)v+=L,R++,g++;y?g>=y&&(y=0):y=g}else if(L===a)R++,v+=t.charAt(R);else if(y&&!M||L!==s){if((!y||M)&&L===c){if(!q){if(!H)for(;R<S&&(L=t.charAt(R+1),o(L));)v+=L,R++;if(t.charAt(R+1)!==l)return;v+=l,r=!0,R++;break}q--}}else q++;E+=v,v="",R++}if(r){for(A=E,N+=E+v,R++;R<S&&(L=t.charAt(R),o(L));)N+=L,R++;if(L=t.charAt(R),x=D?m:f,E="",b=N,L===h){for(R++,b+=h;R<S&&(L=t.charAt(R))!==d;){if(D&&"\n"===L)return;E+=L,R++}if(t.charAt(R)!==d)return;N+=h+E+d,C=E,R++}else{for(L=null,v="";R<S&&(L=t.charAt(R),!v||!i.call(x,L));){if(o(L)){if(!H)break;v+=L}else{if(L===l)q++;else if(L===u){if(0===q)break;q--}E+=v,v="",L===a&&(E+=a,L=t.charAt(++R)),E+=L}R++}C=E,R=(N+=E).length}for(E="";R<S&&(L=t.charAt(R),o(L));)E+=L,R++;if(L=t.charAt(R),N+=E,E&&i.call(x,L))if(R++,N+=L,E="",T=x[L],w=N,D){for(;R<S&&(L=t.charAt(R))!==T;)L===a&&(E+=a,L=t.charAt(++R)),R++,E+=L;if((L=t.charAt(R))!==T)return;for(j=E,N+=E+L,R++;R<S&&(L=t.charAt(R),o(L));)N+=L,R++}else for(v="";R<S;){if((L=t.charAt(R))===T)k&&(E+=T+v,v=""),k=!0;else if(k){if(L===u){N+=E+T+v,j=E;break}o(L)?v+=L:(E+=T+v+L,v="",k=!1)}else E+=L;R++}if(t.charAt(R)===u)return!!n||(N+=u,C=this.decode.raw(this.unescape(C),e(b).test().end,{nonTerminated:!1}),j&&(w=e(w).test().end,j=this.decode.raw(this.unescape(j),w)),I={type:_?"image":"link",title:j||null,url:C},_?I.alt=this.decode.raw(this.unescape(A),P)||null:(O=this.enterLink(),I.children=this.tokenizeInline(A,P),O()),e(N)(I))}}}m['"']='"',m["'"]="'",m[l]=u},kaWx:function(e,t,n){"use strict";var o=n("JqBK");e.exports=function(e){return o(e).toLowerCase()}},kc8F:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nIn Actionhero we have introduced a modular server system which allows you to create your own servers. Servers should be thought of as any type of listener to remote connections, streams, or event your server.\n\nIn Actionhero, the goal of each server is to ingest a specific type of connection and transform each client into a generic `connection` object which can be operated on by the rest of Actionhero. To help with this, all servers extend `Actionhero.Server` and fill in the required methods.\n\nTo get started, you can use the `actionhero generate server --name=myServer`. This will generate a template server which looks like the below.\n\nLike initializers, the `start()` and `stop()` methods will be called when the server is to boot up in Actionhero\'s lifecycle, but before any clients are permitted into the system. Here is where you should actually initialize your server (IE: `https.createServer.listen`, etc).\n\n```ts\nimport { Server } from "actionhero";\n\nmodule.exports = class MyServer extends Server {\n  constructor() {\n    super();\n    this.type = "my-server";\n\n    this.attributes = {\n      canChat: false,\n      logConnections: true,\n      logExits: true,\n      sendWelcomeMessage: false,\n      verbs: []\n    };\n    // this.config will be set to equal config.servers[this.type]\n  }\n\n  initialize() {\n    this.on("connection", connection => {});\n\n    this.on("actionComplete", data => {});\n  }\n\n  start() {\n    // this.buildConnection (data)\n    // this.processAction (connection)\n    // this.processFile (connection)\n  }\n\n  stop() {}\n\n  sendMessage(connection, message, messageId) {}\n\n  sendFile(connection, error, fileStream, mime, length, lastModified) {}\n\n  goodbye(connection) {}\n};\n```\n\n## Designing Servers\n\nYour job, as a server designer, is to coerce every client\'s connection into a connection object. This is done with the `sever.buildConnection` helper. Here is an example from the `web` server:\n\n```ts\nserver.buildConnection({\n  rawConnection: {\n    req: req,\n    res: res,\n    method: method,\n    cookies: cookies,\n    responseHeaders: responseHeaders,\n    responseHttpCode: responseHttpCode,\n    parsedURL: parsedURL\n  },\n  id: randomNumber(),\n  remoteAddress: remoteIP,\n  remotePort: req.connection.remotePort\n}); // will emit "connection"\n\n// Note that connections will have a \\`rawConnection\\` property.  This is where you should store the actual object(s) returned by your server so that you can use them to communicate back with the client.  Again, an example from the \\`web\\` server:\n\nserver.sendMessage = (connection, message) => {\n  cleanHeaders(connection);\n  const headers = connection.rawConnection.responseHeaders;\n  const responseHttpCode = parseInt(connection.rawConnection.responseHttpCode);\n  const stringResponse = String(message);\n  connection.rawConnection.res.writeHead(responseHttpCode, headers);\n  connection.rawConnection.res.end(stringResponse);\n  server.destroyConnection(connection);\n};\n```\n\n## Options and Attributes\n\nA server defines `attributes` which define it\'s behavior. Variables like `canChat` are defined here. `options` are passed in, and come from `api.config.servers[serverName]`. These can be new variables (like https?) or they can also overwrite the set `attributes`.\nThe required attributes are provided in a generated server.\n\n## Verbs\n\n```ts\nallowedVerbs: [\n  "quit",\n  "exit",\n  "paramAdd",\n  "paramDelete",\n  "paramView",\n  "paramsView",\n  "paramsDelete",\n  "roomChange",\n  "roomView",\n  "listenToRoom",\n  "silenceRoom",\n  "detailsView",\n  "say"\n];\n```\n\nWhen an incoming message is detected, it is the server\'s job to build `connection.params`. In the `web` server, this is accomplished by reading GET, POST, and form data. For `websocket` clients, that information is expected to be emitted as part of the action\'s request. For other clients, like `socket`, Actionhero provides helpers for long-lasting clients to operate on themselves. These are called connection `verbs`.\n\nClients use verbs to add params to themselves, update the chat room they are in, and more. The list of verbs currently supported is listed above.\n\nYour server should be smart enough to tell when a client is trying to run an action, request a file, or use a verb. One of the attributes of each server is `allowedVerbs`, which defines what verbs a client is allowed to preform. A simplified example of how the `socket` server does this:\n\n```ts\nasync parseRequest (connection, line) {\n  let words = line.split(\' \')\n  let verb = words.shift()\n\n  if (verb === \'file\') {\n    if (words.length > 0) { connection.params.file = words[0] }\n    return this.processFile(connection)\n  }\n\n  if (this.attributes.verbs.indexOf(verb) >= 0) {\n    try {\n      let data = await connection.verbs(verb, words)\n      return this.sendMessage(connection, {status: \'OK\', context: \'response\', data: data})\n    } catch (error) {\n      return this.sendMessage(connection, {error: error, context: \'response\'})\n    }\n  }\n\n  try {\n    let requestHash = JSON.parse(line)\n    if (requestHash.params !== undefined) {\n      connection.params = {}\n      for (let v in requestHash.params) {\n        connection.params[v] = requestHash.params[v]\n      }\n    }\n    if (requestHash.action) {\n      connection.params.action = requestHash.action\n    }\n  } catch (e) {\n    connection.params.action = verb\n  }\n  connection.error = null\n  connection.response = {}\n  return this.processAction(connection)\n}\n```\n\n## Chat\n\nThe `attribute` "canChat" defines if clients of this server can chat. If clients can chat, they should be allowed to use verbs like "roomChange" and "say". They will also be sent messages in their room (and rooms they are listening too) automatically.\n\n## Sending Responses\n\nAll servers need to implement the `server.sendMessage = function(connection, message, messageId)` method so Actionhero knows how to talk to each client. This is likely to make use of `connection.rawConnection`. If you are writing a server for a persistent connection, it is likely you will need to respond with `messageId` so that the client knows which request your response is about (as they are not always going to get the responses in order).\n\n## Sending Files\n\nServers can optionally implement the `server.sendFile = function(connection, error, fileStream, mime, length)` method. This method is responsible for any connection-specific file transport (headers, chinking, encoding, etc). Note that fileStream is a `stream` which should be `pipe`\'d to the client.\n\n## Customizing Servers\n\n```ts\n//Initializer\n module.exports = {\n   startPriority: 1000,\n   start: function (api, next) {\n     let webServer = api.servers.servers.web\n     webServer.connectionCustomMethods = webServer.connectionCustomMethods || {}\n     webServer.connectionCustomMethods.requestHeaders = function (connection) {\n       return connection.rawConnection.req.headers\n     }\n   }\n }\n\n //Action\n module.exports = {\n   name: \'logHeaders\',\n   description \'Log Web Request Headers\',\n   run: function (api, data, next) {\n     let headers = data.connection.requestHeaders()\n     api.log(\'Headers:\', \'debug\', headers)\n     next()\n   }\n }\n```\n\nThe `connection` object passed to a server can be customized on a per server basis through the use of the `server.connectionCustomMethods` hash. The hash can be populated with functions whose signature must match `function (connection, ...)`. Once populated, these functions are curried to always pass `connection` as the first argument and applied to the `data.connection` object passed to Actions, and can be accessed via `data.connection.functionName(...)` within the action or middleware.\n\nIn this way, you can create custom methods on your connections.\n'},l7q6:function(e,t,n){var o=n("cOqj"),r=n("hOtR"),i=n("F3Iy"),a=o((function(e){return!!r(e)||!!e&&("object"===typeof e&&(!i(e)&&(1===e.nodeType?!!e.length:0===e.length||e.length>0&&(e.hasOwnProperty(0)&&e.hasOwnProperty(e.length-1)))))}));e.exports=a},l7rt:function(e,t,n){var o=n("Av+g"),r=Object.prototype.toString,i=function(){return"[object Arguments]"===r.call(arguments)?function(e){return"[object Arguments]"===r.call(e)}:function(e){return o("callee",e)}}();e.exports=i},l9Wp:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nYou can create and include plugins for you Actionhero project. Plugins are collections of `tasks`, `actions`, `servers`, `initializers`, and `public` static assets that are collected as a module. You can install plugins via NPM or keep them in a local path. This enables a few useful features:\n\n- Sharing and re-using common code\n- Composing your application via namespaced plugins for simpler SOA development.\n\nPlugins are loaded after all local Actionhero project files, but initializers follow the same priority scheme as all other initializers.\n\n## Creating\n\n```bash\n/\n| - actions\n| - tasks\n| - servers\n| - initializers\n| - config\n| - public\n| - cli\n|\n| - package.json\n```\n\nTo create a plugin, create a project with the above structure via `actionhero generate plugin`. Note that `actionhero` should be a `peerDependency` within your plugin, with the proper version.\n\nThis structure will allow elements to be loaded into Actionhero (we search `/actions` for actions, `/tasks` for tasks, etc)\n\nWhen developing your plugin locally, you can load it into an existing Actionhero project to test it out.\n\nTo include your plugin in an Actionhero project, add it to `config/plugins.js`\n\n```js\n// If you want to use plugins in your application, include them here:\nreturn {\n  myPlugin: { path: __dirname + "/../node_modules/myPlugin" }\n};\n\n// You can also toggle on or off sections of a plugin to include (default true for all sections):\nreturn {\n  myPlugin: {\n    path: __dirname + "/../node_modules/myPlugin",\n    actions: true,\n    tasks: true,\n    initializers: true,\n    servers: true,\n    cli: true,\n    public: true\n  }\n};\n```\n\n**Please use the npm naming convention `ah-(name)-plugin` when uploading your plugin to npm**\n\n## Testing\n\nThis new plugin structure also makes testing plugins much easier, as you can boot up an Actionhero server from within your plugin (if `actionhero` is a devDependency) with the following:\n\n```js\nconst path = require("path");\nprocess.env.PROJECT_ROOT = path.join(\n  __dirname,\n  "..",\n  "node_modules",\n  "actionhero"\n);\n\nconst actionhero = require("actionhero");\nconst Actionhero = new actionhero.Process();\nlet api;\n\ndescribe("My Plugin", () => {\n  before(async () => {\n    let configChanges = {\n      plugins: {\n        testPlugin: { path: path.join(__dirname, "..") }\n      }\n    };\n\n    api = await Actionhero.start({ configChanges });\n  });\n\n  after(async () => {\n    await Actionhero.stop();\n  });\n\n  it("does stuff", async () => {\n    //...\n  });\n});\n```\n\n## Methods\n\nWhen creating plugins, you may find yourself wanting to do things which could normally be accomplished easily with a "top level" Actionhero project, but might be difficult from within a plugin. Here are some helpers:\n\n### Routes:\n\n- `api.routes.registerRoute(method, path, action, apiVersion, matchTrailingPathParts)`\n  - Add a route to the system.\n\n## Published\n\nYou can view a list of plugins maintained by at [www.actionherojs.com/plugins](https://www.actionherojs.com/plugins)\n'},m2n9:function(e){e.exports=JSON.parse('{"AElig":"\xc6","AMP":"&","Aacute":"\xc1","Acirc":"\xc2","Agrave":"\xc0","Aring":"\xc5","Atilde":"\xc3","Auml":"\xc4","COPY":"\xa9","Ccedil":"\xc7","ETH":"\xd0","Eacute":"\xc9","Ecirc":"\xca","Egrave":"\xc8","Euml":"\xcb","GT":">","Iacute":"\xcd","Icirc":"\xce","Igrave":"\xcc","Iuml":"\xcf","LT":"<","Ntilde":"\xd1","Oacute":"\xd3","Ocirc":"\xd4","Ograve":"\xd2","Oslash":"\xd8","Otilde":"\xd5","Ouml":"\xd6","QUOT":"\\"","REG":"\xae","THORN":"\xde","Uacute":"\xda","Ucirc":"\xdb","Ugrave":"\xd9","Uuml":"\xdc","Yacute":"\xdd","aacute":"\xe1","acirc":"\xe2","acute":"\xb4","aelig":"\xe6","agrave":"\xe0","amp":"&","aring":"\xe5","atilde":"\xe3","auml":"\xe4","brvbar":"\xa6","ccedil":"\xe7","cedil":"\xb8","cent":"\xa2","copy":"\xa9","curren":"\xa4","deg":"\xb0","divide":"\xf7","eacute":"\xe9","ecirc":"\xea","egrave":"\xe8","eth":"\xf0","euml":"\xeb","frac12":"\xbd","frac14":"\xbc","frac34":"\xbe","gt":">","iacute":"\xed","icirc":"\xee","iexcl":"\xa1","igrave":"\xec","iquest":"\xbf","iuml":"\xef","laquo":"\xab","lt":"<","macr":"\xaf","micro":"\xb5","middot":"\xb7","nbsp":"\xa0","not":"\xac","ntilde":"\xf1","oacute":"\xf3","ocirc":"\xf4","ograve":"\xf2","ordf":"\xaa","ordm":"\xba","oslash":"\xf8","otilde":"\xf5","ouml":"\xf6","para":"\xb6","plusmn":"\xb1","pound":"\xa3","quot":"\\"","raquo":"\xbb","reg":"\xae","sect":"\xa7","shy":"\xad","sup1":"\xb9","sup2":"\xb2","sup3":"\xb3","szlig":"\xdf","thorn":"\xfe","times":"\xd7","uacute":"\xfa","ucirc":"\xfb","ugrave":"\xf9","uml":"\xa8","uuml":"\xfc","yacute":"\xfd","yen":"\xa5","yuml":"\xff"}')},"ml/Y":function(e,t,n){"use strict";n.r(t),t.default="## Overview\n\n```bash\n> curl localhost:8080/simple.html -v\n\n*   Trying ::1..\n* connect to ::1 port 8080 failed: Connection refused\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 8080\n> GET /simple.html HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.43.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Last-Modified: Fri Jun 12 2015 02:51:29 GMT-0700 (PDT)\n< Cache-Control: max-age=60, must-revalidate, public\n< Expires: Sun, 15 Nov 2015 02:07:46 GMT\n< Content-Type: text/html\n< Access-Control-Allow-Headers: Content-Type\n< Access-Control-Allow-Methods: HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE\n< Access-Control-Allow-Origin: *\n< X-Powered-By: Actionhero API\n< Set-Cookie: sessionID=d4453f54ff066a2ef078e5c80f18dc78a81f44ff;path=/;expires=Sun, 15 Nov 2015 03:06:46 GMT;\n< Content-Length: 101\n< Date: Sun, 15 Nov 2015 02:06:46 GMT\n< Connection: keep-alive\n<\n* Connection #0 to host localhost left intact\n\n<h1>Actionhero</h1>\\nI am a flat file being served to you via the API from ./public/simple.html<br />\n```\n\nActionhero comes with a file server which clients can make use of to request files from the Actionhero server. Actionhero is not meant to be a 'rendering' server, but can serve static files.\n\nIf a directory is requested rather than a file, Actionhero will look for the file in that directory defined by `config.commonWeb.directoryFileType` (which defaults to `index.html`). Failing to find this file, an error will be returned defined in `config.general.flatFileIndexPageNotFoundMessage`\n\nYou can use the `await staticFile.get(connection)` in your actions (where the response object contains `error`, `fileStream`, `mime`, and `length`). Note that fileStream is a stream which can be pipe'd to a client. You can use this in actions if you wish.\n\nOn unix/OSX operating systems, symlinks for both files and folders will be followed.\n\n## Web Clients\n\n- `Cache-Control` and `Expires` or respectively `ETag` headers (depending on configuration) will be sent with it's caching or revalidation time defined by `api.config.servers.web.flatFileCacheDuration`\n- Content-Types for files will attempt to be determined using the [mime package](https://npmjs.org/package/mime)\n- Web clients may request `connection.params.file` directly within an action which makes use of `api.sendFile`, or if they are under the `api.config.servers.web.urlPathForFiles` route, the file will be looked up as if the route matches the directory structure under `flatFileDirectory`.\n\n## Non-web Clients\n\n- the param `file` should be used to request a path\n- `file.content`'s data is sent `raw`, and is likely to contain binary content and line breaks. Parse your responses accordingly!\n\n## Files From Actions\n\n```ts\n// send a file\nasync run (data) {\n  data.connection.sendFile('/path/to/file.mp3')\n  data.toRender = false\n}\n\n// send 404 (web connection)\nasync run (data) {\n  data.connection.rawConnection.responseHttpCode = 404;\n  data.connection.sendFile('404.html')\n  data.toRender = false\n}\n```\n\nYou can send files from within actions using `connection.sendFile()`.\n\nNote that you can optionally modify responseCodes (for HTTP clients only). Be sure to set `toRender = false` in the callback, as you have already sent data to the client, and probably don't want to do so again on a file request. If you try to `sendFile` on a path that doesn't exist (within your public directory), the 404 header will be handled automatically for you.\n\n## File Locations\n\nActionhero will check all paths defined by `api.config.general.paths.public` for files, in the order they are specified via that option, then check any public paths of your [plugins](/tutorials/plugins).\n"},my8H:function(e,t,n){"use strict";e.exports=function(e){var t,n=0,r=0,i=e.charAt(n),a={};for(;i in o;)t=o[i],r+=t,t>1&&(r=Math.floor(r/t)*t),a[r]=n,i=e.charAt(++n);return{indent:r,stops:a}};var o={" ":1,"\t":4}},n3PV:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\n**_AKA: Running Actionhero in a Cluster_**\n\nActionhero can be run either as a solitary server or as part of a cluster. You can add or remove nodes from the cluster without fear of data loss or task duplication.\n\n## Cache\n\nUsing a [redis](http://redis.io) backend, Actionhero nodes share memory objects (using the `cache`) and have a common queue for tasks. This means that all peers will have access to all data stored in the cache. The task system also becomes a common queue which all peers will work on draining. There should be no changes required to deploy your application in a cluster.\n\nKeep in mind that many clients/server can access a cached value simultaneously, so build your actions carefully not to have conflicting state. You can [learn more about the cache methods here](/tutorials/cache). You can also [review recommendations about Production Redis configurations](/tutorials/production-notes).\n\n## RPC\n\nIn version 9.0.0, Actionhero introduced Remote Procedure Calls, or RPC for short. You can call an RPC method to be executed on all nodes in your cluster or just a node which holds a specific connection. You can call RPC methods with the `redis.doCluster` method. If you provide the optional callback, you will get the first response back (or a timeout error). RPC calls are invoked with `redis.doCluster(method, args, connectionId, waitForResponse)`.\n\nFor example, if you wanted all nodes to log a message, you would do: `redis.doCluster(\'api.log\', ["hello from " + api.id])`\n\nIf you wanted the node which holds connection `abc123` to change their `authorized` status (perhaps because your room authentication relies on this), you would do:\n\n```js\n// This will ask all nodes connected to the cluster if they have connection #\\`abc123\\`\n//   and if they do, run \\`connection.set(\'auth\', true)\\` on it\nawait connections.apply("abc123", "set", ["auth", true]);\n```\n\nThe RPC system is used heavily by Chat.\n\nTwo options have been added to the `config/redis.js` config file to support this: `config.general.channel` ( Which channel to use on redis pub/sub for RPC communication ) and `config.general.rpcTimeout` ( How long to wait for an RPC call before considering it a failure )\n\n**WARNING**\n\nRPC calls are authenticated against `config.serverToken` and communication happens over redis pub/sub. BE CAREFUL, as you can call _any_ method within the API namespace on an Actionhero server, including shutdown() and read _any_ data on that node.\n\n## Connections\n\nSome special RPC tools have been added so that you can interact with connections across multiple nodes. Specifically the chat sub-system needs to be able to boot and move connections into rooms, regardless of which node they are connected to.\n\nActionhero has exposed `connections.apply` which can be used to retrieve data about and modify a connection on any node.\n\n**`connections.apply(connectionId, method, args)`**\n\n- [Learn More](api.connections.html)\n- connectionId is required\n- Both `method` and `args` can be ignored if you just want to retrieve information about a connection, IE: `const connectionDetails = await api.connections.apply(connectionId)`\n\n## PubSub\n\n```js\nimport { redis } from "actionhero";\n\n// To subscribe to messages, add a callback for your \\`messageType\\`, IE:\nredis.subscriptionHandlers["myMessageType"] = function(message) {\n  // do stuff\n};\n\n// send a message\nconst payload = {\n  messageType: "myMessageType",\n  serverId: api.id,\n  serverToken: api.config.general.serverToken,\n  message: "hello!"\n};\n\nawait api.redis.publish(payload);\n```\n\nActionhero also uses redis to allow for pub/sub communication between nodes.\n\nYou can broadcast and receive messages from other peers in the cluster:\n\n**`redis.publish(payload)`**\n\n- [Learn More](api.redis.html)\n- payload must contain:\n  - `messageType` : the name of your payload type,\n  - `serverId` : `api.id`,\n  - `serverToken` : `api.config.general.serverToken`,\n'},nLKB:function(e,t,n){"use strict";var o=n("U6jy"),r=n("MQ5/"),i=n("0lR2");e.exports=function(e){var t,n,a=this.options;if(null==e)e={};else{if("object"!==typeof e)throw new Error("Invalid value `"+e+"` for setting `options`");e=o(e)}for(t in i){if(null==(n=e[t])&&(n=a[t]),"blocks"!==t&&"boolean"!==typeof n||"blocks"===t&&"object"!==typeof n)throw new Error("Invalid value `"+n+"` for setting `options."+t+"`");e[t]=n}return this.options=e,this.escape=r(e),this}},nc5S:function(e,t,n){"use strict";e.exports=s;var o=n("Zasy"),r=!0,i="skip",a=!1;function s(e,t,n,r){var s;function l(e,o,u){var h,d=[];return(t&&!s(e,o,u[u.length-1]||null)||(d=c(n(e,u)))[0]!==a)&&e.children&&d[0]!==i&&(h=c(function(e,t){var n,o=r?-1:1,i=(r?e.length:-1)+o;for(;i>-1&&i<e.length;){if((n=l(e[i],i,t))[0]===a)return n;i="number"===typeof n[1]?n[1]:i+o}}(e.children,u.concat(e))))[0]===a?h:d}"function"===typeof t&&"function"!==typeof n&&(r=n,n=t,t=null),s=o(t),l(e,null,[])}function c(e){return null!==e&&"object"===typeof e&&"length"in e?e:"number"===typeof e?[r,e]:[e]}s.CONTINUE=r,s.SKIP=i,s.EXIT=a},nyAU:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n("czxZ"),r=n("MSw7");function i(e){return"text"===e.type}var a={tag_name:function(e){return"function"===typeof e?function(t){return r.isTag(t)&&e(t.name)}:"*"===e?r.isTag:function(t){return r.isTag(t)&&t.name===e}},tag_type:function(e){return"function"===typeof e?function(t){return e(t.type)}:function(t){return t.type===e}},tag_contains:function(e){return"function"===typeof e?function(t){return i(t)&&e(t.data)}:function(t){return i(t)&&t.data===e}}};function s(e,t){return"function"===typeof t?function(n){return r.isTag(n)&&t(n.attribs[e])}:function(n){return r.isTag(n)&&n.attribs[e]===t}}function c(e,t){return function(n){return e(n)||t(n)}}function l(e){var t=Object.keys(e).map((function(t){var n=e[t];return t in a?a[t](n):s(t,n)}));return 0===t.length?null:t.reduce(c)}t.testElement=function(e,t){var n=l(e);return!n||n(t)},t.getElements=function(e,t,n,r){void 0===r&&(r=1/0);var i=l(e);return i?o.filter(i,t,n,r):[]},t.getElementById=function(e,t,n){return void 0===n&&(n=!0),Array.isArray(t)||(t=[t]),o.findOne(s("id",e),t,n)},t.getElementsByTagName=function(e,t,n,r){return void 0===r&&(r=1/0),o.filter(a.tag_name(e),t,n,r)},t.getElementsByTagType=function(e,t,n,r){return void 0===n&&(n=!0),void 0===r&&(r=1/0),o.filter(a.tag_type(e),t,n,r)}},oW49:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var r=o(n("xWCP")),i=o(n("uWBR")),a=o(n("9fJ0")),s=o(n("cHMM"));function c(e){var t=Object.keys(e).join("|"),n=u(e),o=new RegExp("&(?:"+(t+="|#[xX][\\da-fA-F]+|#\\d+")+");","g");return function(e){return String(e).replace(o,n)}}t.decodeXML=c(a.default),t.decodeHTMLStrict=c(r.default);var l=function(e,t){return e<t?1:-1};function u(e){return function(t){return"#"===t.charAt(1)?"X"===t.charAt(2)||"x"===t.charAt(2)?s.default(parseInt(t.substr(3),16)):s.default(parseInt(t.substr(2),10)):e[t.slice(1,-1)]}}t.decodeHTML=function(){for(var e=Object.keys(i.default).sort(l),t=Object.keys(r.default).sort(l),n=0,o=0;n<t.length;n++)e[o]===t[n]?(t[n]+=";?",o++):t[n]+=";";var a=new RegExp("&(?:"+t.join("|")+"|#[xX][\\da-fA-F]+;?|#\\d+;?)","g"),s=u(r.default);function c(e){return";"!==e.substr(-1)&&(e+=";"),s(e)}return function(e){return String(e).replace(a,c)}}()},obXZ:function(e,t,n){"use strict";e.exports=function(e){return r.test("number"===typeof e?o(e):e.charAt(0))};var o=String.fromCharCode,r=/\w/},ouk7:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nThere are 4 types of middleware in Actionhero:\n\n- **Action**\n- **Connection**\n- **Chat**\n- **Task**\n\nEach type of middleware is distinct from the others, and operates on distinct parts of a client\'s lifecycle. For a logical example, please inspect the following connection lifecycle:\n\n```bash\n> Client **Connects**\n# connection middleware, \\`create\\` hook\n\n> Client requests an **action**\n# action middleware, \\`preProcessor\\` hook\n# action middleware, \\`postProcessor\\` hook\n\n> Client **joins a room**\n# chat middleware, \\`join\\` hook\n\n> Client **says a message** in a room\n# chat middleware, \\`say\\` hook\n# chat middleware, \\`onSayReceive\\` hook\n\n> Client requests a **disconnect** (quit)\n# chat middleware, \\`leave\\` hook\n# connection middleware, \\`destroy\\` hook\n\n> Client executes a **task**\n# task middleware, \\`preProcessor\\` hook\n# task middleware, \\`postProcessor\\` hook\n```\n\n## Action Middleware\n\n![/static/images/tutorials/connection_flow_actions.png](/static/images/tutorials/connection_flow_actions.png)\n\n```ts\nimport { action } from "actionhero";\n\nconst middleware = {\n  name: "userId checker",\n  global: false,\n  priority: 1000,\n  preProcessor: data => {\n    if (!data.params.userId) {\n      throw new Error("All actions require a userId");\n    }\n  },\n  postProcessor: data => {\n    if (data.thing.stuff == false) {\n      data.toRender = false;\n    }\n  }\n};\n\naction.addMiddleware(middleware);\n```\n\nactionhero provides hooks for you to execute custom code both before and after the execution of all or some actions. This is a great place to write authentication logic or custom loggers.\n\nAction middleware requires a `name` and at least one of `preProcessor` or `postProcessor`. Middleware can be `global`, or you can choose to apply each middleware to an action specifically via `action.middleware = []` in the action\'s definition. You supply a list of middleware names, like `action.middleware = [\'userId checker\']` in the example above.\n\nEach processor is passed `data`. Just like within actions, you can modify the `data` object to add to `data.response` to create a response to the client. If an error is thrown, the action will not execute, and `data.response.error` will contain the error. If a `preProcessor` has an error, the action will never be called.\n\nThe priority of a middleware orders it with all other middleware which might fire for an action. All global middleware happen before locally defined middleware on an action. Lower numbers happen first. If you do not provide a priority, the default from `api.config.general.defaultProcessorPriority` will be used.\n\n### The Data Object\n\n`data` contains the same information as would be passed to an action:\n\n```ts\ndata = {\n  connection: {},\n  action: "randomNumber",\n  toRender: true,\n  messageId: 1,\n  params: { action: "randomNumber", apiVersion: 1 },\n  actionStartTime: 1429531553417,\n  actionTemplate: {}, // the actual object action definition\n  response: {},\n  session: {}\n};\n```\n\nIf your middleware wants to pass information about the connection to the action, place that data within the `session` object. For example, you might have a middleware that sets `session.user` for use in your actions:\n\n```ts\nimport { action } from "actionhero";\nimport { Team, TeamMember } from "./../models"; // defined in your project\n\nconst authenticatedUserMiddleware = {\n  name: "authenticated-team-member",\n  global: false,\n  priority: 1000,\n  preProcessor: async data => {\n    const sessionData = await api.session.load(data.connection);\n    if (!sessionData) {\n      throw new Error("Please log in to continue");\n    } else if (\n      !data.params.csrfToken ||\n      data.params.csrfToken !== sessionData.csrfToken\n    ) {\n      throw new Error("CSRF error");\n    } else {\n      const teamMember = await TeamMember.findOne({\n        where: { guid: sessionData.guid },\n        include: Team\n      });\n      data.session = { data: sessionData, teamMember };\n    }\n  }\n};\n\naction.addMiddleware(authenticatedUserMiddleware);\n```\n\n## Connection Middleware\n\n```ts\nimport { log, connection } from "actionhero";\n\nconst connectionMiddleware = {\n  name: "connection middleware",\n  priority: 1000,\n  create: async connection => {\n    log("connection joined");\n  },\n  destroy: async connection => {\n    log("connection left");\n  }\n};\n\nconnection.addMiddleware(connectionMiddleware);\n```\n\nLike the action middleware above, you can also create middleware to react to the creation or destruction of all connections.\n\nKeep in mind that some connections persist (webSocket, socket) and some only exist for the duration of a single request (web). You will likely want to inspect `connection.type` in this middleware. Again, if you do not provide a priority, the default from `api.config.general.defaultMiddlewarePriority` will be used.\n\nAny modification made to the connection at this stage may happen either before or after an action, and may or may not persist to the connection depending on how the server is implemented.\n\n## Chat Middleware\n\n```ts\nimport { log, chatRoom, connection } from "actionhero";\n\nvar chatMiddleware = {\n  name: "chat middleware",\n  priority: 1000,\n  join: (connection, room) => {\n    // announce all connections entering a room\n    await chatRoom.broadcast(\n      {},\n      room,\n      "I have joined the room: " + connection.id\n    );\n  },\n  leave: (connection, room) => {\n    // announce all connections leaving a room\n    await chatRoom.broadcast(\n      {},\n      room,\n      "I have left the room: " + connection.id\n    );\n  },\n  /**\n   * Will be executed once per client connection before delivering the message.\n   */\n  say: (connection, room, messagePayload) => {\n    // do stuff\n    log(messagePayload);\n    messagePayload.cool = true;\n    return messagePayload;\n  },\n  /**\n   * Will be executed only once, when the message is sent to the server.\n   */\n  onSayReceive: function(connection, room, messagePayload) {\n    // do stuff\n    log(messagePayload);\n    messagePayload.receivedAt = new Date().getTime();\n    return messagePayload;\n  }\n};\n\nchatRoom.addMiddleware(chatMiddleware);\n```\n\nThe last type of middleware is used to act when a connection joins, leaves, or communicates within a chat room. We have 4 types of middleware for each step: `say`, `onSayReceive`, `join`, and `leave`.\n\nPriority is optional in all cases, but can be used to order your middleware. If an error is returned thrown any of these methods, it will be returned to the client, and the action/verb/message will not be sent.\n\nMore detail and nuance on chat middleware can be found in the [chat tutorial](tutorial-chat.html)\n\n### Chat Middleware Notes\n\n- In the example above, I want to announce the member joining the room, but he has not yet been added to the room, as the join logic is still firing. If the connection itself were to make the broadcast, it would fail because the connection is not in the room. Instead, an empty `{}` connection is used to proxy the message coming from the \'server\'.\n- Only the `sayCallbacks` return `messagePayload`. This allows you to modify the message being sent to your clients.\n  - `messagePayload` will be modified and and passed on to all middleware inline, so you can append and modify it as you go\n- If you have a number of callbacks (`say`, `onSayReceive`, `join` or `leave`), the priority maters, and you can block subsequent methods from firing by throwing an error.\n- `sayCallbacks` are executed once per client connection. This makes it suitable for customizing the message based on the individual client.\n- `onSayReceiveCallbacks` are executed only once, when the message is sent to the server.\n\n```ts\nimport {chatRoom, connection} from \'actionhero\';\n\n// in this example no one will be able to join any room, and the \\`say\\` middleware will never be invoked.\nchatRoom.addMiddleware({\n  name: \'blocking chat middleware\',\n  join: (connection, room) => {\n    throw new Error(\'blocked from joining the room\')\n  }),\n\n  say: (connection, room, messagePayload) => {\n    chatRoom.broadcast({}, room, \'I have entered the room: \' + connection.id)\n  },\n});\n```\n\nIf a `say` is blocked via an error thrown, the message will simply not be delivered to the client. If a `join` or `leave` is blocked, the verb or method used to invoke the call will be returned that error.\n\n## Task Request Flow\n\n![/static/images/tutorials/connection_flow_tasks.png](/static/images/tutorials/connection_flow_tasks.png)\n\n## Task Middleware\n\nTask middleware is implemented as a thin wrapper around Node Resque plugins and currently exposes the `beforePerform`, `afterPerform`, `beforeEnqueue`, and `afterEnqueue` functions of Resque. Each middleware requires a `name` and at least one `function`. In addition, a middleware can be global, in which case it also requires a `priority`.\n\nIn the `preProcessor`, you can access the original task `params` through `this.args[0]`. In the `postProcessor`, you can access the task result at `this.worker.result`. In the `preEnqueue` and `postEnqueue` you can access the task `params` through `this.args[0]`. If you wish to prevent a task from being enqueued using the `preEnqueue` middleware you must explicitly set the `toRun` value to `false` in the callback. Because the task middleware is executed by Resque `this` is an instance of a Resque Worker and contains a number of other elements which may be useful in a middleware.\n\n### Task Middleware Example\n\nThe following example is a simplistic implementation of a task execution timer middleware.\n\n```ts\nimport {task, log, Initializer} from \'actionhero\';\n\nexport class taskMiddleware extends Initializer {\n  constructor () {\n    super()\n    this.name = \'task middleware\'\n  }\n\n  initialize: () => {\n    const middleware = {\n      name: \'timer\',\n      global: true,\n      priority: 90,\n\n      preProcessor: async function () {\n        const worker = this.worker\n        worker.startTime = process.hrtime()\n      },\n\n      postProcessor: async function () {\n        const worker = this.worker\n        const elapsed = process.hrtime(worker.startTime)\n        const seconds = elapsed[0]\n        const millis = elapsed[1] / 1000000\n        log(worker.job.class + \' done in \' + seconds + \' s and \' + millis + \' ms.\', \'info\')\n      },\n\n      preEnqueue: async function () {\n        const arg = this.args[0]\n        return true // returning `false` will prevent the task from enqueuing\n      },\n\n      postEnqueue: async function () {\n        api.log("Task successfully enqueued!")\n      }\n    }\n\n    task.addMiddleware(middleware)\n  }\n}\n```\n'},pY7V:function(e,t,n){var o=n("Wnyi"),r=n("rJtk"),i=function(){function e(e,t){this.xf=t,this.f=e}return e.prototype["@@transducer/init"]=r.init,e.prototype["@@transducer/result"]=r.result,e.prototype["@@transducer/step"]=function(e,t){return this.xf["@@transducer/step"](e,this.f(t))},e}(),a=o((function(e,t){return new i(e,t)}));e.exports=a},pyet:function(e,t,n){"use strict";e.exports=function(e,t,n){var u,h,d,p,f=-1,m=t.length+1,g="";for(;++f<m&&((u=t.charAt(f))===r||u===i);)g+=u;if(u!==a&&u!==c&&u!==s)return;h=u,g+=u,d=1,p="";for(;++f<m;)if((u=t.charAt(f))===h)d++,g+=p+h,p="";else{if(u!==i)return d>=l&&(!u||u===o)?(g+=p,!!n||e(g)({type:"thematicBreak"})):void 0;p+=u}};var o="\n",r="\t",i=" ",a="*",s="_",c="-",l=3},r8KN:function(e,t,n){var o=n("ALMR"),r=n("ABxe");e.exports=function e(t,n,i){return function(){for(var a=[],s=0,c=t,l=0;l<n.length||s<arguments.length;){var u;l<n.length&&(!r(n[l])||s>=arguments.length)?u=n[l]:(u=arguments[s],s+=1),a[l]=u,r(u)||(c-=1),l+=1}return c<=0?i.apply(this,a):o(c,e(t,a,i))}}},rJtk:function(e,t){e.exports={init:function(){return this.xf["@@transducer/init"]()},result:function(e){return this.xf["@@transducer/result"](e)}}},s2PV:function(e,t,n){var o=n("0+iT"),r=n("cOqj"),i=n("ZOtD"),a=r((function(e){return i(e.length,(function(){var t=0,n=arguments[0],r=arguments[arguments.length-1],i=Array.prototype.slice.call(arguments,0);return i[0]=function(){var e=n.apply(this,o(arguments,[t,r]));return t+=1,e},e.apply(this,i)}))}));e.exports=a},spUR:function(e,t,n){"use strict";var o=n("q1tI"),r=n("U6jy"),i=n("ZkSf"),a=n("JLNj"),s=n("h9ck"),c="parsedHtml",l=/^<(area|base|br|col|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)\s*\/?>$/i,u=/^<([a-z]+)\b/i,h=/^<\/([a-z]+)\s*>$/,d=new a.Parser,p={isValidNode:function(e){return"script"!==e.type},processingInstructions:[{shouldProcessNode:function(){return!0},processNode:new a.ProcessNodeDefinitions(o).processDefaultNode}]};function f(e,t,n){var r,a;return i(t,"html",(function(t,i,s){if(n.escapeHtml)return s.children.splice(i,1,{type:"text",position:t.position,value:t.value}),!0;if(n.skipHtml)return s.children.splice(i,1),!0;a!==s&&(r=[],a=s);var p=function(e){var t=e.value.match(l);return!!t&&t[1]}(t);if(p)return s.children.splice(i,1,{type:"virtualHtml",tag:p,position:t.position}),!0;var f=function(e,t){var n=e.value.trim().match(h);if(n)return{tag:n[1],opening:!1,node:e};var r=d.parseWithInstructions(e.value,t.isValidNode,t.processingInstructions);if(!r)return!1;var i=o.Children.count(r)>1,a=!i&&l.test("<".concat(r.type,">"));if(i||a)return{type:c,position:e.position,node:r};var s=e.value.trim().match(u);return{tag:s?s[1]:r.type,opening:!0,node:e,element:r}}(t,e);if(!f||f.type===c)return!0;var m=function(e,t){var n=e.length;for(;n--;)if(e[n].tag===t)return e.splice(n,1)[0];return!1}(r,f.tag);return m?s.children.splice(i,0,function(e,t,n){var o=n.children.indexOf(e.node),r=n.children.indexOf(t.node),i=n.children.splice(o,r-o+1).slice(1,-1);return{type:c,children:i,tag:e.tag,element:e.element,value:e.node.value,position:{start:e.node.position.start,end:t.node.position.end,indent:[]}}}(f,m,s)):f.opening||r.push(f),!0}),!0),i(t,"html",(function(t,n,o){var r=d.parseWithInstructions(t.value,e.isValidNode,e.processingInstructions);return r?(o.children.splice(n,1,{type:c,element:r,value:t.value,position:t.position}),!0):(o.children.splice(n,1),!0)})),t}e.exports=function(e,t){if(t&&("undefined"!==typeof e.source||"undefined"!==typeof e.children))throw new Error("react-markdown: `html-parser` must be called before use - see https://github.com/rexxars/react-markdown#parsing-html");var n=r(p,e||{}),o=f.bind(null,n);return o.identity=s.HtmlParser,o}},t3JB:function(e,t){e.exports=function(e){return function(){return!e.apply(this,arguments)}}},"t75/":function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nAllow Actionhero developers to create new files in `./bin` which can be run via the CLI. These commands will have access to a the Actionhero `api` and CLI arguments object within a `run` method.\n\nYou can create namespaces for commands by using folders. For example, a file in `./bin/redis/keys` would be run via `npx Actionhero redis keys`\n\n```ts\nimport { api, log, CLI } from "actionhero";\n\nexport class RedisKeys extends CLI {\n  constructor() {\n    super();\n    this.name = "redis keys";\n    this.description = "I list all the keys in redis";\n    this.example = "actionhero keys --prefix actionhero";\n  }\n\n  inputs() {\n    return {\n      prefix: {\n        required: true,\n        default: "actionhero",\n        note: "the redis prefix for searching keys"\n      }\n    };\n  }\n\n  async run({ params }) {\n    let keys = await api.redis.clients.client.keys(params.prefix);\n    log("Found " + keys.length + "keys:");\n    keys.forEach(k => {\n      log(k);\n    });\n  }\n}\n```\n\n## Syntax\n\nactionhero CLI commands have:\n\n- name\n- description\n- example\n\nInputs for CLI commands have:\n\n- required (true/false)\n- default (string only)\n- note\n\nThese are sourced automatically by `actionhero help`, and the example above would return:\n\n```bash\n* redis keys\n  description: I list all the keys in redis\n  example: actionhero keys --prefix actionhero\n  inputs:\n    [prefix] (optional)\n      note: the redis prefix for searching keys\n      default: actionhero\n```\n'},tGWH:function(e,t,n){"use strict";var o=n("RsFJ"),r=n("RjOF"),i=n("ZONP"),a=n("my8H"),s=n("Zpkj"),c=n("KJAg");e.exports=function(e,t,n){var r,a,s,m,y,b,w,v,k,S,j,q,E,C,P,O,I,N,R,L,H,D,M,z,U=this.options.commonmark,F=this.options.pedantic,B=this.blockTokenizers,W=this.interruptList,V=0,Y=t.length,G=null,J=0;for(;V<Y;){if((m=t.charAt(V))===f)J+=g-J%g;else{if(m!==d)break;J++}V++}if(J>=g)return;if(m=t.charAt(V),r=U?A:_,!0===x[m])y=m,s=!1;else{for(s=!0,a="";V<Y&&(m=t.charAt(V),i(m));)a+=m,V++;if(m=t.charAt(V),!a||!0!==r[m])return;G=parseInt(a,10),y=m}if((m=t.charAt(++V))!==d&&m!==f)return;if(n)return!0;V=0,C=[],P=[],O=[];for(;V<Y;){for(b=t.indexOf(p,V),w=V,v=!1,z=!1,-1===b&&(b=Y),M=V+g,J=0;V<Y;){if((m=t.charAt(V))===f)J+=g-J%g;else{if(m!==d)break;J++}V++}if(J>=g&&(z=!0),I&&J>=I.indent&&(z=!0),m=t.charAt(V),k=null,!z){if(!0===x[m])k=m,V++,J++;else{for(a="";V<Y&&(m=t.charAt(V),i(m));)a+=m,V++;m=t.charAt(V),V++,a&&!0===r[m]&&(k=m,J+=a.length+1)}if(k)if((m=t.charAt(V))===f)J+=g-J%g,V++;else if(m===d){for(M=V+g;V<M&&t.charAt(V)===d;)V++,J++;V===M&&t.charAt(V)===d&&(V-=g-1,J-=g-1)}else m!==p&&""!==m&&(k=null)}if(k){if(!F&&y!==k)break;v=!0}else U||z||t.charAt(w)!==d?U&&I&&(z=J>=I.indent||J>g):z=!0,v=!1,V=w;if(j=t.slice(w,b),S=w===V?j:t.slice(V,b),(k===l||k===u||k===h)&&B.thematicBreak.call(this,e,j,!0))break;if(q=E,E=!o(S).length,z&&I)I.value=I.value.concat(O,j),P=P.concat(O,j),O=[];else if(v)0!==O.length&&(I.value.push(""),I.trail=O.concat()),I={value:[j],indent:J,trail:[]},C.push(I),P=P.concat(O,j),O=[];else if(E){if(q)break;O.push(j)}else{if(q)break;if(c(W,B,this,[e,j,!0]))break;I.value=I.value.concat(O,j),P=P.concat(O,j),O=[]}V=b+1}H=e(P.join(p)).reset({type:"list",ordered:s,start:G,loose:null,children:[]}),N=this.enterList(),R=this.enterBlock(),L=!1,V=-1,Y=C.length;for(;++V<Y;)I=C[V].value.join(p),D=e.now(),(I=e(I)(T(this,I,D),H)).loose&&(L=!0),I=C[V].trail.join(p),V!==Y-1&&(I+=p),e(I);return N(),R(),H.loose=L,H};var l="*",u="_",h="-",d=" ",p="\n",f="\t",m="x",g=4,y=/\n\n(?!\s*$)/,b=/^\[([ \t]|x|X)][ \t]/,w=/^([ \t]*)([*+-]|\d+[.)])( {1,4}(?! )| |\t|$|(?=\n))([^\n]*)/,v=/^([ \t]*)([*+-]|\d+[.)])([ \t]+)/,k=/^( {1,4}|\t)?/gm,x={};x[l]=!0,x["+"]=!0,x[h]=!0;var _={".":!0},A={};function T(e,t,n){var o,r,i=e.offset,a=null;return t=(e.options.pedantic?S:j).apply(null,arguments),e.options.gfm&&(o=t.match(b))&&(r=o[0].length,a=o[1].toLowerCase()===m,i[n.line]+=r,t=t.slice(r)),{type:"listItem",loose:y.test(t)||t.charAt(t.length-1)===p,checked:a,children:e.tokenizeBlock(t,n)}}function S(e,t,n){var o=e.offset,r=n.line;return t=t.replace(v,i),r=n.line,t.replace(k,i);function i(e){return o[r]=(o[r]||0)+e.length,r++,""}}function j(e,t,n){var o,i,c,l,u,h,f,m=e.offset,g=n.line;for(l=(t=t.replace(w,(function(e,t,n,a,s){i=t+n+a,c=s,Number(n)<10&&i.length%2===1&&(n=d+n);return(o=t+r(d,n.length)+a)+c}))).split(p),(u=s(t,a(o).indent).split(p))[0]=c,m[g]=(m[g]||0)+i.length,g++,h=0,f=l.length;++h<f;)m[g]=(m[g]||0)+l[h].length-u[h].length,g++;return u.join(p)}A["."]=!0,A[")"]=!0},tZmH:function(e,t,n){"use strict";var o=["accept","acceptCharset","accessKey","action","allowFullScreen","allowTransparency","alt","async","autoComplete","autoFocus","autoPlay","capture","cellPadding","cellSpacing","challenge","charSet","checked","cite","classID","className","colSpan","cols","content","contentEditable","contextMenu","controls","coords","crossOrigin","data","dateTime","default","defer","dir","disabled","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","icon","id","inputMode","integrity","is","keyParams","keyType","kind","label","lang","list","loop","low","manifest","marginHeight","marginWidth","max","maxLength","media","mediaGroup","method","min","minLength","multiple","muted","name","noValidate","nonce","open","optimum","pattern","placeholder","poster","preload","profile","radioGroup","readOnly","rel","required","reversed","role","rowSpan","rows","sandbox","scope","scoped","scrolling","seamless","selected","shape","size","sizes","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","style","summary","tabIndex","target","title","type","useMap","value","width","wmode","wrap","onClick"].concat(["autoCapitalize","autoCorrect","color","itemProp","itemScope","itemType","itemRef","itemID","security","unselectable","results","autoSave"]).concat(["accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeName","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","begin","bias","by","calcMode","capHeight","clip","clipPath","clipPathUnits","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","cx","cy","d","decelerate","descent","diffuseConstant","direction","display","divisor","dominantBaseline","dur","dx","dy","edgeMode","elevation","enableBackground","end","exponent","externalResourcesRequired","fill","fillOpacity","fillRule","filter","filterRes","filterUnits","floodColor","floodOpacity","focusable","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","format","from","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerHeight","markerMid","markerStart","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mode","numOctaves","offset","opacity","operator","order","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","r","radius","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","restart","result","rotate","rx","ry","scale","seed","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","string","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeOpacity","strokeWidth","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textLength","textRendering","to","transform","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","values","vectorEffect","version","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","visibility","widths","wordSpacing","writingMode","x","x1","x2","xChannelSelector","xHeight","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlns","xmlnsXlink","xmlBase","xmlLang","xmlSpace","y","y1","y2","yChannelSelector","z","zoomAndPan"]).reduce((function(e,t){var n=t.toLowerCase();return n!==t&&(e[n]=t),e}),{});e.exports=o},tgay:function(e,t,n){"use strict";var o=n("NFD0");function r(e,t,n){var o,r;if("\\"===t.charAt(0)&&(o=t.charAt(1),-1!==this.escape.indexOf(o)))return!!n||(r="\n"===o?{type:"break"}:{type:"text",value:o},e("\\"+o)(r))}e.exports=r,r.locator=o},"u3i/":function(e,t,n){"use strict";var o=n("ZkSf");function r(e,t,n,o){if("remove"===o)n.children.splice(t,1);else if("unwrap"===o){var r=[t,1];e.children&&(r=r.concat(e.children)),Array.prototype.splice.apply(n.children,r)}}t.ofType=function(e,t){return function(t){return e.forEach((function(e){return o(t,e,n,!0)})),t};function n(e,n,o){o&&r(e,n,o,t)}},t.ifNotMatch=function(e,t){return function(e){return o(e,n,!0),e};function n(n,o,i){i&&!e(n,o,i)&&r(n,o,i,t)}}},uWBR:function(e){e.exports=JSON.parse('{"Aacute":"\xc1","aacute":"\xe1","Acirc":"\xc2","acirc":"\xe2","acute":"\xb4","AElig":"\xc6","aelig":"\xe6","Agrave":"\xc0","agrave":"\xe0","amp":"&","AMP":"&","Aring":"\xc5","aring":"\xe5","Atilde":"\xc3","atilde":"\xe3","Auml":"\xc4","auml":"\xe4","brvbar":"\xa6","Ccedil":"\xc7","ccedil":"\xe7","cedil":"\xb8","cent":"\xa2","copy":"\xa9","COPY":"\xa9","curren":"\xa4","deg":"\xb0","divide":"\xf7","Eacute":"\xc9","eacute":"\xe9","Ecirc":"\xca","ecirc":"\xea","Egrave":"\xc8","egrave":"\xe8","ETH":"\xd0","eth":"\xf0","Euml":"\xcb","euml":"\xeb","frac12":"\xbd","frac14":"\xbc","frac34":"\xbe","gt":">","GT":">","Iacute":"\xcd","iacute":"\xed","Icirc":"\xce","icirc":"\xee","iexcl":"\xa1","Igrave":"\xcc","igrave":"\xec","iquest":"\xbf","Iuml":"\xcf","iuml":"\xef","laquo":"\xab","lt":"<","LT":"<","macr":"\xaf","micro":"\xb5","middot":"\xb7","nbsp":"\xa0","not":"\xac","Ntilde":"\xd1","ntilde":"\xf1","Oacute":"\xd3","oacute":"\xf3","Ocirc":"\xd4","ocirc":"\xf4","Ograve":"\xd2","ograve":"\xf2","ordf":"\xaa","ordm":"\xba","Oslash":"\xd8","oslash":"\xf8","Otilde":"\xd5","otilde":"\xf5","Ouml":"\xd6","ouml":"\xf6","para":"\xb6","plusmn":"\xb1","pound":"\xa3","quot":"\\"","QUOT":"\\"","raquo":"\xbb","reg":"\xae","REG":"\xae","sect":"\xa7","shy":"\xad","sup1":"\xb9","sup2":"\xb2","sup3":"\xb3","szlig":"\xdf","THORN":"\xde","thorn":"\xfe","times":"\xd7","Uacute":"\xda","uacute":"\xfa","Ucirc":"\xdb","ucirc":"\xfb","Ugrave":"\xd9","ugrave":"\xf9","uml":"\xa8","Uuml":"\xdc","uuml":"\xfc","Yacute":"\xdd","yacute":"\xfd","yen":"\xa5","yuml":"\xff"}')},uWV0:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\nActionhero provides test helpers so that you may try your actions and tasks within a headless environment. We do this by including a `specHelper` initializer which creates a server, `testServer` when running within the test environment. Via the `testServer`, you can easily call actions or tasks without making a real request.\n\nWe have chosen [jest](https://facebook.github.io/jest) as our test framework which is included as dependencies within all new projects generated with `actionhero generate`. You do not need to use these testing tools, but an example will be provided which makes use of them.\n\nYou also don\'t need to use these test helpers, and you may want to make a real http or websocket request to test something specific. If this is the case, you can [check out how Actionhero tests its own servers](https://github.com/actionhero/actionhero/tree/master/test/servers) for examples.\n\n## Getting Started\n\n```js\n// package.json from a new actionhero project with \\`jest\\`included\n{\n  "author": "YOU <YOU@example.com>",\n  "name": "my_actionhero_project",\n  "description": "my actionhero project",\n  "version": "0.1.0",\n  "engines": {\n    "node": ">=8.0.0"\n  },\n  "dependencies": {\n    "actionhero": "^21.0.6",\n    "ioredis": "latest",\n    "winston": "latest",\n    "ws": "latest"\n  },\n  "devDependencies": {\n    "@types/node": "latest",\n    "@types/jest": "latest",\n    "jest": "latest",\n    "prettier": "latest",\n    "ts-jest": "latest",\n    "ts-node-dev": "latest",\n    "typescript": "latest"\n  },\n  "scripts": {\n    "dev": "ts-node-dev --transpile-only src/server.ts",\n    "start": "node ./dist/server.js",\n    "actionhero": "actionhero",\n    "test": "jest",\n    "pretest": "npm run build && npm run lint",\n    "postinstall": "npm run build",\n    "build": "tsc --declaration",\n    "lint": "prettier --check src/*/** __test__/*/**",\n    "pretty": "prettier --write src/*/** __test__/*/**"\n  },\n  "jest": {\n    "testEnvironment": "node",\n    "transform": {\n      "^.+\\\\.ts?$": "ts-jest"\n    }\n  }\n}\n\n```\n\nTo run a jest test suite, you invoke the jest binary, `./node_modules/.bin/jest` or `npx jest`. This will tell jest to look in your `./__tests__` folder and run any tests that it can find. There are ways to change the test folder location, only run specific tests, change the reporting format and more which you can learn about on [Jest\'s website](https://facebook.github.io/jest). We assume that you have `jest` installed to your project by listing it in your `package.json`. If you used `Actionhero generate` to create your project, this should already be configured for you.\n\nThe majority of the time, you\'ll be testing actions and other methods you have written, so you\'ll need to "run" an Actionhero server as part of your test suite. Many times you\'ll want to have Actionhero behave in a slightly unique way while testing (perhaps connect to a special database, don\'t log, etc). To do this, you can change the behavior of the config files for the `test` environment. Here is how we tell Actionhero [not to write any logs when testing](https://github.com/Actionhero/Actionhero/blob/master/config/logger.js#L48-L54). Note the test-specific configuration overrides the defaults. Jest will automatically set `NODE_ENV=test` for you.\n\nActionhero comes with a `specHelper` to make it easier to test tasks and actions. This specHelper is a special [server](/docs/core/#servers) which can check things without needing to make an HTTP, websocket, etc request. If you need to check the true behavior of a server (perhaps how the router works for an HTTP request), you should make a real HTTP request in your test suite, using something like the [request](https://github.com/request/request) library ([example](https://github.com/Actionhero/Actionhero/blob/master/test/servers/web.js#L178-L184)).\n\n## Example Test\n\nSay you had an action that was supposed to respond with a `randomNumber`, and you wanted to write a test for it.\n\n```js\n// from __tests__/actions/randomNumber.ts\nimport { Process, specHelper } from "actionhero";\n\nconst Actionhero = new Process();\n\ndescribe("Action", () => {\n  describe("randomNumber", () => {\n    beforeAll(async () => {\n      await Actionhero.start();\n    });\n\n    afterAll(async () => {\n      await Actionhero.stop();\n    });\n\n    let firstNumber = null;\n\n    test("generates random numbers", async () => {\n      const { randomNumber } = await specHelper.runAction("randomNumber");\n      expect(randomNumber).toBeGreaterThan(0);\n      expect(randomNumber).toBeLessThan(1);\n      firstNumber = randomNumber;\n    });\n\n    test("is unique / random", async () => {\n      const { randomNumber } = await specHelper.runAction("randomNumber");\n      expect(randomNumber).toBeGreaterThan(0);\n      expect(randomNumber).toBeLessThan(1);\n      expect(randomNumber).not.toEqual(firstNumber);\n    });\n  });\n});\n```\n\nMore details on the specHelper methods [can be found here](https://docs.actionherojs.com/modules/spechelper.html). Methods include:\n\n- `buildConnection`\n- `findEnqueuedTasks`\n- `getStaticFile`\n- `runAction`\n- `runFullTask`\n- `runTask`\n- `deleteEnqueuedTasks`\n\nIf you want to see fuller example of how to create an integration test within Actionhero, please [check out the tutorial](https://github.com/actionhero/actionhero-tutorial#testing)\n'},ujgL:function(e,t,n){"use strict";var o=n("IPAr");e.exports=function(e,t,n){var b,w,v,k,x,_,A,T,S,j,q,E,C,P,O,I,N,R,L,H,D,M,z,U;if(!this.options.gfm)return;b=0,R=0,_=t.length+1,A=[];for(;b<_;){if(M=t.indexOf(u,b),z=t.indexOf(s,b+1),-1===M&&(M=t.length),-1===z||z>M){if(R<p)return;break}A.push(t.slice(b,M)),R++,b=M+1}k=A.join(u),w=A.splice(1,1)[0]||[],b=0,_=w.length,R--,v=!1,q=[];for(;b<_;){if((S=w.charAt(b))===s){if(j=null,!1===v){if(!1===U)return}else q.push(v),v=!1;U=!1}else if(S===a)j=!0,v=v||y;else if(S===c)v=v===f?m:j&&v===y?g:f;else if(!o(S))return;b++}!1!==v&&q.push(v);if(q.length<d)return;if(n)return!0;N=-1,H=[],D=e(k).reset({type:"table",align:q,children:H});for(;++N<R;){for(L=A[N],x={type:"tableRow",children:[]},N&&e(u),e(L).reset(x,D),_=L.length+1,b=0,T="",E="",C=!0,P=null,O=null;b<_;)if((S=L.charAt(b))!==h&&S!==l){if(""===S||S===s)if(C)e(S);else{if(S&&O){T+=S,b++;continue}!E&&!S||C||(k=E,T.length>1&&(S?(k+=T.slice(0,T.length-1),T=T.charAt(T.length-1)):(k+=T,T="")),I=e.now(),e(k)({type:"tableCell",children:this.tokenizeInline(E,I)},x)),e(T+S),T="",E=""}else if(T&&(E+=T,T=""),E+=S,S===r&&b!==_-2&&(E+=L.charAt(b+1),b++),S===i){for(P=1;L.charAt(b+1)===S;)E+=S,b++,P++;O?P>=O&&(O=0):O=P}C=!1,b++}else E?T+=S:e(S),b++;N||e(u+w)}return D};var r="\\",i="`",a="-",s="|",c=":",l=" ",u="\n",h="\t",d=1,p=2,f="left",m="center",g="right",y=null},us2i:function(e,t,n){"use strict";e.exports={shouldProcessEveryNode:function(e){return!0}}},uzq8:function(e,t,n){"use strict";e.exports=function(e,t,n){var o=[];"function"===typeof t&&(n=t,t=null);function r(e){var i;return t&&e.type!==t||(i=n(e,o.concat())),e.children&&!1!==i?function(e,t){var n,i=e.length,a=-1;o.push(t);for(;++a<i;)if((n=e[a])&&!1===r(n))return!1;return o.pop(),!0}(e.children,e):i}r(e)}},vSXm:function(e,t,n){"use strict";function o(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),o(n("aLRh")),o(n("JvmS")),o(n("ejln")),o(n("czxZ")),o(n("nyAU")),o(n("9n51")),o(n("MSw7"))},wCsn:function(e,t,n){"use strict";var o=n("IPAr"),r=n("EmYC"),i=n("kaWx");e.exports=g,g.locator=r;var a="link",s="image",c="footnote",l="shortcut",u="collapsed",h="full",d="^",p="\\",f="[",m="]";function g(e,t,n){var r,g,y,b,w,v,k,x,_=t.charAt(0),A=0,T=t.length,S="",j="",q=a,E=l;if("!"===_&&(q=s,j=_,_=t.charAt(++A)),_===f){if(A++,j+=_,v="",this.options.footnotes&&t.charAt(A)===d){if(q===s)return;j+=d,A++,q=c}for(x=0;A<T;){if((_=t.charAt(A))===f)k=!0,x++;else if(_===m){if(!x)break;x--}_===p&&(v+=p,_=t.charAt(++A)),v+=_,A++}if(S=v,r=v,(_=t.charAt(A))===m){for(A++,S+=_,v="";A<T&&(_=t.charAt(A),o(_));)v+=_,A++;if(_=t.charAt(A),q!==c&&_===f){for(g="",v+=_,A++;A<T&&(_=t.charAt(A))!==f&&_!==m;)_===p&&(g+=p,_=t.charAt(++A)),g+=_,A++;(_=t.charAt(A))===m?(E=g?h:u,v+=g+_,A++):g="",S+=v,v=""}else{if(!r)return;g=r}if(E===h||!k)return S=j+S,q===a&&this.inLink?null:!!n||(q===c&&-1!==r.indexOf(" ")?e(S)({type:"footnote",children:this.tokenizeInline(r,e.now())}):((y=e.now()).column+=j.length,y.offset+=j.length,b={type:q+"Reference",identifier:i(g=E===h?g:r)},q!==a&&q!==s||(b.referenceType=E),q===a?(w=this.enterLink(),b.children=this.tokenizeInline(r,y),w()):q===s&&(b.alt=this.decode.raw(this.unescape(r),y)||null),e(S)(b)))}}}},wQFJ:function(e,t,n){var o=n("l7q6"),r=n("LPBM"),i=n("8/j2");function a(e,t,n){for(var o=n.next();!o.done;){if((t=e["@@transducer/step"](t,o.value))&&t["@@transducer/reduced"]){t=t["@@transducer/value"];break}o=n.next()}return e["@@transducer/result"](t)}function s(e,t,n,o){return e["@@transducer/result"](n[o](i(e["@@transducer/step"],e),t))}var c="undefined"!==typeof Symbol?Symbol.iterator:"@@iterator";e.exports=function(e,t,n){if("function"===typeof e&&(e=r(e)),o(n))return function(e,t,n){for(var o=0,r=n.length;o<r;){if((t=e["@@transducer/step"](t,n[o]))&&t["@@transducer/reduced"]){t=t["@@transducer/value"];break}o+=1}return e["@@transducer/result"](t)}(e,t,n);if("function"===typeof n["fantasy-land/reduce"])return s(e,t,n,"fantasy-land/reduce");if(null!=n[c])return a(e,t,n[c]());if("function"===typeof n.next)return a(e,t,n);if("function"===typeof n.reduce)return s(e,t,n,"reduce");throw new TypeError("reduce: list must be array or iterable")}},wnOJ:function(e,t,n){var o=n("uzq8");e.exports=function(){return function(e){return o(e,"list",(function(e,t){var n,o,r=0;for(n=0,o=t.length;n<o;n++)"list"===t[n].type&&(r+=1);for(n=0,o=e.children.length;n<o;n++){var i=e.children[n];i.index=n,i.ordered=e.ordered}e.depth=r})),e}}},xWCP:function(e){e.exports=JSON.parse('{"Aacute":"\xc1","aacute":"\xe1","Abreve":"\u0102","abreve":"\u0103","ac":"\u223e","acd":"\u223f","acE":"\u223e\u0333","Acirc":"\xc2","acirc":"\xe2","acute":"\xb4","Acy":"\u0410","acy":"\u0430","AElig":"\xc6","aelig":"\xe6","af":"\u2061","Afr":"\ud835\udd04","afr":"\ud835\udd1e","Agrave":"\xc0","agrave":"\xe0","alefsym":"\u2135","aleph":"\u2135","Alpha":"\u0391","alpha":"\u03b1","Amacr":"\u0100","amacr":"\u0101","amalg":"\u2a3f","amp":"&","AMP":"&","andand":"\u2a55","And":"\u2a53","and":"\u2227","andd":"\u2a5c","andslope":"\u2a58","andv":"\u2a5a","ang":"\u2220","ange":"\u29a4","angle":"\u2220","angmsdaa":"\u29a8","angmsdab":"\u29a9","angmsdac":"\u29aa","angmsdad":"\u29ab","angmsdae":"\u29ac","angmsdaf":"\u29ad","angmsdag":"\u29ae","angmsdah":"\u29af","angmsd":"\u2221","angrt":"\u221f","angrtvb":"\u22be","angrtvbd":"\u299d","angsph":"\u2222","angst":"\xc5","angzarr":"\u237c","Aogon":"\u0104","aogon":"\u0105","Aopf":"\ud835\udd38","aopf":"\ud835\udd52","apacir":"\u2a6f","ap":"\u2248","apE":"\u2a70","ape":"\u224a","apid":"\u224b","apos":"\'","ApplyFunction":"\u2061","approx":"\u2248","approxeq":"\u224a","Aring":"\xc5","aring":"\xe5","Ascr":"\ud835\udc9c","ascr":"\ud835\udcb6","Assign":"\u2254","ast":"*","asymp":"\u2248","asympeq":"\u224d","Atilde":"\xc3","atilde":"\xe3","Auml":"\xc4","auml":"\xe4","awconint":"\u2233","awint":"\u2a11","backcong":"\u224c","backepsilon":"\u03f6","backprime":"\u2035","backsim":"\u223d","backsimeq":"\u22cd","Backslash":"\u2216","Barv":"\u2ae7","barvee":"\u22bd","barwed":"\u2305","Barwed":"\u2306","barwedge":"\u2305","bbrk":"\u23b5","bbrktbrk":"\u23b6","bcong":"\u224c","Bcy":"\u0411","bcy":"\u0431","bdquo":"\u201e","becaus":"\u2235","because":"\u2235","Because":"\u2235","bemptyv":"\u29b0","bepsi":"\u03f6","bernou":"\u212c","Bernoullis":"\u212c","Beta":"\u0392","beta":"\u03b2","beth":"\u2136","between":"\u226c","Bfr":"\ud835\udd05","bfr":"\ud835\udd1f","bigcap":"\u22c2","bigcirc":"\u25ef","bigcup":"\u22c3","bigodot":"\u2a00","bigoplus":"\u2a01","bigotimes":"\u2a02","bigsqcup":"\u2a06","bigstar":"\u2605","bigtriangledown":"\u25bd","bigtriangleup":"\u25b3","biguplus":"\u2a04","bigvee":"\u22c1","bigwedge":"\u22c0","bkarow":"\u290d","blacklozenge":"\u29eb","blacksquare":"\u25aa","blacktriangle":"\u25b4","blacktriangledown":"\u25be","blacktriangleleft":"\u25c2","blacktriangleright":"\u25b8","blank":"\u2423","blk12":"\u2592","blk14":"\u2591","blk34":"\u2593","block":"\u2588","bne":"=\u20e5","bnequiv":"\u2261\u20e5","bNot":"\u2aed","bnot":"\u2310","Bopf":"\ud835\udd39","bopf":"\ud835\udd53","bot":"\u22a5","bottom":"\u22a5","bowtie":"\u22c8","boxbox":"\u29c9","boxdl":"\u2510","boxdL":"\u2555","boxDl":"\u2556","boxDL":"\u2557","boxdr":"\u250c","boxdR":"\u2552","boxDr":"\u2553","boxDR":"\u2554","boxh":"\u2500","boxH":"\u2550","boxhd":"\u252c","boxHd":"\u2564","boxhD":"\u2565","boxHD":"\u2566","boxhu":"\u2534","boxHu":"\u2567","boxhU":"\u2568","boxHU":"\u2569","boxminus":"\u229f","boxplus":"\u229e","boxtimes":"\u22a0","boxul":"\u2518","boxuL":"\u255b","boxUl":"\u255c","boxUL":"\u255d","boxur":"\u2514","boxuR":"\u2558","boxUr":"\u2559","boxUR":"\u255a","boxv":"\u2502","boxV":"\u2551","boxvh":"\u253c","boxvH":"\u256a","boxVh":"\u256b","boxVH":"\u256c","boxvl":"\u2524","boxvL":"\u2561","boxVl":"\u2562","boxVL":"\u2563","boxvr":"\u251c","boxvR":"\u255e","boxVr":"\u255f","boxVR":"\u2560","bprime":"\u2035","breve":"\u02d8","Breve":"\u02d8","brvbar":"\xa6","bscr":"\ud835\udcb7","Bscr":"\u212c","bsemi":"\u204f","bsim":"\u223d","bsime":"\u22cd","bsolb":"\u29c5","bsol":"\\\\","bsolhsub":"\u27c8","bull":"\u2022","bullet":"\u2022","bump":"\u224e","bumpE":"\u2aae","bumpe":"\u224f","Bumpeq":"\u224e","bumpeq":"\u224f","Cacute":"\u0106","cacute":"\u0107","capand":"\u2a44","capbrcup":"\u2a49","capcap":"\u2a4b","cap":"\u2229","Cap":"\u22d2","capcup":"\u2a47","capdot":"\u2a40","CapitalDifferentialD":"\u2145","caps":"\u2229\ufe00","caret":"\u2041","caron":"\u02c7","Cayleys":"\u212d","ccaps":"\u2a4d","Ccaron":"\u010c","ccaron":"\u010d","Ccedil":"\xc7","ccedil":"\xe7","Ccirc":"\u0108","ccirc":"\u0109","Cconint":"\u2230","ccups":"\u2a4c","ccupssm":"\u2a50","Cdot":"\u010a","cdot":"\u010b","cedil":"\xb8","Cedilla":"\xb8","cemptyv":"\u29b2","cent":"\xa2","centerdot":"\xb7","CenterDot":"\xb7","cfr":"\ud835\udd20","Cfr":"\u212d","CHcy":"\u0427","chcy":"\u0447","check":"\u2713","checkmark":"\u2713","Chi":"\u03a7","chi":"\u03c7","circ":"\u02c6","circeq":"\u2257","circlearrowleft":"\u21ba","circlearrowright":"\u21bb","circledast":"\u229b","circledcirc":"\u229a","circleddash":"\u229d","CircleDot":"\u2299","circledR":"\xae","circledS":"\u24c8","CircleMinus":"\u2296","CirclePlus":"\u2295","CircleTimes":"\u2297","cir":"\u25cb","cirE":"\u29c3","cire":"\u2257","cirfnint":"\u2a10","cirmid":"\u2aef","cirscir":"\u29c2","ClockwiseContourIntegral":"\u2232","CloseCurlyDoubleQuote":"\u201d","CloseCurlyQuote":"\u2019","clubs":"\u2663","clubsuit":"\u2663","colon":":","Colon":"\u2237","Colone":"\u2a74","colone":"\u2254","coloneq":"\u2254","comma":",","commat":"@","comp":"\u2201","compfn":"\u2218","complement":"\u2201","complexes":"\u2102","cong":"\u2245","congdot":"\u2a6d","Congruent":"\u2261","conint":"\u222e","Conint":"\u222f","ContourIntegral":"\u222e","copf":"\ud835\udd54","Copf":"\u2102","coprod":"\u2210","Coproduct":"\u2210","copy":"\xa9","COPY":"\xa9","copysr":"\u2117","CounterClockwiseContourIntegral":"\u2233","crarr":"\u21b5","cross":"\u2717","Cross":"\u2a2f","Cscr":"\ud835\udc9e","cscr":"\ud835\udcb8","csub":"\u2acf","csube":"\u2ad1","csup":"\u2ad0","csupe":"\u2ad2","ctdot":"\u22ef","cudarrl":"\u2938","cudarrr":"\u2935","cuepr":"\u22de","cuesc":"\u22df","cularr":"\u21b6","cularrp":"\u293d","cupbrcap":"\u2a48","cupcap":"\u2a46","CupCap":"\u224d","cup":"\u222a","Cup":"\u22d3","cupcup":"\u2a4a","cupdot":"\u228d","cupor":"\u2a45","cups":"\u222a\ufe00","curarr":"\u21b7","curarrm":"\u293c","curlyeqprec":"\u22de","curlyeqsucc":"\u22df","curlyvee":"\u22ce","curlywedge":"\u22cf","curren":"\xa4","curvearrowleft":"\u21b6","curvearrowright":"\u21b7","cuvee":"\u22ce","cuwed":"\u22cf","cwconint":"\u2232","cwint":"\u2231","cylcty":"\u232d","dagger":"\u2020","Dagger":"\u2021","daleth":"\u2138","darr":"\u2193","Darr":"\u21a1","dArr":"\u21d3","dash":"\u2010","Dashv":"\u2ae4","dashv":"\u22a3","dbkarow":"\u290f","dblac":"\u02dd","Dcaron":"\u010e","dcaron":"\u010f","Dcy":"\u0414","dcy":"\u0434","ddagger":"\u2021","ddarr":"\u21ca","DD":"\u2145","dd":"\u2146","DDotrahd":"\u2911","ddotseq":"\u2a77","deg":"\xb0","Del":"\u2207","Delta":"\u0394","delta":"\u03b4","demptyv":"\u29b1","dfisht":"\u297f","Dfr":"\ud835\udd07","dfr":"\ud835\udd21","dHar":"\u2965","dharl":"\u21c3","dharr":"\u21c2","DiacriticalAcute":"\xb4","DiacriticalDot":"\u02d9","DiacriticalDoubleAcute":"\u02dd","DiacriticalGrave":"`","DiacriticalTilde":"\u02dc","diam":"\u22c4","diamond":"\u22c4","Diamond":"\u22c4","diamondsuit":"\u2666","diams":"\u2666","die":"\xa8","DifferentialD":"\u2146","digamma":"\u03dd","disin":"\u22f2","div":"\xf7","divide":"\xf7","divideontimes":"\u22c7","divonx":"\u22c7","DJcy":"\u0402","djcy":"\u0452","dlcorn":"\u231e","dlcrop":"\u230d","dollar":"$","Dopf":"\ud835\udd3b","dopf":"\ud835\udd55","Dot":"\xa8","dot":"\u02d9","DotDot":"\u20dc","doteq":"\u2250","doteqdot":"\u2251","DotEqual":"\u2250","dotminus":"\u2238","dotplus":"\u2214","dotsquare":"\u22a1","doublebarwedge":"\u2306","DoubleContourIntegral":"\u222f","DoubleDot":"\xa8","DoubleDownArrow":"\u21d3","DoubleLeftArrow":"\u21d0","DoubleLeftRightArrow":"\u21d4","DoubleLeftTee":"\u2ae4","DoubleLongLeftArrow":"\u27f8","DoubleLongLeftRightArrow":"\u27fa","DoubleLongRightArrow":"\u27f9","DoubleRightArrow":"\u21d2","DoubleRightTee":"\u22a8","DoubleUpArrow":"\u21d1","DoubleUpDownArrow":"\u21d5","DoubleVerticalBar":"\u2225","DownArrowBar":"\u2913","downarrow":"\u2193","DownArrow":"\u2193","Downarrow":"\u21d3","DownArrowUpArrow":"\u21f5","DownBreve":"\u0311","downdownarrows":"\u21ca","downharpoonleft":"\u21c3","downharpoonright":"\u21c2","DownLeftRightVector":"\u2950","DownLeftTeeVector":"\u295e","DownLeftVectorBar":"\u2956","DownLeftVector":"\u21bd","DownRightTeeVector":"\u295f","DownRightVectorBar":"\u2957","DownRightVector":"\u21c1","DownTeeArrow":"\u21a7","DownTee":"\u22a4","drbkarow":"\u2910","drcorn":"\u231f","drcrop":"\u230c","Dscr":"\ud835\udc9f","dscr":"\ud835\udcb9","DScy":"\u0405","dscy":"\u0455","dsol":"\u29f6","Dstrok":"\u0110","dstrok":"\u0111","dtdot":"\u22f1","dtri":"\u25bf","dtrif":"\u25be","duarr":"\u21f5","duhar":"\u296f","dwangle":"\u29a6","DZcy":"\u040f","dzcy":"\u045f","dzigrarr":"\u27ff","Eacute":"\xc9","eacute":"\xe9","easter":"\u2a6e","Ecaron":"\u011a","ecaron":"\u011b","Ecirc":"\xca","ecirc":"\xea","ecir":"\u2256","ecolon":"\u2255","Ecy":"\u042d","ecy":"\u044d","eDDot":"\u2a77","Edot":"\u0116","edot":"\u0117","eDot":"\u2251","ee":"\u2147","efDot":"\u2252","Efr":"\ud835\udd08","efr":"\ud835\udd22","eg":"\u2a9a","Egrave":"\xc8","egrave":"\xe8","egs":"\u2a96","egsdot":"\u2a98","el":"\u2a99","Element":"\u2208","elinters":"\u23e7","ell":"\u2113","els":"\u2a95","elsdot":"\u2a97","Emacr":"\u0112","emacr":"\u0113","empty":"\u2205","emptyset":"\u2205","EmptySmallSquare":"\u25fb","emptyv":"\u2205","EmptyVerySmallSquare":"\u25ab","emsp13":"\u2004","emsp14":"\u2005","emsp":"\u2003","ENG":"\u014a","eng":"\u014b","ensp":"\u2002","Eogon":"\u0118","eogon":"\u0119","Eopf":"\ud835\udd3c","eopf":"\ud835\udd56","epar":"\u22d5","eparsl":"\u29e3","eplus":"\u2a71","epsi":"\u03b5","Epsilon":"\u0395","epsilon":"\u03b5","epsiv":"\u03f5","eqcirc":"\u2256","eqcolon":"\u2255","eqsim":"\u2242","eqslantgtr":"\u2a96","eqslantless":"\u2a95","Equal":"\u2a75","equals":"=","EqualTilde":"\u2242","equest":"\u225f","Equilibrium":"\u21cc","equiv":"\u2261","equivDD":"\u2a78","eqvparsl":"\u29e5","erarr":"\u2971","erDot":"\u2253","escr":"\u212f","Escr":"\u2130","esdot":"\u2250","Esim":"\u2a73","esim":"\u2242","Eta":"\u0397","eta":"\u03b7","ETH":"\xd0","eth":"\xf0","Euml":"\xcb","euml":"\xeb","euro":"\u20ac","excl":"!","exist":"\u2203","Exists":"\u2203","expectation":"\u2130","exponentiale":"\u2147","ExponentialE":"\u2147","fallingdotseq":"\u2252","Fcy":"\u0424","fcy":"\u0444","female":"\u2640","ffilig":"\ufb03","fflig":"\ufb00","ffllig":"\ufb04","Ffr":"\ud835\udd09","ffr":"\ud835\udd23","filig":"\ufb01","FilledSmallSquare":"\u25fc","FilledVerySmallSquare":"\u25aa","fjlig":"fj","flat":"\u266d","fllig":"\ufb02","fltns":"\u25b1","fnof":"\u0192","Fopf":"\ud835\udd3d","fopf":"\ud835\udd57","forall":"\u2200","ForAll":"\u2200","fork":"\u22d4","forkv":"\u2ad9","Fouriertrf":"\u2131","fpartint":"\u2a0d","frac12":"\xbd","frac13":"\u2153","frac14":"\xbc","frac15":"\u2155","frac16":"\u2159","frac18":"\u215b","frac23":"\u2154","frac25":"\u2156","frac34":"\xbe","frac35":"\u2157","frac38":"\u215c","frac45":"\u2158","frac56":"\u215a","frac58":"\u215d","frac78":"\u215e","frasl":"\u2044","frown":"\u2322","fscr":"\ud835\udcbb","Fscr":"\u2131","gacute":"\u01f5","Gamma":"\u0393","gamma":"\u03b3","Gammad":"\u03dc","gammad":"\u03dd","gap":"\u2a86","Gbreve":"\u011e","gbreve":"\u011f","Gcedil":"\u0122","Gcirc":"\u011c","gcirc":"\u011d","Gcy":"\u0413","gcy":"\u0433","Gdot":"\u0120","gdot":"\u0121","ge":"\u2265","gE":"\u2267","gEl":"\u2a8c","gel":"\u22db","geq":"\u2265","geqq":"\u2267","geqslant":"\u2a7e","gescc":"\u2aa9","ges":"\u2a7e","gesdot":"\u2a80","gesdoto":"\u2a82","gesdotol":"\u2a84","gesl":"\u22db\ufe00","gesles":"\u2a94","Gfr":"\ud835\udd0a","gfr":"\ud835\udd24","gg":"\u226b","Gg":"\u22d9","ggg":"\u22d9","gimel":"\u2137","GJcy":"\u0403","gjcy":"\u0453","gla":"\u2aa5","gl":"\u2277","glE":"\u2a92","glj":"\u2aa4","gnap":"\u2a8a","gnapprox":"\u2a8a","gne":"\u2a88","gnE":"\u2269","gneq":"\u2a88","gneqq":"\u2269","gnsim":"\u22e7","Gopf":"\ud835\udd3e","gopf":"\ud835\udd58","grave":"`","GreaterEqual":"\u2265","GreaterEqualLess":"\u22db","GreaterFullEqual":"\u2267","GreaterGreater":"\u2aa2","GreaterLess":"\u2277","GreaterSlantEqual":"\u2a7e","GreaterTilde":"\u2273","Gscr":"\ud835\udca2","gscr":"\u210a","gsim":"\u2273","gsime":"\u2a8e","gsiml":"\u2a90","gtcc":"\u2aa7","gtcir":"\u2a7a","gt":">","GT":">","Gt":"\u226b","gtdot":"\u22d7","gtlPar":"\u2995","gtquest":"\u2a7c","gtrapprox":"\u2a86","gtrarr":"\u2978","gtrdot":"\u22d7","gtreqless":"\u22db","gtreqqless":"\u2a8c","gtrless":"\u2277","gtrsim":"\u2273","gvertneqq":"\u2269\ufe00","gvnE":"\u2269\ufe00","Hacek":"\u02c7","hairsp":"\u200a","half":"\xbd","hamilt":"\u210b","HARDcy":"\u042a","hardcy":"\u044a","harrcir":"\u2948","harr":"\u2194","hArr":"\u21d4","harrw":"\u21ad","Hat":"^","hbar":"\u210f","Hcirc":"\u0124","hcirc":"\u0125","hearts":"\u2665","heartsuit":"\u2665","hellip":"\u2026","hercon":"\u22b9","hfr":"\ud835\udd25","Hfr":"\u210c","HilbertSpace":"\u210b","hksearow":"\u2925","hkswarow":"\u2926","hoarr":"\u21ff","homtht":"\u223b","hookleftarrow":"\u21a9","hookrightarrow":"\u21aa","hopf":"\ud835\udd59","Hopf":"\u210d","horbar":"\u2015","HorizontalLine":"\u2500","hscr":"\ud835\udcbd","Hscr":"\u210b","hslash":"\u210f","Hstrok":"\u0126","hstrok":"\u0127","HumpDownHump":"\u224e","HumpEqual":"\u224f","hybull":"\u2043","hyphen":"\u2010","Iacute":"\xcd","iacute":"\xed","ic":"\u2063","Icirc":"\xce","icirc":"\xee","Icy":"\u0418","icy":"\u0438","Idot":"\u0130","IEcy":"\u0415","iecy":"\u0435","iexcl":"\xa1","iff":"\u21d4","ifr":"\ud835\udd26","Ifr":"\u2111","Igrave":"\xcc","igrave":"\xec","ii":"\u2148","iiiint":"\u2a0c","iiint":"\u222d","iinfin":"\u29dc","iiota":"\u2129","IJlig":"\u0132","ijlig":"\u0133","Imacr":"\u012a","imacr":"\u012b","image":"\u2111","ImaginaryI":"\u2148","imagline":"\u2110","imagpart":"\u2111","imath":"\u0131","Im":"\u2111","imof":"\u22b7","imped":"\u01b5","Implies":"\u21d2","incare":"\u2105","in":"\u2208","infin":"\u221e","infintie":"\u29dd","inodot":"\u0131","intcal":"\u22ba","int":"\u222b","Int":"\u222c","integers":"\u2124","Integral":"\u222b","intercal":"\u22ba","Intersection":"\u22c2","intlarhk":"\u2a17","intprod":"\u2a3c","InvisibleComma":"\u2063","InvisibleTimes":"\u2062","IOcy":"\u0401","iocy":"\u0451","Iogon":"\u012e","iogon":"\u012f","Iopf":"\ud835\udd40","iopf":"\ud835\udd5a","Iota":"\u0399","iota":"\u03b9","iprod":"\u2a3c","iquest":"\xbf","iscr":"\ud835\udcbe","Iscr":"\u2110","isin":"\u2208","isindot":"\u22f5","isinE":"\u22f9","isins":"\u22f4","isinsv":"\u22f3","isinv":"\u2208","it":"\u2062","Itilde":"\u0128","itilde":"\u0129","Iukcy":"\u0406","iukcy":"\u0456","Iuml":"\xcf","iuml":"\xef","Jcirc":"\u0134","jcirc":"\u0135","Jcy":"\u0419","jcy":"\u0439","Jfr":"\ud835\udd0d","jfr":"\ud835\udd27","jmath":"\u0237","Jopf":"\ud835\udd41","jopf":"\ud835\udd5b","Jscr":"\ud835\udca5","jscr":"\ud835\udcbf","Jsercy":"\u0408","jsercy":"\u0458","Jukcy":"\u0404","jukcy":"\u0454","Kappa":"\u039a","kappa":"\u03ba","kappav":"\u03f0","Kcedil":"\u0136","kcedil":"\u0137","Kcy":"\u041a","kcy":"\u043a","Kfr":"\ud835\udd0e","kfr":"\ud835\udd28","kgreen":"\u0138","KHcy":"\u0425","khcy":"\u0445","KJcy":"\u040c","kjcy":"\u045c","Kopf":"\ud835\udd42","kopf":"\ud835\udd5c","Kscr":"\ud835\udca6","kscr":"\ud835\udcc0","lAarr":"\u21da","Lacute":"\u0139","lacute":"\u013a","laemptyv":"\u29b4","lagran":"\u2112","Lambda":"\u039b","lambda":"\u03bb","lang":"\u27e8","Lang":"\u27ea","langd":"\u2991","langle":"\u27e8","lap":"\u2a85","Laplacetrf":"\u2112","laquo":"\xab","larrb":"\u21e4","larrbfs":"\u291f","larr":"\u2190","Larr":"\u219e","lArr":"\u21d0","larrfs":"\u291d","larrhk":"\u21a9","larrlp":"\u21ab","larrpl":"\u2939","larrsim":"\u2973","larrtl":"\u21a2","latail":"\u2919","lAtail":"\u291b","lat":"\u2aab","late":"\u2aad","lates":"\u2aad\ufe00","lbarr":"\u290c","lBarr":"\u290e","lbbrk":"\u2772","lbrace":"{","lbrack":"[","lbrke":"\u298b","lbrksld":"\u298f","lbrkslu":"\u298d","Lcaron":"\u013d","lcaron":"\u013e","Lcedil":"\u013b","lcedil":"\u013c","lceil":"\u2308","lcub":"{","Lcy":"\u041b","lcy":"\u043b","ldca":"\u2936","ldquo":"\u201c","ldquor":"\u201e","ldrdhar":"\u2967","ldrushar":"\u294b","ldsh":"\u21b2","le":"\u2264","lE":"\u2266","LeftAngleBracket":"\u27e8","LeftArrowBar":"\u21e4","leftarrow":"\u2190","LeftArrow":"\u2190","Leftarrow":"\u21d0","LeftArrowRightArrow":"\u21c6","leftarrowtail":"\u21a2","LeftCeiling":"\u2308","LeftDoubleBracket":"\u27e6","LeftDownTeeVector":"\u2961","LeftDownVectorBar":"\u2959","LeftDownVector":"\u21c3","LeftFloor":"\u230a","leftharpoondown":"\u21bd","leftharpoonup":"\u21bc","leftleftarrows":"\u21c7","leftrightarrow":"\u2194","LeftRightArrow":"\u2194","Leftrightarrow":"\u21d4","leftrightarrows":"\u21c6","leftrightharpoons":"\u21cb","leftrightsquigarrow":"\u21ad","LeftRightVector":"\u294e","LeftTeeArrow":"\u21a4","LeftTee":"\u22a3","LeftTeeVector":"\u295a","leftthreetimes":"\u22cb","LeftTriangleBar":"\u29cf","LeftTriangle":"\u22b2","LeftTriangleEqual":"\u22b4","LeftUpDownVector":"\u2951","LeftUpTeeVector":"\u2960","LeftUpVectorBar":"\u2958","LeftUpVector":"\u21bf","LeftVectorBar":"\u2952","LeftVector":"\u21bc","lEg":"\u2a8b","leg":"\u22da","leq":"\u2264","leqq":"\u2266","leqslant":"\u2a7d","lescc":"\u2aa8","les":"\u2a7d","lesdot":"\u2a7f","lesdoto":"\u2a81","lesdotor":"\u2a83","lesg":"\u22da\ufe00","lesges":"\u2a93","lessapprox":"\u2a85","lessdot":"\u22d6","lesseqgtr":"\u22da","lesseqqgtr":"\u2a8b","LessEqualGreater":"\u22da","LessFullEqual":"\u2266","LessGreater":"\u2276","lessgtr":"\u2276","LessLess":"\u2aa1","lesssim":"\u2272","LessSlantEqual":"\u2a7d","LessTilde":"\u2272","lfisht":"\u297c","lfloor":"\u230a","Lfr":"\ud835\udd0f","lfr":"\ud835\udd29","lg":"\u2276","lgE":"\u2a91","lHar":"\u2962","lhard":"\u21bd","lharu":"\u21bc","lharul":"\u296a","lhblk":"\u2584","LJcy":"\u0409","ljcy":"\u0459","llarr":"\u21c7","ll":"\u226a","Ll":"\u22d8","llcorner":"\u231e","Lleftarrow":"\u21da","llhard":"\u296b","lltri":"\u25fa","Lmidot":"\u013f","lmidot":"\u0140","lmoustache":"\u23b0","lmoust":"\u23b0","lnap":"\u2a89","lnapprox":"\u2a89","lne":"\u2a87","lnE":"\u2268","lneq":"\u2a87","lneqq":"\u2268","lnsim":"\u22e6","loang":"\u27ec","loarr":"\u21fd","lobrk":"\u27e6","longleftarrow":"\u27f5","LongLeftArrow":"\u27f5","Longleftarrow":"\u27f8","longleftrightarrow":"\u27f7","LongLeftRightArrow":"\u27f7","Longleftrightarrow":"\u27fa","longmapsto":"\u27fc","longrightarrow":"\u27f6","LongRightArrow":"\u27f6","Longrightarrow":"\u27f9","looparrowleft":"\u21ab","looparrowright":"\u21ac","lopar":"\u2985","Lopf":"\ud835\udd43","lopf":"\ud835\udd5d","loplus":"\u2a2d","lotimes":"\u2a34","lowast":"\u2217","lowbar":"_","LowerLeftArrow":"\u2199","LowerRightArrow":"\u2198","loz":"\u25ca","lozenge":"\u25ca","lozf":"\u29eb","lpar":"(","lparlt":"\u2993","lrarr":"\u21c6","lrcorner":"\u231f","lrhar":"\u21cb","lrhard":"\u296d","lrm":"\u200e","lrtri":"\u22bf","lsaquo":"\u2039","lscr":"\ud835\udcc1","Lscr":"\u2112","lsh":"\u21b0","Lsh":"\u21b0","lsim":"\u2272","lsime":"\u2a8d","lsimg":"\u2a8f","lsqb":"[","lsquo":"\u2018","lsquor":"\u201a","Lstrok":"\u0141","lstrok":"\u0142","ltcc":"\u2aa6","ltcir":"\u2a79","lt":"<","LT":"<","Lt":"\u226a","ltdot":"\u22d6","lthree":"\u22cb","ltimes":"\u22c9","ltlarr":"\u2976","ltquest":"\u2a7b","ltri":"\u25c3","ltrie":"\u22b4","ltrif":"\u25c2","ltrPar":"\u2996","lurdshar":"\u294a","luruhar":"\u2966","lvertneqq":"\u2268\ufe00","lvnE":"\u2268\ufe00","macr":"\xaf","male":"\u2642","malt":"\u2720","maltese":"\u2720","Map":"\u2905","map":"\u21a6","mapsto":"\u21a6","mapstodown":"\u21a7","mapstoleft":"\u21a4","mapstoup":"\u21a5","marker":"\u25ae","mcomma":"\u2a29","Mcy":"\u041c","mcy":"\u043c","mdash":"\u2014","mDDot":"\u223a","measuredangle":"\u2221","MediumSpace":"\u205f","Mellintrf":"\u2133","Mfr":"\ud835\udd10","mfr":"\ud835\udd2a","mho":"\u2127","micro":"\xb5","midast":"*","midcir":"\u2af0","mid":"\u2223","middot":"\xb7","minusb":"\u229f","minus":"\u2212","minusd":"\u2238","minusdu":"\u2a2a","MinusPlus":"\u2213","mlcp":"\u2adb","mldr":"\u2026","mnplus":"\u2213","models":"\u22a7","Mopf":"\ud835\udd44","mopf":"\ud835\udd5e","mp":"\u2213","mscr":"\ud835\udcc2","Mscr":"\u2133","mstpos":"\u223e","Mu":"\u039c","mu":"\u03bc","multimap":"\u22b8","mumap":"\u22b8","nabla":"\u2207","Nacute":"\u0143","nacute":"\u0144","nang":"\u2220\u20d2","nap":"\u2249","napE":"\u2a70\u0338","napid":"\u224b\u0338","napos":"\u0149","napprox":"\u2249","natural":"\u266e","naturals":"\u2115","natur":"\u266e","nbsp":"\xa0","nbump":"\u224e\u0338","nbumpe":"\u224f\u0338","ncap":"\u2a43","Ncaron":"\u0147","ncaron":"\u0148","Ncedil":"\u0145","ncedil":"\u0146","ncong":"\u2247","ncongdot":"\u2a6d\u0338","ncup":"\u2a42","Ncy":"\u041d","ncy":"\u043d","ndash":"\u2013","nearhk":"\u2924","nearr":"\u2197","neArr":"\u21d7","nearrow":"\u2197","ne":"\u2260","nedot":"\u2250\u0338","NegativeMediumSpace":"\u200b","NegativeThickSpace":"\u200b","NegativeThinSpace":"\u200b","NegativeVeryThinSpace":"\u200b","nequiv":"\u2262","nesear":"\u2928","nesim":"\u2242\u0338","NestedGreaterGreater":"\u226b","NestedLessLess":"\u226a","NewLine":"\\n","nexist":"\u2204","nexists":"\u2204","Nfr":"\ud835\udd11","nfr":"\ud835\udd2b","ngE":"\u2267\u0338","nge":"\u2271","ngeq":"\u2271","ngeqq":"\u2267\u0338","ngeqslant":"\u2a7e\u0338","nges":"\u2a7e\u0338","nGg":"\u22d9\u0338","ngsim":"\u2275","nGt":"\u226b\u20d2","ngt":"\u226f","ngtr":"\u226f","nGtv":"\u226b\u0338","nharr":"\u21ae","nhArr":"\u21ce","nhpar":"\u2af2","ni":"\u220b","nis":"\u22fc","nisd":"\u22fa","niv":"\u220b","NJcy":"\u040a","njcy":"\u045a","nlarr":"\u219a","nlArr":"\u21cd","nldr":"\u2025","nlE":"\u2266\u0338","nle":"\u2270","nleftarrow":"\u219a","nLeftarrow":"\u21cd","nleftrightarrow":"\u21ae","nLeftrightarrow":"\u21ce","nleq":"\u2270","nleqq":"\u2266\u0338","nleqslant":"\u2a7d\u0338","nles":"\u2a7d\u0338","nless":"\u226e","nLl":"\u22d8\u0338","nlsim":"\u2274","nLt":"\u226a\u20d2","nlt":"\u226e","nltri":"\u22ea","nltrie":"\u22ec","nLtv":"\u226a\u0338","nmid":"\u2224","NoBreak":"\u2060","NonBreakingSpace":"\xa0","nopf":"\ud835\udd5f","Nopf":"\u2115","Not":"\u2aec","not":"\xac","NotCongruent":"\u2262","NotCupCap":"\u226d","NotDoubleVerticalBar":"\u2226","NotElement":"\u2209","NotEqual":"\u2260","NotEqualTilde":"\u2242\u0338","NotExists":"\u2204","NotGreater":"\u226f","NotGreaterEqual":"\u2271","NotGreaterFullEqual":"\u2267\u0338","NotGreaterGreater":"\u226b\u0338","NotGreaterLess":"\u2279","NotGreaterSlantEqual":"\u2a7e\u0338","NotGreaterTilde":"\u2275","NotHumpDownHump":"\u224e\u0338","NotHumpEqual":"\u224f\u0338","notin":"\u2209","notindot":"\u22f5\u0338","notinE":"\u22f9\u0338","notinva":"\u2209","notinvb":"\u22f7","notinvc":"\u22f6","NotLeftTriangleBar":"\u29cf\u0338","NotLeftTriangle":"\u22ea","NotLeftTriangleEqual":"\u22ec","NotLess":"\u226e","NotLessEqual":"\u2270","NotLessGreater":"\u2278","NotLessLess":"\u226a\u0338","NotLessSlantEqual":"\u2a7d\u0338","NotLessTilde":"\u2274","NotNestedGreaterGreater":"\u2aa2\u0338","NotNestedLessLess":"\u2aa1\u0338","notni":"\u220c","notniva":"\u220c","notnivb":"\u22fe","notnivc":"\u22fd","NotPrecedes":"\u2280","NotPrecedesEqual":"\u2aaf\u0338","NotPrecedesSlantEqual":"\u22e0","NotReverseElement":"\u220c","NotRightTriangleBar":"\u29d0\u0338","NotRightTriangle":"\u22eb","NotRightTriangleEqual":"\u22ed","NotSquareSubset":"\u228f\u0338","NotSquareSubsetEqual":"\u22e2","NotSquareSuperset":"\u2290\u0338","NotSquareSupersetEqual":"\u22e3","NotSubset":"\u2282\u20d2","NotSubsetEqual":"\u2288","NotSucceeds":"\u2281","NotSucceedsEqual":"\u2ab0\u0338","NotSucceedsSlantEqual":"\u22e1","NotSucceedsTilde":"\u227f\u0338","NotSuperset":"\u2283\u20d2","NotSupersetEqual":"\u2289","NotTilde":"\u2241","NotTildeEqual":"\u2244","NotTildeFullEqual":"\u2247","NotTildeTilde":"\u2249","NotVerticalBar":"\u2224","nparallel":"\u2226","npar":"\u2226","nparsl":"\u2afd\u20e5","npart":"\u2202\u0338","npolint":"\u2a14","npr":"\u2280","nprcue":"\u22e0","nprec":"\u2280","npreceq":"\u2aaf\u0338","npre":"\u2aaf\u0338","nrarrc":"\u2933\u0338","nrarr":"\u219b","nrArr":"\u21cf","nrarrw":"\u219d\u0338","nrightarrow":"\u219b","nRightarrow":"\u21cf","nrtri":"\u22eb","nrtrie":"\u22ed","nsc":"\u2281","nsccue":"\u22e1","nsce":"\u2ab0\u0338","Nscr":"\ud835\udca9","nscr":"\ud835\udcc3","nshortmid":"\u2224","nshortparallel":"\u2226","nsim":"\u2241","nsime":"\u2244","nsimeq":"\u2244","nsmid":"\u2224","nspar":"\u2226","nsqsube":"\u22e2","nsqsupe":"\u22e3","nsub":"\u2284","nsubE":"\u2ac5\u0338","nsube":"\u2288","nsubset":"\u2282\u20d2","nsubseteq":"\u2288","nsubseteqq":"\u2ac5\u0338","nsucc":"\u2281","nsucceq":"\u2ab0\u0338","nsup":"\u2285","nsupE":"\u2ac6\u0338","nsupe":"\u2289","nsupset":"\u2283\u20d2","nsupseteq":"\u2289","nsupseteqq":"\u2ac6\u0338","ntgl":"\u2279","Ntilde":"\xd1","ntilde":"\xf1","ntlg":"\u2278","ntriangleleft":"\u22ea","ntrianglelefteq":"\u22ec","ntriangleright":"\u22eb","ntrianglerighteq":"\u22ed","Nu":"\u039d","nu":"\u03bd","num":"#","numero":"\u2116","numsp":"\u2007","nvap":"\u224d\u20d2","nvdash":"\u22ac","nvDash":"\u22ad","nVdash":"\u22ae","nVDash":"\u22af","nvge":"\u2265\u20d2","nvgt":">\u20d2","nvHarr":"\u2904","nvinfin":"\u29de","nvlArr":"\u2902","nvle":"\u2264\u20d2","nvlt":"<\u20d2","nvltrie":"\u22b4\u20d2","nvrArr":"\u2903","nvrtrie":"\u22b5\u20d2","nvsim":"\u223c\u20d2","nwarhk":"\u2923","nwarr":"\u2196","nwArr":"\u21d6","nwarrow":"\u2196","nwnear":"\u2927","Oacute":"\xd3","oacute":"\xf3","oast":"\u229b","Ocirc":"\xd4","ocirc":"\xf4","ocir":"\u229a","Ocy":"\u041e","ocy":"\u043e","odash":"\u229d","Odblac":"\u0150","odblac":"\u0151","odiv":"\u2a38","odot":"\u2299","odsold":"\u29bc","OElig":"\u0152","oelig":"\u0153","ofcir":"\u29bf","Ofr":"\ud835\udd12","ofr":"\ud835\udd2c","ogon":"\u02db","Ograve":"\xd2","ograve":"\xf2","ogt":"\u29c1","ohbar":"\u29b5","ohm":"\u03a9","oint":"\u222e","olarr":"\u21ba","olcir":"\u29be","olcross":"\u29bb","oline":"\u203e","olt":"\u29c0","Omacr":"\u014c","omacr":"\u014d","Omega":"\u03a9","omega":"\u03c9","Omicron":"\u039f","omicron":"\u03bf","omid":"\u29b6","ominus":"\u2296","Oopf":"\ud835\udd46","oopf":"\ud835\udd60","opar":"\u29b7","OpenCurlyDoubleQuote":"\u201c","OpenCurlyQuote":"\u2018","operp":"\u29b9","oplus":"\u2295","orarr":"\u21bb","Or":"\u2a54","or":"\u2228","ord":"\u2a5d","order":"\u2134","orderof":"\u2134","ordf":"\xaa","ordm":"\xba","origof":"\u22b6","oror":"\u2a56","orslope":"\u2a57","orv":"\u2a5b","oS":"\u24c8","Oscr":"\ud835\udcaa","oscr":"\u2134","Oslash":"\xd8","oslash":"\xf8","osol":"\u2298","Otilde":"\xd5","otilde":"\xf5","otimesas":"\u2a36","Otimes":"\u2a37","otimes":"\u2297","Ouml":"\xd6","ouml":"\xf6","ovbar":"\u233d","OverBar":"\u203e","OverBrace":"\u23de","OverBracket":"\u23b4","OverParenthesis":"\u23dc","para":"\xb6","parallel":"\u2225","par":"\u2225","parsim":"\u2af3","parsl":"\u2afd","part":"\u2202","PartialD":"\u2202","Pcy":"\u041f","pcy":"\u043f","percnt":"%","period":".","permil":"\u2030","perp":"\u22a5","pertenk":"\u2031","Pfr":"\ud835\udd13","pfr":"\ud835\udd2d","Phi":"\u03a6","phi":"\u03c6","phiv":"\u03d5","phmmat":"\u2133","phone":"\u260e","Pi":"\u03a0","pi":"\u03c0","pitchfork":"\u22d4","piv":"\u03d6","planck":"\u210f","planckh":"\u210e","plankv":"\u210f","plusacir":"\u2a23","plusb":"\u229e","pluscir":"\u2a22","plus":"+","plusdo":"\u2214","plusdu":"\u2a25","pluse":"\u2a72","PlusMinus":"\xb1","plusmn":"\xb1","plussim":"\u2a26","plustwo":"\u2a27","pm":"\xb1","Poincareplane":"\u210c","pointint":"\u2a15","popf":"\ud835\udd61","Popf":"\u2119","pound":"\xa3","prap":"\u2ab7","Pr":"\u2abb","pr":"\u227a","prcue":"\u227c","precapprox":"\u2ab7","prec":"\u227a","preccurlyeq":"\u227c","Precedes":"\u227a","PrecedesEqual":"\u2aaf","PrecedesSlantEqual":"\u227c","PrecedesTilde":"\u227e","preceq":"\u2aaf","precnapprox":"\u2ab9","precneqq":"\u2ab5","precnsim":"\u22e8","pre":"\u2aaf","prE":"\u2ab3","precsim":"\u227e","prime":"\u2032","Prime":"\u2033","primes":"\u2119","prnap":"\u2ab9","prnE":"\u2ab5","prnsim":"\u22e8","prod":"\u220f","Product":"\u220f","profalar":"\u232e","profline":"\u2312","profsurf":"\u2313","prop":"\u221d","Proportional":"\u221d","Proportion":"\u2237","propto":"\u221d","prsim":"\u227e","prurel":"\u22b0","Pscr":"\ud835\udcab","pscr":"\ud835\udcc5","Psi":"\u03a8","psi":"\u03c8","puncsp":"\u2008","Qfr":"\ud835\udd14","qfr":"\ud835\udd2e","qint":"\u2a0c","qopf":"\ud835\udd62","Qopf":"\u211a","qprime":"\u2057","Qscr":"\ud835\udcac","qscr":"\ud835\udcc6","quaternions":"\u210d","quatint":"\u2a16","quest":"?","questeq":"\u225f","quot":"\\"","QUOT":"\\"","rAarr":"\u21db","race":"\u223d\u0331","Racute":"\u0154","racute":"\u0155","radic":"\u221a","raemptyv":"\u29b3","rang":"\u27e9","Rang":"\u27eb","rangd":"\u2992","range":"\u29a5","rangle":"\u27e9","raquo":"\xbb","rarrap":"\u2975","rarrb":"\u21e5","rarrbfs":"\u2920","rarrc":"\u2933","rarr":"\u2192","Rarr":"\u21a0","rArr":"\u21d2","rarrfs":"\u291e","rarrhk":"\u21aa","rarrlp":"\u21ac","rarrpl":"\u2945","rarrsim":"\u2974","Rarrtl":"\u2916","rarrtl":"\u21a3","rarrw":"\u219d","ratail":"\u291a","rAtail":"\u291c","ratio":"\u2236","rationals":"\u211a","rbarr":"\u290d","rBarr":"\u290f","RBarr":"\u2910","rbbrk":"\u2773","rbrace":"}","rbrack":"]","rbrke":"\u298c","rbrksld":"\u298e","rbrkslu":"\u2990","Rcaron":"\u0158","rcaron":"\u0159","Rcedil":"\u0156","rcedil":"\u0157","rceil":"\u2309","rcub":"}","Rcy":"\u0420","rcy":"\u0440","rdca":"\u2937","rdldhar":"\u2969","rdquo":"\u201d","rdquor":"\u201d","rdsh":"\u21b3","real":"\u211c","realine":"\u211b","realpart":"\u211c","reals":"\u211d","Re":"\u211c","rect":"\u25ad","reg":"\xae","REG":"\xae","ReverseElement":"\u220b","ReverseEquilibrium":"\u21cb","ReverseUpEquilibrium":"\u296f","rfisht":"\u297d","rfloor":"\u230b","rfr":"\ud835\udd2f","Rfr":"\u211c","rHar":"\u2964","rhard":"\u21c1","rharu":"\u21c0","rharul":"\u296c","Rho":"\u03a1","rho":"\u03c1","rhov":"\u03f1","RightAngleBracket":"\u27e9","RightArrowBar":"\u21e5","rightarrow":"\u2192","RightArrow":"\u2192","Rightarrow":"\u21d2","RightArrowLeftArrow":"\u21c4","rightarrowtail":"\u21a3","RightCeiling":"\u2309","RightDoubleBracket":"\u27e7","RightDownTeeVector":"\u295d","RightDownVectorBar":"\u2955","RightDownVector":"\u21c2","RightFloor":"\u230b","rightharpoondown":"\u21c1","rightharpoonup":"\u21c0","rightleftarrows":"\u21c4","rightleftharpoons":"\u21cc","rightrightarrows":"\u21c9","rightsquigarrow":"\u219d","RightTeeArrow":"\u21a6","RightTee":"\u22a2","RightTeeVector":"\u295b","rightthreetimes":"\u22cc","RightTriangleBar":"\u29d0","RightTriangle":"\u22b3","RightTriangleEqual":"\u22b5","RightUpDownVector":"\u294f","RightUpTeeVector":"\u295c","RightUpVectorBar":"\u2954","RightUpVector":"\u21be","RightVectorBar":"\u2953","RightVector":"\u21c0","ring":"\u02da","risingdotseq":"\u2253","rlarr":"\u21c4","rlhar":"\u21cc","rlm":"\u200f","rmoustache":"\u23b1","rmoust":"\u23b1","rnmid":"\u2aee","roang":"\u27ed","roarr":"\u21fe","robrk":"\u27e7","ropar":"\u2986","ropf":"\ud835\udd63","Ropf":"\u211d","roplus":"\u2a2e","rotimes":"\u2a35","RoundImplies":"\u2970","rpar":")","rpargt":"\u2994","rppolint":"\u2a12","rrarr":"\u21c9","Rrightarrow":"\u21db","rsaquo":"\u203a","rscr":"\ud835\udcc7","Rscr":"\u211b","rsh":"\u21b1","Rsh":"\u21b1","rsqb":"]","rsquo":"\u2019","rsquor":"\u2019","rthree":"\u22cc","rtimes":"\u22ca","rtri":"\u25b9","rtrie":"\u22b5","rtrif":"\u25b8","rtriltri":"\u29ce","RuleDelayed":"\u29f4","ruluhar":"\u2968","rx":"\u211e","Sacute":"\u015a","sacute":"\u015b","sbquo":"\u201a","scap":"\u2ab8","Scaron":"\u0160","scaron":"\u0161","Sc":"\u2abc","sc":"\u227b","sccue":"\u227d","sce":"\u2ab0","scE":"\u2ab4","Scedil":"\u015e","scedil":"\u015f","Scirc":"\u015c","scirc":"\u015d","scnap":"\u2aba","scnE":"\u2ab6","scnsim":"\u22e9","scpolint":"\u2a13","scsim":"\u227f","Scy":"\u0421","scy":"\u0441","sdotb":"\u22a1","sdot":"\u22c5","sdote":"\u2a66","searhk":"\u2925","searr":"\u2198","seArr":"\u21d8","searrow":"\u2198","sect":"\xa7","semi":";","seswar":"\u2929","setminus":"\u2216","setmn":"\u2216","sext":"\u2736","Sfr":"\ud835\udd16","sfr":"\ud835\udd30","sfrown":"\u2322","sharp":"\u266f","SHCHcy":"\u0429","shchcy":"\u0449","SHcy":"\u0428","shcy":"\u0448","ShortDownArrow":"\u2193","ShortLeftArrow":"\u2190","shortmid":"\u2223","shortparallel":"\u2225","ShortRightArrow":"\u2192","ShortUpArrow":"\u2191","shy":"\xad","Sigma":"\u03a3","sigma":"\u03c3","sigmaf":"\u03c2","sigmav":"\u03c2","sim":"\u223c","simdot":"\u2a6a","sime":"\u2243","simeq":"\u2243","simg":"\u2a9e","simgE":"\u2aa0","siml":"\u2a9d","simlE":"\u2a9f","simne":"\u2246","simplus":"\u2a24","simrarr":"\u2972","slarr":"\u2190","SmallCircle":"\u2218","smallsetminus":"\u2216","smashp":"\u2a33","smeparsl":"\u29e4","smid":"\u2223","smile":"\u2323","smt":"\u2aaa","smte":"\u2aac","smtes":"\u2aac\ufe00","SOFTcy":"\u042c","softcy":"\u044c","solbar":"\u233f","solb":"\u29c4","sol":"/","Sopf":"\ud835\udd4a","sopf":"\ud835\udd64","spades":"\u2660","spadesuit":"\u2660","spar":"\u2225","sqcap":"\u2293","sqcaps":"\u2293\ufe00","sqcup":"\u2294","sqcups":"\u2294\ufe00","Sqrt":"\u221a","sqsub":"\u228f","sqsube":"\u2291","sqsubset":"\u228f","sqsubseteq":"\u2291","sqsup":"\u2290","sqsupe":"\u2292","sqsupset":"\u2290","sqsupseteq":"\u2292","square":"\u25a1","Square":"\u25a1","SquareIntersection":"\u2293","SquareSubset":"\u228f","SquareSubsetEqual":"\u2291","SquareSuperset":"\u2290","SquareSupersetEqual":"\u2292","SquareUnion":"\u2294","squarf":"\u25aa","squ":"\u25a1","squf":"\u25aa","srarr":"\u2192","Sscr":"\ud835\udcae","sscr":"\ud835\udcc8","ssetmn":"\u2216","ssmile":"\u2323","sstarf":"\u22c6","Star":"\u22c6","star":"\u2606","starf":"\u2605","straightepsilon":"\u03f5","straightphi":"\u03d5","strns":"\xaf","sub":"\u2282","Sub":"\u22d0","subdot":"\u2abd","subE":"\u2ac5","sube":"\u2286","subedot":"\u2ac3","submult":"\u2ac1","subnE":"\u2acb","subne":"\u228a","subplus":"\u2abf","subrarr":"\u2979","subset":"\u2282","Subset":"\u22d0","subseteq":"\u2286","subseteqq":"\u2ac5","SubsetEqual":"\u2286","subsetneq":"\u228a","subsetneqq":"\u2acb","subsim":"\u2ac7","subsub":"\u2ad5","subsup":"\u2ad3","succapprox":"\u2ab8","succ":"\u227b","succcurlyeq":"\u227d","Succeeds":"\u227b","SucceedsEqual":"\u2ab0","SucceedsSlantEqual":"\u227d","SucceedsTilde":"\u227f","succeq":"\u2ab0","succnapprox":"\u2aba","succneqq":"\u2ab6","succnsim":"\u22e9","succsim":"\u227f","SuchThat":"\u220b","sum":"\u2211","Sum":"\u2211","sung":"\u266a","sup1":"\xb9","sup2":"\xb2","sup3":"\xb3","sup":"\u2283","Sup":"\u22d1","supdot":"\u2abe","supdsub":"\u2ad8","supE":"\u2ac6","supe":"\u2287","supedot":"\u2ac4","Superset":"\u2283","SupersetEqual":"\u2287","suphsol":"\u27c9","suphsub":"\u2ad7","suplarr":"\u297b","supmult":"\u2ac2","supnE":"\u2acc","supne":"\u228b","supplus":"\u2ac0","supset":"\u2283","Supset":"\u22d1","supseteq":"\u2287","supseteqq":"\u2ac6","supsetneq":"\u228b","supsetneqq":"\u2acc","supsim":"\u2ac8","supsub":"\u2ad4","supsup":"\u2ad6","swarhk":"\u2926","swarr":"\u2199","swArr":"\u21d9","swarrow":"\u2199","swnwar":"\u292a","szlig":"\xdf","Tab":"\\t","target":"\u2316","Tau":"\u03a4","tau":"\u03c4","tbrk":"\u23b4","Tcaron":"\u0164","tcaron":"\u0165","Tcedil":"\u0162","tcedil":"\u0163","Tcy":"\u0422","tcy":"\u0442","tdot":"\u20db","telrec":"\u2315","Tfr":"\ud835\udd17","tfr":"\ud835\udd31","there4":"\u2234","therefore":"\u2234","Therefore":"\u2234","Theta":"\u0398","theta":"\u03b8","thetasym":"\u03d1","thetav":"\u03d1","thickapprox":"\u2248","thicksim":"\u223c","ThickSpace":"\u205f\u200a","ThinSpace":"\u2009","thinsp":"\u2009","thkap":"\u2248","thksim":"\u223c","THORN":"\xde","thorn":"\xfe","tilde":"\u02dc","Tilde":"\u223c","TildeEqual":"\u2243","TildeFullEqual":"\u2245","TildeTilde":"\u2248","timesbar":"\u2a31","timesb":"\u22a0","times":"\xd7","timesd":"\u2a30","tint":"\u222d","toea":"\u2928","topbot":"\u2336","topcir":"\u2af1","top":"\u22a4","Topf":"\ud835\udd4b","topf":"\ud835\udd65","topfork":"\u2ada","tosa":"\u2929","tprime":"\u2034","trade":"\u2122","TRADE":"\u2122","triangle":"\u25b5","triangledown":"\u25bf","triangleleft":"\u25c3","trianglelefteq":"\u22b4","triangleq":"\u225c","triangleright":"\u25b9","trianglerighteq":"\u22b5","tridot":"\u25ec","trie":"\u225c","triminus":"\u2a3a","TripleDot":"\u20db","triplus":"\u2a39","trisb":"\u29cd","tritime":"\u2a3b","trpezium":"\u23e2","Tscr":"\ud835\udcaf","tscr":"\ud835\udcc9","TScy":"\u0426","tscy":"\u0446","TSHcy":"\u040b","tshcy":"\u045b","Tstrok":"\u0166","tstrok":"\u0167","twixt":"\u226c","twoheadleftarrow":"\u219e","twoheadrightarrow":"\u21a0","Uacute":"\xda","uacute":"\xfa","uarr":"\u2191","Uarr":"\u219f","uArr":"\u21d1","Uarrocir":"\u2949","Ubrcy":"\u040e","ubrcy":"\u045e","Ubreve":"\u016c","ubreve":"\u016d","Ucirc":"\xdb","ucirc":"\xfb","Ucy":"\u0423","ucy":"\u0443","udarr":"\u21c5","Udblac":"\u0170","udblac":"\u0171","udhar":"\u296e","ufisht":"\u297e","Ufr":"\ud835\udd18","ufr":"\ud835\udd32","Ugrave":"\xd9","ugrave":"\xf9","uHar":"\u2963","uharl":"\u21bf","uharr":"\u21be","uhblk":"\u2580","ulcorn":"\u231c","ulcorner":"\u231c","ulcrop":"\u230f","ultri":"\u25f8","Umacr":"\u016a","umacr":"\u016b","uml":"\xa8","UnderBar":"_","UnderBrace":"\u23df","UnderBracket":"\u23b5","UnderParenthesis":"\u23dd","Union":"\u22c3","UnionPlus":"\u228e","Uogon":"\u0172","uogon":"\u0173","Uopf":"\ud835\udd4c","uopf":"\ud835\udd66","UpArrowBar":"\u2912","uparrow":"\u2191","UpArrow":"\u2191","Uparrow":"\u21d1","UpArrowDownArrow":"\u21c5","updownarrow":"\u2195","UpDownArrow":"\u2195","Updownarrow":"\u21d5","UpEquilibrium":"\u296e","upharpoonleft":"\u21bf","upharpoonright":"\u21be","uplus":"\u228e","UpperLeftArrow":"\u2196","UpperRightArrow":"\u2197","upsi":"\u03c5","Upsi":"\u03d2","upsih":"\u03d2","Upsilon":"\u03a5","upsilon":"\u03c5","UpTeeArrow":"\u21a5","UpTee":"\u22a5","upuparrows":"\u21c8","urcorn":"\u231d","urcorner":"\u231d","urcrop":"\u230e","Uring":"\u016e","uring":"\u016f","urtri":"\u25f9","Uscr":"\ud835\udcb0","uscr":"\ud835\udcca","utdot":"\u22f0","Utilde":"\u0168","utilde":"\u0169","utri":"\u25b5","utrif":"\u25b4","uuarr":"\u21c8","Uuml":"\xdc","uuml":"\xfc","uwangle":"\u29a7","vangrt":"\u299c","varepsilon":"\u03f5","varkappa":"\u03f0","varnothing":"\u2205","varphi":"\u03d5","varpi":"\u03d6","varpropto":"\u221d","varr":"\u2195","vArr":"\u21d5","varrho":"\u03f1","varsigma":"\u03c2","varsubsetneq":"\u228a\ufe00","varsubsetneqq":"\u2acb\ufe00","varsupsetneq":"\u228b\ufe00","varsupsetneqq":"\u2acc\ufe00","vartheta":"\u03d1","vartriangleleft":"\u22b2","vartriangleright":"\u22b3","vBar":"\u2ae8","Vbar":"\u2aeb","vBarv":"\u2ae9","Vcy":"\u0412","vcy":"\u0432","vdash":"\u22a2","vDash":"\u22a8","Vdash":"\u22a9","VDash":"\u22ab","Vdashl":"\u2ae6","veebar":"\u22bb","vee":"\u2228","Vee":"\u22c1","veeeq":"\u225a","vellip":"\u22ee","verbar":"|","Verbar":"\u2016","vert":"|","Vert":"\u2016","VerticalBar":"\u2223","VerticalLine":"|","VerticalSeparator":"\u2758","VerticalTilde":"\u2240","VeryThinSpace":"\u200a","Vfr":"\ud835\udd19","vfr":"\ud835\udd33","vltri":"\u22b2","vnsub":"\u2282\u20d2","vnsup":"\u2283\u20d2","Vopf":"\ud835\udd4d","vopf":"\ud835\udd67","vprop":"\u221d","vrtri":"\u22b3","Vscr":"\ud835\udcb1","vscr":"\ud835\udccb","vsubnE":"\u2acb\ufe00","vsubne":"\u228a\ufe00","vsupnE":"\u2acc\ufe00","vsupne":"\u228b\ufe00","Vvdash":"\u22aa","vzigzag":"\u299a","Wcirc":"\u0174","wcirc":"\u0175","wedbar":"\u2a5f","wedge":"\u2227","Wedge":"\u22c0","wedgeq":"\u2259","weierp":"\u2118","Wfr":"\ud835\udd1a","wfr":"\ud835\udd34","Wopf":"\ud835\udd4e","wopf":"\ud835\udd68","wp":"\u2118","wr":"\u2240","wreath":"\u2240","Wscr":"\ud835\udcb2","wscr":"\ud835\udccc","xcap":"\u22c2","xcirc":"\u25ef","xcup":"\u22c3","xdtri":"\u25bd","Xfr":"\ud835\udd1b","xfr":"\ud835\udd35","xharr":"\u27f7","xhArr":"\u27fa","Xi":"\u039e","xi":"\u03be","xlarr":"\u27f5","xlArr":"\u27f8","xmap":"\u27fc","xnis":"\u22fb","xodot":"\u2a00","Xopf":"\ud835\udd4f","xopf":"\ud835\udd69","xoplus":"\u2a01","xotime":"\u2a02","xrarr":"\u27f6","xrArr":"\u27f9","Xscr":"\ud835\udcb3","xscr":"\ud835\udccd","xsqcup":"\u2a06","xuplus":"\u2a04","xutri":"\u25b3","xvee":"\u22c1","xwedge":"\u22c0","Yacute":"\xdd","yacute":"\xfd","YAcy":"\u042f","yacy":"\u044f","Ycirc":"\u0176","ycirc":"\u0177","Ycy":"\u042b","ycy":"\u044b","yen":"\xa5","Yfr":"\ud835\udd1c","yfr":"\ud835\udd36","YIcy":"\u0407","yicy":"\u0457","Yopf":"\ud835\udd50","yopf":"\ud835\udd6a","Yscr":"\ud835\udcb4","yscr":"\ud835\udcce","YUcy":"\u042e","yucy":"\u044e","yuml":"\xff","Yuml":"\u0178","Zacute":"\u0179","zacute":"\u017a","Zcaron":"\u017d","zcaron":"\u017e","Zcy":"\u0417","zcy":"\u0437","Zdot":"\u017b","zdot":"\u017c","zeetrf":"\u2128","ZeroWidthSpace":"\u200b","Zeta":"\u0396","zeta":"\u03b6","zfr":"\ud835\udd37","Zfr":"\u2128","ZHcy":"\u0416","zhcy":"\u0436","zigrarr":"\u21dd","zopf":"\ud835\udd6b","Zopf":"\u2124","Zscr":"\ud835\udcb5","zscr":"\ud835\udccf","zwj":"\u200d","zwnj":"\u200c"}')},xkQk:function(e,t,n){"use strict";var o=n("EBzq");e.exports=i,i.wrap=o;var r=[].slice;function i(){var e=[],t={run:function(){var t=-1,n=r.call(arguments,0,-1),i=arguments[arguments.length-1];if("function"!==typeof i)throw new Error("Expected function as last argument, not "+i);(function a(s){var c=e[++t],l=r.call(arguments,0).slice(1),u=n.length,h=-1;if(s)i(s);else{for(;++h<u;)null!==l[h]&&void 0!==l[h]||(l[h]=n[h]);n=l,c?o(c,a).apply(null,n):i.apply(null,[null].concat(n))}}).apply(null,[null].concat(n))},use:function(n){if("function"!==typeof n)throw new Error("Expected `fn` to be a function, not "+n);return e.push(n),t}};return t}},xqpU:function(e,t,n){"use strict";n.r(t),t.default='## Overview\n\n```ts\n// A simple Action\n\nimport { Action } from "actionhero";\n\nexport class RandomNumber extends Action {\n  constructor() {\n    super();\n    this.name = "randomNumber";\n    this.description = "I am an API method which will generate a random number";\n    this.outputExample = { randomNumber: 0.1234 };\n  }\n\n  async run({ response }) {\n    response.randomNumber = Math.random();\n  }\n}\n```\n\nThe core of Actionhero is the Action framework, and **actions** are the basic units of work. All connection types from all servers can use actions. This means that you only need to write an action once, and both HTTP clients and websocket clients can consume it!\n\nThe goal of an action is to read `data.params` (which are the arguments a connection provides), do work, and set the `data.response` (and `data.response.error` when needed) values to build the response to the client.\n\nYou can create you own actions by placing them in a `./actions/` folder at the `src` directory of your application. You can use the generator with `actionhero generate action --name=myAction`\n\nYou can also define more than one action per file if you would like, and extend classes to share common methods and components (like input parsers).\n\n```js\n// A compound Action with Shared Inputs\n\nimport { Action } from "actionhero";\n\nclass ValidatedAction extends Action {\n  constructor() {\n    super();\n\n    this.inputs = {\n      email: {\n        required: true,\n        validator: this.emailValidator\n      },\n      password: {\n        required: true,\n        validator: this.passwordValidator\n      }\n    };\n  }\n\n  emailValidator(param) {\n    if (param.indexOf("@") < 0) {\n      throw new Error("that is not a valid email address");\n    }\n  }\n\n  passwordValidator(param) {\n    if (param.length <= 4) {\n      throw new Error("password should be at least 4 letters long");\n    }\n  }\n}\n\n// the actions\nexport class UserAdd extends ValidatedAction {\n  constructor() {\n    super();\n    this.name = "userAdd";\n    this.description = "I add a user";\n  }\n\n  run(data) {\n    // your code here\n  }\n}\n\nexport class UserDelete extends ValidatedAction {\n  constructor() {\n    super();\n    this.name = "userDelete";\n    this.description = "I delete a user";\n  }\n\n  run(data) {\n    // your code here\n  }\n}\n```\n\n## Versions\n\nActionhero supports multiple versions of the same action. This will allow you to support actions/routes of the same name with upgraded functionality. To create actions of the same name with various versions, set the `version` parameter.\n\n```js\nimport { Action } from "actionhero";\n\nexport class ActionVersion1 extends Action {\n  constructor() {\n    super();\n    this.name = "randomNumber";\n    this.description = "I am an API method which will generate a random number";\n    this.outputExample = { randomNumber: 0.123 };\n    this.version = 1;\n  }\n\n  async run({ connection, response }) {\n    response.version = 1;\n    response.randomNumber = Math.random();\n  }\n};\n\nexports class ActionVersion2 extends Action {\n  constructor() {\n    super();\n    this.name = "randomNumber";\n    this.description = "I am an API method which will generate a random number";\n    this.outputExample = { randomNumber: 0.123 };\n    this.version = 2;\n  }\n\n  async run({ connection, response }) {\n    response.version = 2;\n    const number = Math.random();\n    response.randomNumber = connection.localize([\n      "Your random number is {{number}}", { number }\n    ]);\n  }\n};\n```\n\n- actions optionally have the `this.version` attribute, which defaults to `1`.\n- a reserved param, `apiVersion` is used to directly specify the version of an action a client may request. You will likely want to check this in your `routes` file\n- if a client doesn\'t specify an `apiVersion`, they will be directed to the highest numerical version of that action.\n\nYou can optionally create routes to handle your API versioning:\n\n_As a note, if a client accessing Actionhero via routes does not provide an apiVersion and it is explicitly defined in the route, the highest number will not be assigned automatically, and will be seen as a routing error._\n\n```js\nexports.routes = {\n  all: [\n    // creates routes like \\`/api/myAction/1/\\` and \\`/api/myAction/2/\\`\n    { path: "/myAction/:apiVersion", action: "myAction" },\n\n    // creates routes like \\`/api/v1/myAction/\\` and \\`/api/v2/myAction/\\`\n    { path: "/v:apiVersion/myAction", action: "myAction" }\n  ]\n};\n```\n\nWe go into more detail about routes when discussing the [web server](/tutorials/web-server)\n\n## Options\n\nThe complete set of options an action can have are:\n\n```js\nimport { Action } from "actionhero";\n\nclass ValidatedAction extends Action {\n  constructor () {\n    super()\n\n    // (required) the action\'s name (the \\`exports\\` key doesn\'t matter)\n    this.name = \'randomNumber\'\n\n    // (required) the description\n    this.description = \'I am an API method which will generate a random number\'\n\n    // (required) a hash of all the inputs this action will accept\n    // any inputs provided to the action not in this hash will be stripped\n    this.inputs = {\n      multiplier: {\n        required: false,\n        validator: (param, connection, actionTemplate) => {\n          if (param < 0) { throw new Error(\'must be > 0\') }\n        },\n        formatter: (param, connection, actionTemplate) => {\n          return parseInt(param)\n        },\n        default: (param, connection, actionTemplate) => {\n          return 1\n        },\n      }\n    },\n\n    // any middleware to apply before/after this action\n    // global middleware will be applied automatically\n    // default []\n    this.middleware = []\n\n    // an example response\n    // default: {}\n    this.outputExample = { randomNumber: 123 }\n\n    // you can choose to block certain servers from using this action\n    // default: []\n    this.blockedConnectionTypes = [\'webSocket\']\n\n    // how should this action be logged?\n    // default: \'info\'\n    this.logLevel = \'warning\'\n\n    // (HTTP only) if the route for this action includes an extension (like .jpg), should the response MIME be adjusted to match?\n    // default: true\n    this.matchExtensionMimeType = true\n\n    // should this action appear within \\`api.documentation\\`\n    // default: true\n    this.toDocument = true\n\n    // (required) the run method of the action\n    async run (data) {\n      data.response.randomNumber = Math.random() * data.params.multiplier;\n    }\n  }\n}\n```\n\n## Inputs\n\n```js\naction.inputs = {\n  // a simple input\n  // defaults assume required = false\n  minimalInput: {}\n\n  // a complex input\n  multiplier: {\n    required: true,\n    validator: (param, connection, actionTemplate) => {\n      if (param < 0) { throw new Error(\'must be > 0\') }\n    },\n    formatter: (param, connection, actionTemplate) => {\n      return parseInt(param);\n    },\n    default: (param, connection, actionTemplate) => {\n      return 1;\n    },\n  },\n\n  // a schema input\n  schemaInput: {\n    required: true,\n    default: {},\n    schema: {\n      nestedInput: {\n        required: true,\n        default: 1,\n        validator: (param, connection, actionTemplate) => {\n          if (param < 0) { throw new Error(\'must be > 0\') }\n        },\n        formatter: (param, connection, actionTemplate) => {\n          return parseInt(param);\n        },\n      },\n      otherInput: {},\n    }\n  }\n};\n```\n\nThe properties of an input are:\n\n- `required` (boolean)\n  - Default: `false`\n- `formatter = function(param, connection, actionTemplate)`\n  - will return the new value of the param\n  - Default: The parameter is not reformatted\n- `default = function(param, connection, actionTemplate)`\n  - will return the default value of the param\n  - you can also have a static assignment for `default` father than a function, ie: `default: 123`\n  - Default: Parameter has no default value\n- `validator = function(param, connection, actionTemplate)`\n  - should return true, null, or undefined (return nothing) if validation passed\n  - should throw an error message if validation fails which will be returned to the client\n  - Default: Parameter is always valid\n- `schema` (object)\n  - optional nested inputs definition\n  - accept `object` similar to regular input\n  - nested input also have properties: `required`, `formatter`, `default` and `validator`\n\nYou can define `config.general.missingParamChecks = [null, \'\', undefined]` to choose explicitly how you want un-set params to be handled in your actions. For example, if you want to allow explicit `null` values in a JSON payload but not `undefined`, you can now opt-in to that behavior. This is what `action.inputs.x.required = true` will check against.</p>\n\nSince all properties of an input are optional, the smallest possible definition of an input is: `name : {}`. However, you should usually specify that an input is required (or not), ie: `{`name: {required: false}`}`.</p>\n\nThe methods `default`, `formatter`, and `validator` have the api object set as `this` within their scopes. This means that you can define common formatters within middleware and reference them in each action.</p>\n\nThe methods are applied in this order:</p>\n\n- `default()`\n- `formatter()`\n- `validator()`\n- `required()`\n\nHere\'s an example...\n\n```js\nmoneyInCents: {\n  required:  true,\n  default:   (p) => { return 0 },\n  formatter: (p) => { return parseFloat(p) },\n  validator: (p) => {\n    if(isNaN(parseFloat(p)){ throw new Error(\'not a number\') }\n    if(p < 0){ throw new Error(\'money cannot be negative\') }\n  }\n}\n```\n\nFormatters and Validators can also be named method names. For example, you might have an action like:\n\n```js\ninputs: {\n  key: {\n    required: true,\n    formatter: \'api.formatter.uniqueKeyName\'\n  }\n}\n```\n\nYou can define `api.formatter.uniqueKeyName` elsewhere in your project.\n\nExample schema input:\n\n```js\ninputs = {\n  firstName: { required: true },\n  lastName: { required: false },\n  username: { required: true },\n  address: {\n    required: false,\n    schema: {\n      country: {\n        required: true,\n        default: "USA"\n      },\n      state: { required: false },\n      city: {\n        required: true,\n        formatter: val => `City:\\${val}`,\n        validator: val => val.length > 10\n      }\n    }\n  }\n};\n```\n\n## Extending the Action class\n\nThere may be times that you want add properties to the Action class. A common reason for this is to work with middleware, adding a property to your action that controls how authentication might work, etc. With typescript, adding arbitrary properties to class (interface) will produce an error, as we don\'t have a type definition for your new property. The way to overcome this is to extend the Action class with your new property.\n\nThe example below creates a new class, `AuthenticatedAction` which adds a boolean `authenticated` to the action. A global action middleware then checks if the action should be `authenticated`, and if it does, it checks for a password.\n\n```ts\nimport { Action, action } from "actionhero";\n\nabstract class AuthenticatedAction extends Action {\n  /**\n   * does this action require the user to be logged in?\n   */\n  authenticated: boolean;\n}\n\naction.addMiddleware({\n  name: "Authentication Middleware",\n  global: true,\n  preProcessor({ params, actionTemplate }) {\n    // we have access to the action\'s template here, which now will contain "authenticated: boolean"\n    if (actionTemplate.authenticated) {\n      if (params.password !== "thePassw0rd") {\n        // it the request does not include the param "password=thePassw0rd", the action will not be run\n        // this is bad authentication strategy, but hopefully serves as a good example\n        throw new Error("bad password");\n      }\n    }\n  }\n});\n\nexport class ShowDashboard extends AuthenticatedAction {\n  constructor() {\n    super();\n    this.name = "showDashboard";\n    this.description = "I return the authenticated user\'s dashboard data";\n    // without the AutheticatedAction class, this would throw an error, as "authenticated" is not a property of the class "Action"\n    this.authenticated = true;\n  }\n\n  async run({ response }) {\n    // your logic would be here...\n    response.dashboard = true;\n  }\n}\n\n/**\n * \u276f curl "http://localhost:8080/api/showDashboard"\n * { "error": "bad password" }\n *\n * \u276f curl "http://localhost:8080/api/showDashboard?password=thePassw0rd"\n * { "dashboard": true }\n */\n```\n\n## The Data Object\n\nThe `data` object passed into your action captures the state of the connection at the time the action was started. Middleware preProcessors have already fired, and input formatting and validation has occurred. Here are the properties of the `data` object.\n\n```js\ndata = {\n  connection: connection,\n  action: "randomNumber",\n  toProcess: true,\n  toRender: true,\n  messageId: 123,\n  params: { action: "randomNumber", apiVersion: 1 },\n  actionStartTime: 123,\n  response: {},\n  session: {}\n};\n```\n\nThe goal of most actions is to do work and then modify the value of `data.response`, which will eventually be sent down to the client.\n\nYou can also modify properties of the connection by accessing `data.connection`, IE changing the response header for a HTTP request.\n\nIf you don\'t want your action to respond to the client, or you have already sent data to the client (perhaps you already rendered a file to them or sent an error HTTP header), you can set `data.toRender = false;`\n\nIf you are certain that your action is only going to be handled by a web server, then a convenience method has been provided to you via `data.connection.setHeader()`. This function is a proxy to the <a href=\'https://nodejs.org/api/http.html#http_response_setheader_name_value\'>Node HTTP Response setHeader</a> function and allows you to set response headers without having to drill into the `data.connection.rawConnection` object. Please be aware, the `data.connection.setHeader()` function will only be available if your action is being handled by a web server. Other server types will throw an exception. See [Servers: Customizing the Connection](/tutorial/servers) for more details.\n\nSimilarly to the above, the web server also exposes `data.connection.setStatusCode()`, again only for actions in use by the web server. This can be used as a helper to set the HTTP responses\' status code, ie: 404, 200, etc.\n\nFinally, if your action is again only for the web server, you can send a string or buffer as a file response with `data.connection.pipe(buffer, headers)`. You will still need to set `data.toRender = false` in your action to avoid double-sending a response to the client.\n\n## Middleware\n\nYou can create middleware which would apply to the connection both before and after an action. Middleware can be either global (applied to all actions) or local, specified in each action via `action.middleware = []`. Supply the `names` of any middleware you want to use.\n\nYou can [learn more about middleware here](/tutorials/middleware).\n\n## Notes\n\n- Actions\' run methods are async, and have `data` as their only argument. Completing an action is as simple returning from the method.\n- If you throw an error, be sure that it is a `new Error()` object, and not a string. Thrown errors will automatically be sent to the client in `response.error`. Also, throw Errors are processed at `config/errors.js` in `genericError(data, error)`. Here you can check your error add to the response (`requestIds`, status codes, etc.)\n- The metadata `outputExample` is used in reflexive and self-documenting actions in the API, available via the `documentation` verb (and showDocumentation action).\n- You can limit how many actions a persistent client (websocket, tcp, etc) can have pending at once with `api.config.general.simultaneousActions`\n- `actions.inputs` are used for both documentation and for building the whitelist of allowed parameters the API will accept. Client params not included in these whitelists will be ignored for security. If you wish to disable the whitelisting you can use the flag at `api.config.general.disableParamScrubbing`. Note that [Middleware](tutorial-middleware.html) preProcessors will always have access to all params pre-scrubbing.\n- `matchExtensionMimeType` is currently only used by the `web` server, and it indicates that if this action is successfully called by a client with `connection.extension` set, the headers of the response should be changed to match that file type. This is useful when creating actions that download files.\n- Actionhero strives to keep the `data.connection` object uniform among various client types, and more importantly, present `data.params` in a homogeneous way to actions. You can inspect `data.connection.type` to learn more about the connection. The gory details of the connection (which vary on its type) are stored in `data.connection.rawConnection` which will contain the websocket, tcp connection, etc. For web clients, `{`data.connection.rawConnection = {req: req, res: res}`}` for example.\n\n[You can learn more about handling HTTP verbs and file uploads here](/tutorials/web-server) and [Web-Socket Clients](/tutorials/websocket-server).\n'},yp27:function(e,t,n){"use strict";var o=n("dE4g"),r=["area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","menuitem","textarea"];e.exports=function(){return{processDefaultNode:function(e,t,n){return"text"===e.type?e.data:"comment"!==e.type&&(r.indexOf(e.name)>-1?o.createElement(e,n):o.createElement(e,n,e.data,t))}}}},zK1H:function(e,t,n){"use strict";var o=n("U6jy"),r=n("cBNe");e.exports=function(){var e,t=String(this.file),n={line:1,column:1,offset:0},s=o(n);65279===(t=t.replace(a,i)).charCodeAt(0)&&(t=t.slice(1),s.column++,s.offset++);e={type:"root",children:this.tokenizeBlock(t,s),position:{start:n,end:this.eof||o(n)}},this.options.position||r(e,!0);return e};var i="\n",a=/\r\n|\r/g},zp1R:function(e,t,n){var o={"./actions.md":"xqpU","./cache.md":"CZTX","./chat.md":"UA6O","./cli.md":"t75/","./cluster.md":"n3PV","./config.md":"L2P7","./file-server.md":"ml/Y","./initializers.md":"/di2","./localization.md":"TJNC","./logging.md":"frcp","./middleware.md":"ouk7","./plugins.md":"l9Wp","./production-notes.md":"GQt6","./repl-and-debugging.md":"1AgE","./running-actionhero.md":"N9hA","./servers.md":"kc8F","./tasks.md":"90pR","./testing.md":"uWV0","./typescript.md":"ZNil","./upgrade-path.md":"BoY+","./web-server.md":"20v3","./websocket-server.md":"1Iev"};function r(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=i,e.exports=r,r.id="zp1R"}},[["Y6DX",0,2,1,3,4,5]]]);